{"backend_state":"running","connection_file":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/.local/share/jupyter/runtime/kernel-4d5ba103-4099-437e-b01e-49c1877847ef.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"end":1656524944995,"exec_count":85,"id":"752d7e","input":"import pandas as pd","kernel":"ds_env","pos":0,"start":1656524944992,"state":"done","type":"cell"}
{"end":1656525043229,"exec_count":93,"id":"85393a","input":"import plotly.express as px","kernel":"ds_env","pos":2.5,"start":1656525043226,"state":"done","type":"cell"}
{"end":1656527125091,"exec_count":185,"id":"420254","input":"import seaborn as sns\nimport matplotlib.pyplot as plt","kernel":"ds_env","pos":1,"start":1656527125060,"state":"done","type":"cell"}
{"end":1656527994238,"exec_count":235,"id":"0bee0c","input":"#Proportion of exited and non-exited people\nsns.countplot(data=churndf, x = 'Exited').set(title='Proportion of exited and non-exited people');","kernel":"ds_env","output":{"0":{"data":{"image/png":"8c7592d5855757cdf862dd8ab767cf6a9e612426","text/plain":"<Figure size 576x396 with 1 Axes>"}}},"pos":6,"start":1656527994101,"state":"done","type":"cell"}
{"end":1656528035143,"exec_count":239,"id":"f9a3c3","input":"#Relation of the coutry with exited column\nfig, axes = plt.subplots(1,2)\n\nsns.countplot(data=churndf, x = 'Geography', hue = 'Exited', ax = axes[0]).set(title='Countries in relation to Exited')\nsns.countplot(data = churndf, x = 'Geography', ax = axes[1]).set(title='Countries');","kernel":"ds_env","output":{"0":{"data":{"image/png":"2fa16748604e32cfa8477ec0bb898be4dde60895","text/plain":"<Figure size 576x396 with 2 Axes>"}}},"pos":8,"start":1656528034771,"state":"done","type":"cell"}
{"end":1656528042278,"exec_count":240,"id":"42b3f7","input":"#Buying different number of products in relation to exited\nsns.countplot(data=churndf, x='NumOfProducts', hue='Exited').set(title='Different number of products bought vs. People who exited');","kernel":"ds_env","output":{"0":{"data":{"image/png":"9fa57621a668ed17ffd34fc2a853b640d8443f57","text/plain":"<Figure size 576x396 with 1 Axes>"}}},"pos":10,"start":1656528042127,"state":"done","type":"cell"}
{"end":1656528243514,"exec_count":245,"id":"a2aaa7","input":"churndf = pd.read_csv('Churn_Modelling.csv')","kernel":"ds_env","pos":3,"start":1656528243475,"state":"done","type":"cell"}
{"end":1656528706873,"exec_count":258,"id":"5370f2","input":"corr = churndf.corr()\nplt.figure(figsize=(10,10))\nsns.heatmap(corr, cmap='YlGnBu', annot = True)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":258},"1":{"data":{"image/png":"bc458fa62b1e3c542faa8bd7456e7677181efb6c","text/plain":"<Figure size 720x720 with 2 Axes>"}}},"pos":8.5,"start":1656528705979,"state":"done","type":"cell"}
{"end":1656528821294,"exec_count":260,"id":"aaaf2c","input":"#Relation of age with exited column\nplt.figure(figsize=(15,10))\nsns.countplot(data = churndf , x = 'Age', hue = 'Exited').set(title = 'Age vs. Exited');\n#There's no relation of age with exited","kernel":"ds_env","output":{"0":{"data":{"image/png":"d1ea9c2b3a8b2e3a525c58619959de956ccb62d9","text/plain":"<Figure size 1080x720 with 1 Axes>"}}},"pos":7,"start":1656528819709,"state":"done","type":"cell"}
{"end":1656528880492,"id":"0b0183","input":"#Drop unnecessary columns\ncolumns_to_drop = ['RowNumber', 'CustomerId', 'Surname']\nchurndf.drop(columns_to_drop, axis=1, inplace = True)","kernel":"ds_env","pos":11,"scrolled":true,"start":1656528880391,"state":"done","type":"cell"}
{"end":1656528896723,"exec_count":262,"id":"836172","input":"len(churndf[(churndf['NumOfProducts'] == 4) & (churndf['Exited'] == 0)])","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0"},"exec_count":262}},"pos":9.5,"start":1656528896717,"state":"done","type":"cell"}
{"exec_count":252,"id":"efe05b","input":"\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pylab as plt\nplt.style.use(\"seaborn\")\n \n \nplt.figure(figsize=(5,5))\nheat_map = sns.heatmap(churn_df, linewidth = 2 , annot = True)\nplt.title( \"Seaborn HeatMap\" )\nplt.show()","kernel":"ds_env","output":{"0":{"ename":"ValueError","evalue":"could not convert string to float: 'France'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","Input \u001b[0;32mIn [252]\u001b[0m, in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m plt\u001b[38;5;241m.\u001b[39mstyle\u001b[38;5;241m.\u001b[39muse(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mseaborn\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m      7\u001b[0m plt\u001b[38;5;241m.\u001b[39mfigure(figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m5\u001b[39m,\u001b[38;5;241m5\u001b[39m))\n\u001b[0;32m----> 8\u001b[0m heat_map \u001b[38;5;241m=\u001b[39m \u001b[43msns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mheatmap\u001b[49m\u001b[43m(\u001b[49m\u001b[43m \u001b[49m\u001b[43mchurn_df\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlinewidth\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;241;43m2\u001b[39;49m\u001b[43m \u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mannot\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\n\u001b[1;32m      9\u001b[0m plt\u001b[38;5;241m.\u001b[39mtitle( \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mSeaborn HeatMap\u001b[39m\u001b[38;5;124m\"\u001b[39m )\n\u001b[1;32m     10\u001b[0m plt\u001b[38;5;241m.\u001b[39mshow()\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:46\u001b[0m, in \u001b[0;36m_deprecate_positional_args.<locals>.inner_f\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     36\u001b[0m     warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[1;32m     37\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mPass the following variable\u001b[39m\u001b[38;5;132;01m{}\u001b[39;00m\u001b[38;5;124m as \u001b[39m\u001b[38;5;132;01m{}\u001b[39;00m\u001b[38;5;124mkeyword arg\u001b[39m\u001b[38;5;132;01m{}\u001b[39;00m\u001b[38;5;124m: \u001b[39m\u001b[38;5;132;01m{}\u001b[39;00m\u001b[38;5;124m. \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m     38\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mFrom version 0.12, the only valid positional argument \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     43\u001b[0m         \u001b[38;5;167;01mFutureWarning\u001b[39;00m\n\u001b[1;32m     44\u001b[0m     )\n\u001b[1;32m     45\u001b[0m kwargs\u001b[38;5;241m.\u001b[39mupdate({k: arg \u001b[38;5;28;01mfor\u001b[39;00m k, arg \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mzip\u001b[39m(sig\u001b[38;5;241m.\u001b[39mparameters, args)})\n\u001b[0;32m---> 46\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mf\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/matrix.py:540\u001b[0m, in \u001b[0;36mheatmap\u001b[0;34m(data, vmin, vmax, cmap, center, robust, annot, fmt, annot_kws, linewidths, linecolor, cbar, cbar_kws, cbar_ax, square, xticklabels, yticklabels, mask, ax, **kwargs)\u001b[0m\n\u001b[1;32m    362\u001b[0m \u001b[38;5;124;03m\"\"\"Plot rectangular data as a color-encoded matrix.\u001b[39;00m\n\u001b[1;32m    363\u001b[0m \n\u001b[1;32m    364\u001b[0m \u001b[38;5;124;03mThis is an Axes-level function and will draw the heatmap into the\u001b[39;00m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    537\u001b[0m \u001b[38;5;124;03m    ...     ax = sns.heatmap(corr, mask=mask, vmax=.3, square=True)\u001b[39;00m\n\u001b[1;32m    538\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    539\u001b[0m \u001b[38;5;66;03m# Initialize the plotter object\u001b[39;00m\n\u001b[0;32m--> 540\u001b[0m plotter \u001b[38;5;241m=\u001b[39m \u001b[43m_HeatMapper\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdata\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvmin\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvmax\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcmap\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcenter\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrobust\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mannot\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfmt\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    541\u001b[0m \u001b[43m                      \u001b[49m\u001b[43mannot_kws\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcbar\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcbar_kws\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mxticklabels\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    542\u001b[0m \u001b[43m                      \u001b[49m\u001b[43myticklabels\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmask\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    544\u001b[0m \u001b[38;5;66;03m# Add the pcolormesh kwargs here\u001b[39;00m\n\u001b[1;32m    545\u001b[0m kwargs[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mlinewidths\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m linewidths\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/matrix.py:159\u001b[0m, in \u001b[0;36m_HeatMapper.__init__\u001b[0;34m(self, data, vmin, vmax, cmap, center, robust, annot, fmt, annot_kws, cbar, cbar_kws, xticklabels, yticklabels, mask)\u001b[0m\n\u001b[1;32m    156\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mylabel \u001b[38;5;241m=\u001b[39m ylabel \u001b[38;5;28;01mif\u001b[39;00m ylabel \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;28;01melse\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    158\u001b[0m \u001b[38;5;66;03m# Determine good default values for the colormapping\u001b[39;00m\n\u001b[0;32m--> 159\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_determine_cmap_params\u001b[49m\u001b[43m(\u001b[49m\u001b[43mplot_data\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvmin\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvmax\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    160\u001b[0m \u001b[43m                            \u001b[49m\u001b[43mcmap\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcenter\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrobust\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    162\u001b[0m \u001b[38;5;66;03m# Sort out the annotations\u001b[39;00m\n\u001b[1;32m    163\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m annot \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;129;01mor\u001b[39;00m annot \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mFalse\u001b[39;00m:\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/matrix.py:193\u001b[0m, in \u001b[0;36m_HeatMapper._determine_cmap_params\u001b[0;34m(self, plot_data, vmin, vmax, cmap, center, robust)\u001b[0m\n\u001b[1;32m    190\u001b[0m \u001b[38;5;124;03m\"\"\"Use some heuristics to set good defaults for colorbar and range.\"\"\"\u001b[39;00m\n\u001b[1;32m    192\u001b[0m \u001b[38;5;66;03m# plot_data is a np.ma.array instance\u001b[39;00m\n\u001b[0;32m--> 193\u001b[0m calc_data \u001b[38;5;241m=\u001b[39m \u001b[43mplot_data\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mastype\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mfloat\u001b[39;49m\u001b[43m)\u001b[49m\u001b[38;5;241m.\u001b[39mfilled(np\u001b[38;5;241m.\u001b[39mnan)\n\u001b[1;32m    194\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m vmin \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    195\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m robust:\n","\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'France'"]},"1":{"data":{"text/plain":"<Figure size 360x360 with 0 Axes>"}}},"pos":9,"state":"done","type":"cell"}
{"exec_count":263,"id":"8128dd","input":"#Relationship between tenure and exited\nsns.countplot(data=churndf, x='Tenure', hue='Exited').set(title='Tenure vs. People who exited');","kernel":"ds_env","output":{"0":{"data":{"image/png":"8a96846cd78a9d0c553a083c81d9fa126da6d71e","text/plain":"<Figure size 576x396 with 1 Axes>"}}},"pos":16,"state":"done","type":"cell"}
{"id":"25731a","input":"#Make visuals more interactive and informative","kernel":"ds_env","pos":13,"type":"cell"}
{"id":"4a969e","input":"#Explore etc.","kernel":"ds_env","pos":12,"type":"cell"}
{"id":"a1680f","input":"","pos":17,"type":"cell"}
{"id":"cc83d4","input":"#Missing value columns\nchurndf.info() #No missing value columns","kernel":"ds_env","pos":5,"scrolled":true,"state":"done","type":"cell"}
{"id":0,"time":1656525859215,"type":"user"}
{"last_load":1656516814583,"type":"file"}