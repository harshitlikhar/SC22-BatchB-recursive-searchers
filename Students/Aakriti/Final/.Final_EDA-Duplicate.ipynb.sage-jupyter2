{"backend_state":"running","connection_file":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/.local/share/jupyter/runtime/kernel-552c20c0-2766-4322-8fe2-65c4cd3a8587.json","kernel":"ds_env","kernel_error":"","kernel_state":"busy","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1657638260558,"exec_count":10,"id":"710701","input":"import graphviz\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import tree\nfrom sklearn.model_selection import GridSearchCV","kernel":"ds_env","pos":65,"scrolled":true,"start":1657638260501,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639145026,"exec_count":18,"id":"535c23","input":"import pandas as pd # Data manipulation\nimport numpy as np # mathemetical operations\nimport seaborn as sns # Data visualization\nimport matplotlib.pyplot as plt # Data visualization\nimport plotly.express as px # Data visualization\n\nfrom sklearn.metrics import recall_score\n\nimport warnings\nwarnings.filterwarnings(\"ignore\") #to ignore the warnings\nfrom sklearn.datasets import load_iris","kernel":"ds_env","pos":7,"start":1657639145010,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639145488,"exec_count":19,"id":"cc4209","input":"from sklearn import preprocessing\n\nstandard = preprocessing.scale(X_data)\nprint(standard)","kernel":"ds_env","output":{"0":{"ename":"NameError","evalue":"name 'X_data' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [19]\u001b[0m, in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m preprocessing\n\u001b[0;32m----> 3\u001b[0m standard \u001b[38;5;241m=\u001b[39m preprocessing\u001b[38;5;241m.\u001b[39mscale(\u001b[43mX_data\u001b[49m)\n\u001b[1;32m      4\u001b[0m \u001b[38;5;28mprint\u001b[39m(standard)\n","\u001b[0;31mNameError\u001b[0m: name 'X_data' is not defined"]}},"pos":8,"start":1657639145470,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639146602,"exec_count":20,"id":"17532a","input":"churndf = pd.read_csv('data/Churn_Modelling.csv')","kernel":"ds_env","pos":10,"start":1657639146565,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639147175,"exec_count":21,"id":"04cd2b","input":"churndf.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>RowNumber</th>\n      <th>CustomerId</th>\n      <th>Surname</th>\n      <th>CreditScore</th>\n      <th>Geography</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>15634602</td>\n      <td>Hargrave</td>\n      <td>619</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>15647311</td>\n      <td>Hill</td>\n      <td>608</td>\n      <td>Spain</td>\n      <td>Female</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>15619304</td>\n      <td>Onio</td>\n      <td>502</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>15701354</td>\n      <td>Boni</td>\n      <td>699</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>15737888</td>\n      <td>Mitchell</td>\n      <td>850</td>\n      <td>Spain</td>\n      <td>Female</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n0          1    15634602  Hargrave          619    France  Female   42   \n1          2    15647311      Hill          608     Spain  Female   41   \n2          3    15619304      Onio          502    France  Female   42   \n3          4    15701354      Boni          699    France  Female   39   \n4          5    15737888  Mitchell          850     Spain  Female   43   \n\n   Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n0       2       0.00              1          1               1   \n1       1   83807.86              1          0               1   \n2       8  159660.80              3          1               0   \n3       1       0.00              2          0               0   \n4       2  125510.82              1          1               1   \n\n   EstimatedSalary  Exited  \n0        101348.88       1  \n1        112542.58       0  \n2        113931.57       1  \n3         93826.63       0  \n4         79084.10       0  "},"exec_count":21}},"pos":11,"start":1657639147153,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639148128,"exec_count":22,"id":"041789","input":"churndf.info()","kernel":"ds_env","output":{"0":{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 20000 entries, 0 to 19999\nData columns (total 14 columns):\n #   Column           Non-Null Count  Dtype  \n---  ------           --------------  -----  \n 0   RowNumber        20000 non-null  int64  \n 1   CustomerId       20000 non-null  int64  \n 2   Surname          20000 non-null  object \n 3   CreditScore      20000 non-null  int64  \n 4   Geography        20000 non-null  object \n 5   Gender           20000 non-null  object \n 6   Age              20000 non-null  int64  \n 7   Tenure           20000 non-null  int64  \n 8   Balance          20000 non-null  float64\n 9   NumOfProducts    20000 non-null  int64  \n 10  HasCrCard        20000 non-null  int64  \n 11  IsActiveMember   20000 non-null  int64  \n 12  EstimatedSalary  20000 non-null  float64\n 13  Exited           20000 non-null  int64  \ndtypes: float64(2), int64(9), object(3)\nmemory usage: 2.1+ MB\n"}},"pos":13,"start":1657639148102,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639149204,"exec_count":23,"id":"53e66a","input":"churndf.describe()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>RowNumber</th>\n      <th>CustomerId</th>\n      <th>CreditScore</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>20000.000000</td>\n      <td>2.000000e+04</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n      <td>20000.00000</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>5000.500000</td>\n      <td>1.569094e+07</td>\n      <td>650.528800</td>\n      <td>38.921800</td>\n      <td>5.012800</td>\n      <td>76485.889288</td>\n      <td>1.53020</td>\n      <td>0.705500</td>\n      <td>0.515100</td>\n      <td>100090.239881</td>\n      <td>0.203700</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>2886.823503</td>\n      <td>7.193439e+04</td>\n      <td>96.650882</td>\n      <td>10.487544</td>\n      <td>2.892102</td>\n      <td>62395.845170</td>\n      <td>0.58164</td>\n      <td>0.455829</td>\n      <td>0.499784</td>\n      <td>57509.054966</td>\n      <td>0.402759</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>1.556570e+07</td>\n      <td>350.000000</td>\n      <td>18.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>11.580000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2500.750000</td>\n      <td>1.562853e+07</td>\n      <td>584.000000</td>\n      <td>32.000000</td>\n      <td>3.000000</td>\n      <td>0.000000</td>\n      <td>1.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>51002.110000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>5000.500000</td>\n      <td>1.569074e+07</td>\n      <td>652.000000</td>\n      <td>37.000000</td>\n      <td>5.000000</td>\n      <td>97198.540000</td>\n      <td>1.00000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>100193.915000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>7500.250000</td>\n      <td>1.575323e+07</td>\n      <td>718.000000</td>\n      <td>44.000000</td>\n      <td>7.000000</td>\n      <td>127644.240000</td>\n      <td>2.00000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>149388.247500</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>10000.000000</td>\n      <td>1.581569e+07</td>\n      <td>850.000000</td>\n      <td>92.000000</td>\n      <td>10.000000</td>\n      <td>250898.090000</td>\n      <td>4.00000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>199992.480000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"          RowNumber    CustomerId   CreditScore           Age        Tenure  \\\ncount  20000.000000  2.000000e+04  20000.000000  20000.000000  20000.000000   \nmean    5000.500000  1.569094e+07    650.528800     38.921800      5.012800   \nstd     2886.823503  7.193439e+04     96.650882     10.487544      2.892102   \nmin        1.000000  1.556570e+07    350.000000     18.000000      0.000000   \n25%     2500.750000  1.562853e+07    584.000000     32.000000      3.000000   \n50%     5000.500000  1.569074e+07    652.000000     37.000000      5.000000   \n75%     7500.250000  1.575323e+07    718.000000     44.000000      7.000000   \nmax    10000.000000  1.581569e+07    850.000000     92.000000     10.000000   \n\n             Balance  NumOfProducts     HasCrCard  IsActiveMember  \\\ncount   20000.000000    20000.00000  20000.000000    20000.000000   \nmean    76485.889288        1.53020      0.705500        0.515100   \nstd     62395.845170        0.58164      0.455829        0.499784   \nmin         0.000000        1.00000      0.000000        0.000000   \n25%         0.000000        1.00000      0.000000        0.000000   \n50%     97198.540000        1.00000      1.000000        1.000000   \n75%    127644.240000        2.00000      1.000000        1.000000   \nmax    250898.090000        4.00000      1.000000        1.000000   \n\n       EstimatedSalary        Exited  \ncount     20000.000000  20000.000000  \nmean     100090.239881      0.203700  \nstd       57509.054966      0.402759  \nmin          11.580000      0.000000  \n25%       51002.110000      0.000000  \n50%      100193.915000      0.000000  \n75%      149388.247500      0.000000  \nmax      199992.480000      1.000000  "},"exec_count":23}},"pos":15,"start":1657639149168,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639150318,"exec_count":24,"id":"269ff5","input":"columns_to_drop = ['RowNumber', 'CustomerId', 'Surname']\nchurndf.drop(columns_to_drop, axis=1, inplace = True)","kernel":"ds_env","pos":17,"start":1657639150305,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639156942,"exec_count":25,"id":"b8a222","input":"dummies = pd.get_dummies(churndf[\"Gender\"])\ndummies.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Female</th>\n      <th>Male</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Female  Male\n0       1     0\n1       1     0\n2       1     0\n3       1     0\n4       1     0"},"exec_count":25}},"pos":33,"start":1657639156932,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639157352,"exec_count":26,"id":"dc8c50","input":"churndf[\"Gender\"] = dummies[\"Male\"]\nchurndf.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CreditScore</th>\n      <th>Geography</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>619</td>\n      <td>France</td>\n      <td>0</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>608</td>\n      <td>Spain</td>\n      <td>0</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>502</td>\n      <td>France</td>\n      <td>0</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>699</td>\n      <td>France</td>\n      <td>0</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>850</td>\n      <td>Spain</td>\n      <td>0</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   CreditScore Geography  Gender  Age  Tenure    Balance  NumOfProducts  \\\n0          619    France       0   42       2       0.00              1   \n1          608     Spain       0   41       1   83807.86              1   \n2          502    France       0   42       8  159660.80              3   \n3          699    France       0   39       1       0.00              2   \n4          850     Spain       0   43       2  125510.82              1   \n\n   HasCrCard  IsActiveMember  EstimatedSalary  Exited  \n0          1               1        101348.88       1  \n1          0               1        112542.58       0  \n2          1               0        113931.57       1  \n3          0               0         93826.63       0  \n4          1               1         79084.10       0  "},"exec_count":26}},"pos":34,"start":1657639157337,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639157907,"exec_count":27,"id":"172a90","input":"dummies2 = pd.get_dummies(churndf[\"Geography\"])\ndummies2.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>France</th>\n      <th>Germany</th>\n      <th>Spain</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   France  Germany  Spain\n0       1        0      0\n1       0        0      1\n2       1        0      0\n3       1        0      0\n4       0        0      1"},"exec_count":27}},"pos":35,"start":1657639157895,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639158401,"exec_count":28,"id":"61f398","input":"churndf['France'] = dummies2['France']\nchurndf['Spain'] = dummies2['Spain']\nchurndf['Germany'] = dummies2['Germany']","kernel":"ds_env","pos":36,"start":1657639158393,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639161409,"exec_count":29,"id":"dc3a53","input":"churndf.drop(['Geography'],axis = 1, inplace = True)","kernel":"ds_env","pos":37,"start":1657639161404,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639161939,"exec_count":30,"id":"579238","input":"X = churndf.loc[:, churndf.columns != \"Exited\"]\nY = churndf['Exited']","kernel":"ds_env","pos":38,"start":1657639161927,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639162752,"exec_count":31,"id":"bf096b","input":"from sklearn.metrics import accuracy_score,plot_precision_recall_curve, plot_roc_curve, ConfusionMatrixDisplay, auc, roc_auc_score, classification_report, confusion_matrix","kernel":"ds_env","pos":39,"start":1657639162741,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639163810,"exec_count":32,"id":"37714a","input":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=42, stratify = Y)","kernel":"ds_env","pos":41,"start":1657639163794,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639186376,"exec_count":34,"id":"d9822e","input":"from sklearn.svm import SVC","kernel":"ds_env","pos":74,"start":1657639186372,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639209428,"exec_count":36,"id":"358c58","input":"sv = SVC()\nsv.fit(x_train, y_train)\ny_pred_svc = sv.predict(x_test)","kernel":"ds_env","pos":75,"start":1657639200920,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639215508,"exec_count":37,"id":"55d3d0","input":"sns.heatmap(confusion_matrix(y_test, y_pred_svc), annot=True, fmt='g')","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":37},"1":{"data":{"image/png":"b493731567da60e66991a5225b011cea173d128a","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":76,"start":1657639215220,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639228412,"exec_count":38,"id":"82ae89","input":"treeClassifier = DecisionTreeClassifier(max_depth=5)\ntreeClassifier.fit(x_train, y_train)\n\ndata = tree.export_graphviz(treeClassifier, class_names=['0', '1'], out_file=None)\ngraph = graphviz.Source(data)\ngraph","kernel":"ds_env","output":{"0":{"data":{"image/svg+xml":"212682beceed9a474892147dfa63453b52389593","text/plain":"<graphviz.sources.Source at 0x7f2e80683d30>"},"exec_count":38}},"pos":66,"start":1657639228289,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639232022,"exec_count":39,"id":"867527","input":"y_pred_dt = treeClassifier.predict(x_test)","kernel":"ds_env","pos":67,"start":1657639232016,"state":"done","type":"cell"}
{"cell_type":"code","end":1657639232461,"exec_count":40,"id":"f5bb12","input":"param_grid = {'C': [0.1, 1, 10, 100],  \n              'gamma': [1, 0.1, 0.01, 0.001, 0.0001], \n              'gamma':['scale', 'auto'],\n              'kernel': ['linear']}\ngrid = GridSearchCV(SVC(), param_grid, refit = True, verbose = 3,n_jobs=-1)","kernel":"ds_env","pos":68,"start":1657639232453,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"15e249","input":"","pos":85,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"1d1ec6","input":"","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"2b7a39","input":"fig = px.imshow(log_reg_cf,text_auto=True, labels=dict(x=\"Predicted Values\", y=\"Actual Values\"), \n                x=['Not Churn','Churn'],\n                y=['Not Churn','Churn'],\n                color_continuous_scale=\"Blues\")\nfig.update_layout(height=600, width=800, title_text=\"Confusion Matrix: Support Vector Machine\")\nfig.show()\nfig.write_html(\"svc_reg_cf.html\")","pos":79,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"6d2a64","input":"","pos":96,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"89643c","input":"","pos":95,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b9032b","input":"","pos":80,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d438ec","input":"svc_reg_cf","pos":78,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"db8902","input":"svc_reg_cf = confusion_matrix(y_test, y_pred_log)","pos":77,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f0a642","input":"clf = rfc(n_estimators = 100)\n\nclf.fit(X_train, y_train)","pos":84,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"adf5b0","input":"corr = churndf.corr()\nplt.figure(figsize=(10,10))\nsns.heatmap(corr, cmap='YlGnBu', annot = True).set_title('Correlation between variables',fontdict= { 'fontsize': 14, 'fontweight':'bold'});","output":{"0":{"data":{"image/png":"c00d39f3bd9d38e79335fa2b4499cd984cf885a6","text/plain":"<Figure size 720x720 with 2 Axes>"},"exec_count":13,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"266d35","input":"plt.figure(figsize=(9,5))\nax = sns.barplot(x='Exited', y='Exited', estimator=lambda x: len(x) / len(churndf) * 100, data=churndf, palette = 'Blues')\nax.bar_label(ax.containers[0], fmt='%.f%%')\nax.set_ylabel('%')\nax.set_title('Percentage of exited to non-exited customers',fontdict= { 'fontsize': 14, 'fontweight':'bold'});","output":{"0":{"data":{"image/png":"83f36961e895b04cae1f676cbd0fba51d05353fc","text/plain":"<Figure size 648x360 with 1 Axes>"},"exec_count":14,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"550728","input":"fig, axes = plt.subplots(3,2)\nsns.set({'figure.figsize':(12,20)});\nsns.countplot(data = churndf, x = 'Gender', hue = 'Exited', ax = axes [0,0], palette = 'Purples').set_title('Gender to exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.countplot(data = churndf, x = 'HasCrCard', hue = 'Exited', ax = axes [0,1], palette = 'Reds').set_title('Has Credit Card or not to exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.countplot(data = churndf, x = 'IsActiveMember', hue = 'Exited', ax = axes [1,0], palette = 'Oranges').set_title('Active or not to exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.countplot(data = churndf, x = 'NumOfProducts', hue = 'Exited', ax = axes [1,1], palette = 'Blues').set_title('Products to exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.countplot(data=churndf, x = 'Geography', hue = 'Exited', ax = axes[2,0], palette = 'Greens').set_title('Countries in relation to Exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.countplot(data = churndf, x = 'Geography', ax = axes[2,1], palette = 'Purples').set_title('Countries',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nfig.tight_layout();","output":{"0":{"data":{"image/png":"167579f12076260f72447cd7f095b4f7d271b881","text/plain":"<Figure size 432x288 with 6 Axes>"},"exec_count":15,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"40c865","input":"fig, axes = plt.subplots(1,4)\nsns.set({'figure.figsize':(13,5)});\nsns.boxplot(data = churndf, x = 'Exited', y = 'Age', ax = axes[0], palette = 'Greens').set_title('Age to Exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.boxplot(data = churndf, x = 'Exited', y = 'EstimatedSalary', ax = axes [1], palette = 'Reds').set_title('Estimated Salary to Exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.boxplot(data = churndf, x = 'Exited', y = 'Balance', ax = axes [2], palette = 'Oranges').set_title('Balance to Exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.boxplot(data = churndf, x = 'Exited', y = 'Tenure', ax = axes [3], palette = 'Blues').set_title('Tenure to Exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'});\nfig.tight_layout()","output":{"0":{"data":{"image/png":"8078da4ca9867c1a55b54781215f5f2accdb35f4","text/plain":"<Figure size 864x1440 with 4 Axes>"},"exec_count":16,"output_type":"execute_result"}},"pos":27,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"b55ed9","input":"plt.figure(figsize=(18,8))\nsns.scatterplot(x=\"Age\", y=\"Balance\", hue='Exited', data=churndf) #Importing three variables\nplt.title('Relation of Exited, Age and Balance', fontsize=15, fontweight='bold') #Named and colored the plot\nplt.xticks(fontsize=16)\nplt.yticks(fontsize=16)\nplt.show()","output":{"0":{"data":{"image/png":"56d16a9946b9c9a3d1b4dc6bc1cb464e2d0370fa","text/plain":"<Figure size 1296x576 with 1 Axes>"},"exec_count":17,"output_type":"execute_result"}},"pos":29,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":242,"id":"526c04","input":"from sklearn.naive_bayes import GaussianNB\ngnb = GaussianNB()\ngnb.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-22 {color: black;background-color: white;}#sk-container-id-22 pre{padding: 0;}#sk-container-id-22 div.sk-toggleable {background-color: white;}#sk-container-id-22 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-22 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-22 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-22 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-22 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-22 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-22 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-22 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-22 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-22 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-22 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-22 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-22 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-22 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-22 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-22 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-22 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-22 div.sk-item {position: relative;z-index: 1;}#sk-container-id-22 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-22 div.sk-item::before, #sk-container-id-22 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-22 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-22 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-22 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-22 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-22 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-22 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-22 div.sk-label-container {text-align: center;}#sk-container-id-22 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-22 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-22\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-22\" type=\"checkbox\" checked><label for=\"sk-estimator-id-22\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GaussianNB</label><div class=\"sk-toggleable__content\"><pre>GaussianNB()</pre></div></div></div></div></div>","text/plain":"GaussianNB()"},"exec_count":242,"output_type":"execute_result"}},"pos":59,"type":"cell"}
{"cell_type":"code","exec_count":243,"id":"c4b38c","input":"y_pred_gnb = gnb.predict(x_test)","pos":60,"type":"cell"}
{"cell_type":"code","exec_count":244,"id":"2657da","input":"print(\"Gaussian Naive Bayes model accuracy(in %):\", metrics.accuracy_score(y_test, y_pred_gnb)*100)","output":{"0":{"name":"stdout","output_type":"stream","text":"Gaussian Naive Bayes model accuracy(in %): 80.55\n"}},"pos":61,"type":"cell"}
{"cell_type":"code","exec_count":245,"id":"b6d4f6","input":"recall_score(y_test, y_pred_knn)","output":{"0":{"data":{"text/plain":"0.17095115681233933"},"exec_count":245,"output_type":"execute_result"}},"pos":62,"type":"cell"}
{"cell_type":"code","exec_count":246,"id":"dbffb1","input":"sns.heatmap(confusion_matrix(y_test, y_pred_knn), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":246,"output_type":"execute_result"},"1":{"data":{"image/png":"45f50bdd38fb4f6a5ebd2c25b7b128b0bb07feec","text/plain":"<Figure size 432x288 with 2 Axes>"},"exec_count":246,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":63,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"0053df","input":"parameters = {\n    'penalty' : ['l1','l2','elasticnet'], \n    'C'       : [0.001,0.01,0.1,1,10,100],\n    'solver'  : ['newton-cg', 'lbfgs', 'liblinear'],\n}\n\n\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.linear_model import LogisticRegression\ngrid={\"C\":np.logspace(-3,3,7), \"penalty\":[\"l1\",\"l2\"]}\nlog = LogisticRegression()\nlog_cv=GridSearchCV(log,grid,cv=10)\nlog_cv.fit(x_train,y_train)\n\nprint(\"tuned hpyerparameters :(best parameters) \",log_cv.best_params_)\nprint(\"accuracy :\",log_cv.best_score_)","output":{"0":{"name":"stdout","output_type":"stream","text":"tuned hpyerparameters :(best parameters)  {'C': 0.001, 'penalty': 'l2'}\naccuracy : 0.7901875\n"},"1":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: \n70 fits failed out of a total of 140.\nThe score on these train-test partitions for these parameters will be set to nan.\nIf these failures are not expected, you can try to debug them by setting error_score='raise'.\n\nBelow are more details about the failures:\n--------------------------------------------------------------------------------\n70 fits failed with the following error:\nTraceback (most recent call last):\n  File \"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n    estimator.fit(X_train, y_train, **fit_params)\n  File \"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py\", line 1091, in fit\n    solver = _check_solver(self.solver, self.penalty, self.dual)\n  File \"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py\", line 61, in _check_solver\n    raise ValueError(\nValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got l1 penalty.\n\n  warnings.warn(some_fits_failed_message, FitFailedWarning)\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/model_selection/_search.py:953: UserWarning: One or more of the test scores are non-finite: [      nan 0.7901875       nan 0.789875        nan 0.79            nan\n 0.79            nan 0.79            nan 0.79            nan 0.79     ]\n  warnings.warn(\n"}},"pos":43,"type":"cell"}
{"cell_type":"code","exec_count":27,"id":"bc170d","input":"log = LogisticRegression()","pos":44,"type":"cell"}
{"cell_type":"code","exec_count":275,"id":"c3314d","input":"from sklearn.ensemble import RandomForestClassifier as rfc\nfrom sklearn.datasets import make_classification as mc\n","pos":82,"type":"cell"}
{"cell_type":"code","exec_count":277,"id":"7d8deb","input":"sns.heatmap(confusion_matrix(y_test, y_pred_dt), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":277,"output_type":"execute_result"},"1":{"data":{"image/png":"ec6834327dfe1d0a7bd77c3749634e0193108773","text/plain":"<Figure size 432x288 with 2 Axes>"},"exec_count":277,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":72,"type":"cell"}
{"cell_type":"code","exec_count":28,"id":"443760","input":"log.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>","text/plain":"LogisticRegression()"},"exec_count":28,"output_type":"execute_result"}},"pos":45,"type":"cell"}
{"cell_type":"code","exec_count":286,"id":"015a33","input":"churndf.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CreditScore</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n      <th>France</th>\n      <th>Spain</th>\n      <th>Germany</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>619</td>\n      <td>0</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>608</td>\n      <td>0</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>502</td>\n      <td>0</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>699</td>\n      <td>0</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>850</td>\n      <td>0</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   CreditScore  Gender  Age  Tenure    Balance  NumOfProducts  HasCrCard  \\\n0          619       0   42       2       0.00              1          1   \n1          608       0   41       1   83807.86              1          0   \n2          502       0   42       8  159660.80              3          1   \n3          699       0   39       1       0.00              2          0   \n4          850       0   43       2  125510.82              1          1   \n\n   IsActiveMember  EstimatedSalary  Exited  France  Spain  Germany  \n0               1        101348.88       1       1      0        0  \n1               1        112542.58       0       0      1        0  \n2               0        113931.57       1       1      0        0  \n3               0         93826.63       0       1      0        0  \n4               1         79084.10       0       0      1        0  "},"exec_count":286,"output_type":"execute_result"}},"pos":83,"type":"cell"}
{"cell_type":"code","exec_count":29,"id":"bfbf3c","input":"y_pred_log = log.predict(x_test)\ny_pred_log","output":{"0":{"data":{"text/plain":"array([0, 1, 0, ..., 0, 0, 0])"},"exec_count":29,"output_type":"execute_result"}},"pos":46,"type":"cell"}
{"cell_type":"code","exec_count":30,"id":"08399c","input":"recall_score(y_test, y_pred_log)","output":{"0":{"data":{"text/plain":"0.05644171779141104"},"exec_count":30,"output_type":"execute_result"}},"pos":47,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"e0aaa9","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_pred_log), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":31,"output_type":"execute_result"},"1":{"data":{"image/png":"1185ceb04f61fe35ca243e79ee05fa766772e591","text/plain":"<Figure size 936x360 with 2 Axes>"},"exec_count":31,"output_type":"execute_result"}},"pos":48,"type":"cell"}
{"cell_type":"code","exec_count":32,"id":"1d50d0","input":"from sklearn.neighbors import KNeighborsClassifier as KNN","pos":50,"type":"cell"}
{"cell_type":"code","exec_count":33,"id":"1938e9","input":"error_rate = []\n\nfor i in range(1, 40):\n    my_KNN_model = KNN(n_neighbors=i)\n    my_KNN_model.fit(x_train, y_train)\n    y_pred_knn = my_KNN_model.predict(x_test)\n    error_rate.append(np.mean(y_pred_knn != y_test))\n    \nplt.figure(figsize=(10,6))\nplt.plot(range(1,40),error_rate,color='blue', linestyle='dashed', marker='o',\n markerfacecolor='red', markersize=10)\nplt.title('Error Rate vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Error Rate')","output":{"0":{"data":{"text/plain":"Text(0, 0.5, 'Error Rate')"},"exec_count":33,"output_type":"execute_result"},"1":{"data":{"image/png":"3cd5078a3f0576decd129c26afc0f2e22f5f920e","text/plain":"<Figure size 720x432 with 1 Axes>"},"exec_count":33,"output_type":"execute_result"}},"pos":51,"type":"cell"}
{"cell_type":"code","exec_count":34,"id":"ac51f6","input":"# x,y = df.drop('y',axis=1),df.y\n# kf = KFold(n_splits=5,random_state=42,shuffle=True)\n# for train_index,val_index in kf.split(X):\n#     X_train,X_val = X.iloc[train_index],X.iloc[val_index],\n#     y_train,y_val = y.iloc[train_index],y.iloc[val_index],","pos":89,"type":"cell"}
{"cell_type":"code","exec_count":35,"id":"63227b","input":"gradient_booster = GradientBoostingClassifier(learning_rate=0.1)\n# gradient_booster.get_params()","pos":90,"type":"cell"}
{"cell_type":"code","exec_count":38,"id":"dae0b1","input":"gradient_booster.fit(x_train,y_train)\n# print(classification_report(y_test,gradient_booster.predict(x_test)))","output":{"0":{"data":{"text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GradientBoostingClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GradientBoostingClassifier</label><div class=\"sk-toggleable__content\"><pre>GradientBoostingClassifier()</pre></div></div></div></div></div>","text/plain":"GradientBoostingClassifier()"},"exec_count":38,"output_type":"execute_result"}},"pos":91,"type":"cell"}
{"cell_type":"code","exec_count":39,"id":"3ca71b","input":"print(classification_report(y_test,gradient_booster.predict(x_test)))","output":{"0":{"name":"stdout","output_type":"stream","text":"              precision    recall  f1-score   support\n\n           0       0.88      0.96      0.92      3185\n           1       0.78      0.50      0.61       815\n\n    accuracy                           0.87      4000\n   macro avg       0.83      0.73      0.76      4000\nweighted avg       0.86      0.87      0.86      4000\n\n"}},"pos":92,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"5babc3","input":"k = 3\nmy_KNN_model = KNN(n_neighbors=k)","pos":52,"type":"cell"}
{"cell_type":"code","exec_count":41,"id":"5d71d1","input":"my_KNN_model.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=3)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=3)</pre></div></div></div></div></div>","text/plain":"KNeighborsClassifier(n_neighbors=3)"},"exec_count":41,"output_type":"execute_result"}},"pos":53,"type":"cell"}
{"cell_type":"code","exec_count":42,"id":"bce711","input":"y_pred_knn = my_KNN_model.predict(x_test)\ny_pred_knn","output":{"0":{"data":{"text/plain":"array([0, 0, 1, ..., 1, 0, 1])"},"exec_count":42,"output_type":"execute_result"}},"pos":54,"type":"cell"}
{"cell_type":"code","exec_count":43,"id":"5e4e0f","input":"from sklearn.metrics import classification_report\nfrom sklearn.model_selection import KFold\n\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.model_selection import GridSearchCV\nimport warnings\nwarnings.filterwarnings(\"ignore\")","pos":86,"type":"cell"}
{"cell_type":"code","exec_count":43,"id":"8009f4","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_pred_knn), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":43,"output_type":"execute_result"},"1":{"data":{"image/png":"9f851a161404c1a7476695d700ea7d675f501dc0","text/plain":"<Figure size 936x360 with 2 Axes>"},"exec_count":43,"output_type":"execute_result"}},"pos":55,"type":"cell"}
{"cell_type":"code","exec_count":43,"id":"a08424","input":"grid.fit(x_train, y_train)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"Fitting 5 folds for each of 8 candidates, totalling 40 fits\n"}},"pos":69,"start":1657639239249,"state":"busy","type":"cell"}
{"cell_type":"code","exec_count":44,"id":"f027eb","input":"recall_score(y_test, y_pred_knn)","output":{"0":{"data":{"text/plain":"0.2625766871165644"},"exec_count":44,"output_type":"execute_result"}},"pos":56,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"a2c13d","input":"from sklearn.datasets import load_iris","pos":93,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"699e38","input":"from sklearn import preprocessing\ndata = load_iris()\n\nX_data = data.data\ntarget = data.target\n\nstandard = preprocessing.scale(X_data)\nprint(standard)","output":{"0":{"name":"stdout","output_type":"stream","text":"[[-9.00681170e-01  1.01900435e+00 -1.34022653e+00 -1.31544430e+00]\n [-1.14301691e+00 -1.31979479e-01 -1.34022653e+00 -1.31544430e+00]\n [-1.38535265e+00  3.28414053e-01 -1.39706395e+00 -1.31544430e+00]\n [-1.50652052e+00  9.82172869e-02 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  1.24920112e+00 -1.34022653e+00 -1.31544430e+00]\n [-5.37177559e-01  1.93979142e+00 -1.16971425e+00 -1.05217993e+00]\n [-1.50652052e+00  7.88807586e-01 -1.34022653e+00 -1.18381211e+00]\n [-1.02184904e+00  7.88807586e-01 -1.28338910e+00 -1.31544430e+00]\n [-1.74885626e+00 -3.62176246e-01 -1.34022653e+00 -1.31544430e+00]\n [-1.14301691e+00  9.82172869e-02 -1.28338910e+00 -1.44707648e+00]\n [-5.37177559e-01  1.47939788e+00 -1.28338910e+00 -1.31544430e+00]\n [-1.26418478e+00  7.88807586e-01 -1.22655167e+00 -1.31544430e+00]\n [-1.26418478e+00 -1.31979479e-01 -1.34022653e+00 -1.44707648e+00]\n [-1.87002413e+00 -1.31979479e-01 -1.51073881e+00 -1.44707648e+00]\n [-5.25060772e-02  2.16998818e+00 -1.45390138e+00 -1.31544430e+00]\n [-1.73673948e-01  3.09077525e+00 -1.28338910e+00 -1.05217993e+00]\n [-5.37177559e-01  1.93979142e+00 -1.39706395e+00 -1.05217993e+00]\n [-9.00681170e-01  1.01900435e+00 -1.34022653e+00 -1.18381211e+00]\n [-1.73673948e-01  1.70959465e+00 -1.16971425e+00 -1.18381211e+00]\n [-9.00681170e-01  1.70959465e+00 -1.28338910e+00 -1.18381211e+00]\n [-5.37177559e-01  7.88807586e-01 -1.16971425e+00 -1.31544430e+00]\n [-9.00681170e-01  1.47939788e+00 -1.28338910e+00 -1.05217993e+00]\n [-1.50652052e+00  1.24920112e+00 -1.56757623e+00 -1.31544430e+00]\n [-9.00681170e-01  5.58610819e-01 -1.16971425e+00 -9.20547742e-01]\n [-1.26418478e+00  7.88807586e-01 -1.05603939e+00 -1.31544430e+00]\n [-1.02184904e+00 -1.31979479e-01 -1.22655167e+00 -1.31544430e+00]\n [-1.02184904e+00  7.88807586e-01 -1.22655167e+00 -1.05217993e+00]\n [-7.79513300e-01  1.01900435e+00 -1.28338910e+00 -1.31544430e+00]\n [-7.79513300e-01  7.88807586e-01 -1.34022653e+00 -1.31544430e+00]\n [-1.38535265e+00  3.28414053e-01 -1.22655167e+00 -1.31544430e+00]\n [-1.26418478e+00  9.82172869e-02 -1.22655167e+00 -1.31544430e+00]\n [-5.37177559e-01  7.88807586e-01 -1.28338910e+00 -1.05217993e+00]\n [-7.79513300e-01  2.40018495e+00 -1.28338910e+00 -1.44707648e+00]\n [-4.16009689e-01  2.63038172e+00 -1.34022653e+00 -1.31544430e+00]\n [-1.14301691e+00  9.82172869e-02 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  3.28414053e-01 -1.45390138e+00 -1.31544430e+00]\n [-4.16009689e-01  1.01900435e+00 -1.39706395e+00 -1.31544430e+00]\n [-1.14301691e+00  1.24920112e+00 -1.34022653e+00 -1.44707648e+00]\n [-1.74885626e+00 -1.31979479e-01 -1.39706395e+00 -1.31544430e+00]\n [-9.00681170e-01  7.88807586e-01 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  1.01900435e+00 -1.39706395e+00 -1.18381211e+00]\n [-1.62768839e+00 -1.74335684e+00 -1.39706395e+00 -1.18381211e+00]\n [-1.74885626e+00  3.28414053e-01 -1.39706395e+00 -1.31544430e+00]\n [-1.02184904e+00  1.01900435e+00 -1.22655167e+00 -7.88915558e-01]\n [-9.00681170e-01  1.70959465e+00 -1.05603939e+00 -1.05217993e+00]\n [-1.26418478e+00 -1.31979479e-01 -1.34022653e+00 -1.18381211e+00]\n [-9.00681170e-01  1.70959465e+00 -1.22655167e+00 -1.31544430e+00]\n [-1.50652052e+00  3.28414053e-01 -1.34022653e+00 -1.31544430e+00]\n [-6.58345429e-01  1.47939788e+00 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  5.58610819e-01 -1.34022653e+00 -1.31544430e+00]\n [ 1.40150837e+00  3.28414053e-01  5.35408562e-01  2.64141916e-01]\n [ 6.74501145e-01  3.28414053e-01  4.21733708e-01  3.95774101e-01]\n [ 1.28034050e+00  9.82172869e-02  6.49083415e-01  3.95774101e-01]\n [-4.16009689e-01 -1.74335684e+00  1.37546573e-01  1.32509732e-01]\n [ 7.95669016e-01 -5.92373012e-01  4.78571135e-01  3.95774101e-01]\n [-1.73673948e-01 -5.92373012e-01  4.21733708e-01  1.32509732e-01]\n [ 5.53333275e-01  5.58610819e-01  5.35408562e-01  5.27406285e-01]\n [-1.14301691e+00 -1.51316008e+00 -2.60315415e-01 -2.62386821e-01]\n [ 9.16836886e-01 -3.62176246e-01  4.78571135e-01  1.32509732e-01]\n [-7.79513300e-01 -8.22569778e-01  8.07091462e-02  2.64141916e-01]\n [-1.02184904e+00 -2.43394714e+00 -1.46640561e-01 -2.62386821e-01]\n [ 6.86617933e-02 -1.31979479e-01  2.51221427e-01  3.95774101e-01]\n [ 1.89829664e-01 -1.97355361e+00  1.37546573e-01 -2.62386821e-01]\n [ 3.10997534e-01 -3.62176246e-01  5.35408562e-01  2.64141916e-01]\n [-2.94841818e-01 -3.62176246e-01 -8.98031345e-02  1.32509732e-01]\n [ 1.03800476e+00  9.82172869e-02  3.64896281e-01  2.64141916e-01]\n [-2.94841818e-01 -1.31979479e-01  4.21733708e-01  3.95774101e-01]\n [-5.25060772e-02 -8.22569778e-01  1.94384000e-01 -2.62386821e-01]\n [ 4.32165405e-01 -1.97355361e+00  4.21733708e-01  3.95774101e-01]\n [-2.94841818e-01 -1.28296331e+00  8.07091462e-02 -1.30754636e-01]\n [ 6.86617933e-02  3.28414053e-01  5.92245988e-01  7.90670654e-01]\n [ 3.10997534e-01 -5.92373012e-01  1.37546573e-01  1.32509732e-01]\n [ 5.53333275e-01 -1.28296331e+00  6.49083415e-01  3.95774101e-01]\n [ 3.10997534e-01 -5.92373012e-01  5.35408562e-01  8.77547895e-04]\n [ 6.74501145e-01 -3.62176246e-01  3.08058854e-01  1.32509732e-01]\n [ 9.16836886e-01 -1.31979479e-01  3.64896281e-01  2.64141916e-01]\n [ 1.15917263e+00 -5.92373012e-01  5.92245988e-01  2.64141916e-01]\n [ 1.03800476e+00 -1.31979479e-01  7.05920842e-01  6.59038469e-01]\n [ 1.89829664e-01 -3.62176246e-01  4.21733708e-01  3.95774101e-01]\n [-1.73673948e-01 -1.05276654e+00 -1.46640561e-01 -2.62386821e-01]\n [-4.16009689e-01 -1.51316008e+00  2.38717193e-02 -1.30754636e-01]\n [-4.16009689e-01 -1.51316008e+00 -3.29657076e-02 -2.62386821e-01]\n [-5.25060772e-02 -8.22569778e-01  8.07091462e-02  8.77547895e-04]\n [ 1.89829664e-01 -8.22569778e-01  7.62758269e-01  5.27406285e-01]\n [-5.37177559e-01 -1.31979479e-01  4.21733708e-01  3.95774101e-01]\n [ 1.89829664e-01  7.88807586e-01  4.21733708e-01  5.27406285e-01]\n [ 1.03800476e+00  9.82172869e-02  5.35408562e-01  3.95774101e-01]\n [ 5.53333275e-01 -1.74335684e+00  3.64896281e-01  1.32509732e-01]\n [-2.94841818e-01 -1.31979479e-01  1.94384000e-01  1.32509732e-01]\n [-4.16009689e-01 -1.28296331e+00  1.37546573e-01  1.32509732e-01]\n [-4.16009689e-01 -1.05276654e+00  3.64896281e-01  8.77547895e-04]\n [ 3.10997534e-01 -1.31979479e-01  4.78571135e-01  2.64141916e-01]\n [-5.25060772e-02 -1.05276654e+00  1.37546573e-01  8.77547895e-04]\n [-1.02184904e+00 -1.74335684e+00 -2.60315415e-01 -2.62386821e-01]\n [-2.94841818e-01 -8.22569778e-01  2.51221427e-01  1.32509732e-01]\n [-1.73673948e-01 -1.31979479e-01  2.51221427e-01  8.77547895e-04]\n [-1.73673948e-01 -3.62176246e-01  2.51221427e-01  1.32509732e-01]\n [ 4.32165405e-01 -3.62176246e-01  3.08058854e-01  1.32509732e-01]\n [-9.00681170e-01 -1.28296331e+00 -4.30827696e-01 -1.30754636e-01]\n [-1.73673948e-01 -5.92373012e-01  1.94384000e-01  1.32509732e-01]\n [ 5.53333275e-01  5.58610819e-01  1.27429511e+00  1.71209594e+00]\n [-5.25060772e-02 -8.22569778e-01  7.62758269e-01  9.22302838e-01]\n [ 1.52267624e+00 -1.31979479e-01  1.21745768e+00  1.18556721e+00]\n [ 5.53333275e-01 -3.62176246e-01  1.04694540e+00  7.90670654e-01]\n [ 7.95669016e-01 -1.31979479e-01  1.16062026e+00  1.31719939e+00]\n [ 2.12851559e+00 -1.31979479e-01  1.61531967e+00  1.18556721e+00]\n [-1.14301691e+00 -1.28296331e+00  4.21733708e-01  6.59038469e-01]\n [ 1.76501198e+00 -3.62176246e-01  1.44480739e+00  7.90670654e-01]\n [ 1.03800476e+00 -1.28296331e+00  1.16062026e+00  7.90670654e-01]\n [ 1.64384411e+00  1.24920112e+00  1.33113254e+00  1.71209594e+00]\n [ 7.95669016e-01  3.28414053e-01  7.62758269e-01  1.05393502e+00]\n [ 6.74501145e-01 -8.22569778e-01  8.76433123e-01  9.22302838e-01]\n [ 1.15917263e+00 -1.31979479e-01  9.90107977e-01  1.18556721e+00]\n [-1.73673948e-01 -1.28296331e+00  7.05920842e-01  1.05393502e+00]\n [-5.25060772e-02 -5.92373012e-01  7.62758269e-01  1.58046376e+00]\n [ 6.74501145e-01  3.28414053e-01  8.76433123e-01  1.44883158e+00]\n [ 7.95669016e-01 -1.31979479e-01  9.90107977e-01  7.90670654e-01]\n [ 2.24968346e+00  1.70959465e+00  1.67215710e+00  1.31719939e+00]\n [ 2.24968346e+00 -1.05276654e+00  1.78583195e+00  1.44883158e+00]\n [ 1.89829664e-01 -1.97355361e+00  7.05920842e-01  3.95774101e-01]\n [ 1.28034050e+00  3.28414053e-01  1.10378283e+00  1.44883158e+00]\n [-2.94841818e-01 -5.92373012e-01  6.49083415e-01  1.05393502e+00]\n [ 2.24968346e+00 -5.92373012e-01  1.67215710e+00  1.05393502e+00]\n [ 5.53333275e-01 -8.22569778e-01  6.49083415e-01  7.90670654e-01]\n [ 1.03800476e+00  5.58610819e-01  1.10378283e+00  1.18556721e+00]\n [ 1.64384411e+00  3.28414053e-01  1.27429511e+00  7.90670654e-01]\n [ 4.32165405e-01 -5.92373012e-01  5.92245988e-01  7.90670654e-01]\n [ 3.10997534e-01 -1.31979479e-01  6.49083415e-01  7.90670654e-01]\n [ 6.74501145e-01 -5.92373012e-01  1.04694540e+00  1.18556721e+00]\n [ 1.64384411e+00 -1.31979479e-01  1.16062026e+00  5.27406285e-01]\n [ 1.88617985e+00 -5.92373012e-01  1.33113254e+00  9.22302838e-01]\n [ 2.49201920e+00  1.70959465e+00  1.50164482e+00  1.05393502e+00]\n [ 6.74501145e-01 -5.92373012e-01  1.04694540e+00  1.31719939e+00]\n [ 5.53333275e-01 -5.92373012e-01  7.62758269e-01  3.95774101e-01]\n [ 3.10997534e-01 -1.05276654e+00  1.04694540e+00  2.64141916e-01]\n [ 2.24968346e+00 -1.31979479e-01  1.33113254e+00  1.44883158e+00]\n [ 5.53333275e-01  7.88807586e-01  1.04694540e+00  1.58046376e+00]\n [ 6.74501145e-01  9.82172869e-02  9.90107977e-01  7.90670654e-01]\n [ 1.89829664e-01 -1.31979479e-01  5.92245988e-01  7.90670654e-01]\n [ 1.28034050e+00  9.82172869e-02  9.33270550e-01  1.18556721e+00]\n [ 1.03800476e+00  9.82172869e-02  1.04694540e+00  1.58046376e+00]\n [ 1.28034050e+00  9.82172869e-02  7.62758269e-01  1.44883158e+00]\n [-5.25060772e-02 -8.22569778e-01  7.62758269e-01  9.22302838e-01]\n [ 1.15917263e+00  3.28414053e-01  1.21745768e+00  1.44883158e+00]\n [ 1.03800476e+00  5.58610819e-01  1.10378283e+00  1.71209594e+00]\n [ 1.03800476e+00 -1.31979479e-01  8.19595696e-01  1.44883158e+00]\n [ 5.53333275e-01 -1.28296331e+00  7.05920842e-01  9.22302838e-01]\n [ 7.95669016e-01 -1.31979479e-01  8.19595696e-01  1.05393502e+00]\n [ 4.32165405e-01  7.88807586e-01  9.33270550e-01  1.44883158e+00]\n [ 6.86617933e-02 -1.31979479e-01  7.62758269e-01  7.90670654e-01]]\n"}},"pos":94,"type":"cell"}
{"cell_type":"code","id":"721cac","input":"print(grid.best_params_) \ngrid_predictions = grid.predict(x_test)","kernel":"ds_env","pos":70,"state":"run","type":"cell"}
{"cell_type":"code","id":"a8a972","input":"print(classification_report(y_test, y_pred_dt))","kernel":"ds_env","pos":71,"state":"run","type":"cell"}
{"cell_type":"markdown","id":"007d6b","input":"- The dataset we chose includes multiple variables that describe customers at a bank. Our target is finding whether or not a customer will leave the bank, and our variable for that is Exited, with a value of 1 meaning that the customer has left, and a value of 0 meaning that the customer remains.\n- Through our analysis of the correlation between variables, we found that all of the ones that we didn't remove played a small role in predicting whether or not the customer has exited or will exit \\(as seen in our heat\\-map\\).\n- Some of the variables we chose to analyze through exploratory data analysis were the age of the customer, their estimated salary, balance, tenure,\n  gender, which country they were from, whether they had a credit card or not, how active they were, and the number of products they were utilizing from the bank.\n\n","pos":32,"type":"cell"}
{"cell_type":"markdown","id":"078a49","input":"#### **Logistic Regression**\n\n","pos":42,"type":"cell"}
{"cell_type":"markdown","id":"08a531","input":"This scatter plot shows the relationship between the age and balance of the customers, and how that affects the number of people that have exited. \n\n","pos":30,"type":"cell"}
{"cell_type":"markdown","id":"119078","input":"This uses Bayes Theorem which is: P\\(A|B\\) = P \\(B|A\\) . P \\(A\\) / P\\(B\\)\n\nGood for well\\-separated categories, very high\\-dimensional data, and when data is matched by naive assumprtions.\n\n","pos":58,"type":"cell"}
{"cell_type":"markdown","id":"171aa5","input":"##### Column Statistics","pos":14,"type":"cell"}
{"cell_type":"markdown","id":"183142","input":"##### Importing Required Libraries\n\n","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"1befaa","input":"1\\)Graph 1 shows the gender of the customer and whether or not they exited.\n\n2\\)Graph 2 shows whether or not the customer had a credit card or not when they exited.\n\n3\\)Graph 3 shows whether or not the customer that exited was an active member or not.\n\n4\\)Graph 4 shows the number of products a customer had compared to whether or not they exited.\n\n5\\)Graph 5 shows the country of the customer and whether or not the person exited.\n\n6\\)Shows the number of customers by country.\n\n","pos":25,"type":"cell"}
{"cell_type":"markdown","id":"44daa7","input":"#### Naive Bayes\n\n","pos":57,"type":"cell"}
{"cell_type":"markdown","id":"64d920","input":"##### Import Dataset\n\n","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"65bb02","input":"### Splitting the Data\n\n","pos":40,"type":"cell"}
{"cell_type":"markdown","id":"66e2aa","input":"#### Decision Tree Classifier\n\n","pos":64,"type":"cell"}
{"cell_type":"markdown","id":"68c507","input":"##### Creating box-plots to examine the spread of our data among multiple variables.\n\n","pos":26,"type":"cell"}
{"cell_type":"markdown","id":"69c3bb","input":"## Customer Churn Prediction\n\n","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"6a99a2","input":"- What features are significant in prediction the churn in a customer.\n- To suggest measure in order to improve the retention rate with respect to customer category.\n\n","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"7714cc","input":"##### Dataset Info","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"838b36","input":"##### Drop unnecessary columns","pos":16,"type":"cell"}
{"cell_type":"markdown","id":"9cab2a","input":"> 1 = Churned\n>\n>\n> 0 = Not Churned\n\n","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"b05253","input":"<h4> Goal</h4>\n\n","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"b620ab","input":"#### Support Vector Classifier\n\n","pos":73,"type":"cell"}
{"cell_type":"markdown","id":"b81612","input":"##### Assessing the proportions of our target value triggers to our defaults.\n\n","pos":20,"type":"cell"}
{"cell_type":"markdown","id":"b97e16","input":"##### Creating a heat\\-map to assess the correlation between our variables.\n\n","pos":18,"type":"cell"}
{"cell_type":"markdown","id":"c62db2","input":"#### **KNeighbours Classifier**\n\n","pos":49,"type":"cell"}
{"cell_type":"markdown","id":"c92d92","input":"##### Creating count-plots for values that wouldn't be properly visualized by box plots due to being categorical.\n\n","pos":23,"type":"cell"}
{"cell_type":"markdown","id":"ca29f5","input":"The box plots above show the relationship between multiple factors such as age, estimated salary, balance, and tenure, to whether they exited or not.\n\n","pos":28,"type":"cell"}
{"cell_type":"markdown","id":"dcce3c","input":"##### Summary","pos":31,"type":"cell"}
{"cell_type":"markdown","id":"f2720e","input":"### `Random Forest Classifier`\n\n","pos":81,"type":"cell"}
{"cell_type":"markdown","id":"f93835","input":"This bar graph shows our percentage of exited to non\\-exited customers. As shown, we have a large percentage of exited customers along with the opposite for non\\-exited customers.\n\n","pos":22,"type":"cell"}
{"cell_type":"markdown","id":"fd5f4b","input":"One of the most important applications of data science in the commercial sector is churn prediction. Its popularity stems from the fact that its impacts are more tangible to comprehend, and it plays a significant role in the company's overall revenues.\n\nChurn is described as \"when a client cancels a subscription to a service they have been utilizing\" in business terms. People cancelling Spotify/Netflix memberships are a regular example. So, based on their utilization of the service, Churn Prediction is effectively projecting which clients are most likely to cancel a subscription, i.e. 'leave a company.'\n\nFrom a business standpoint, obtaining this information is critical because recruiting new clients is generally more difficult and costly than retaining existing customers. As a result, the information acquired through Churn Prediction allows them to focus more on the customers who are most likely to leave.\n\n","pos":2,"type":"cell"}
{"id":"8f5e18","input":"parameters = {\n    \"loss\":[\"deviance\"],\n    \"learning_rate\": [0.01, 0.025, 0.05, 0.075, 0.1, 0.15, 0.2],\n    \"min_samples_split\": np.linspace(0.1, 0.5, 12),\n    \"min_samples_leaf\": np.linspace(0.1, 0.5, 12),\n    \"max_depth\":[3,5,8],\n    \"max_features\":[\"log2\",\"sqrt\"],\n    \"criterion\": [\"friedman_mse\",  \"mae\"],\n    \"subsample\":[0.5, 0.618, 0.8, 0.85, 0.9, 0.95, 1.0],\n    \"n_estimators\":[10]\n    }\n\nclf = GridSearchCV(GradientBoostingClassifier(), parameters, cv=10, n_jobs=-1)\n\nclf.fit(x_train, y_train)\nprint(clf.score(x_train, y_train))\nprint(clf.best_params_)","pos":86.5,"type":"cell"}
{"id":0,"time":1657641540097,"type":"user"}
{"last_load":1657638010225,"type":"file"}