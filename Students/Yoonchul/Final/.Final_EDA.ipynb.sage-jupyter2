{"backend_state":"init","connection_file":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/.local/share/jupyter/runtime/kernel-9ea6d852-0600-4d37-9019-55335ffa5a99.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"251494","input":"","pos":119,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"25f2b8","input":"","pos":117,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"275e6a","input":"","pos":43,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"319d22","input":"","pos":127,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"356ea4","input":"","pos":87,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"3d8114","input":"","pos":120,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"47ef81","input":"","pos":114,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"4cfd97","input":"\n","pos":116,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"57898a","input":"","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"5a9bc4","input":"","pos":81,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"5bed96","input":"","pos":86,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"67b9e2","input":"","pos":128,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"74e9c1","input":"","pos":88,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"9ec264","input":"","pos":129,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"ba0f9f","input":"","pos":125,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"eb723b","input":"","pos":126,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f345ec","input":"","pos":89,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f7e157","input":"","pos":115,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"fa533d","input":"","pos":49,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"8df5bb","input":"corr = churndf.corr()\nplt.figure(figsize=(10,10))\nsns.heatmap(corr, cmap='YlGnBu', annot = True).set_title('Correlation between variables',fontdict= { 'fontsize': 14, 'fontweight':'bold'});","output":{"0":{"data":{"image/png":"c00d39f3bd9d38e79335fa2b4499cd984cf885a6","text/plain":"<Figure size 720x720 with 2 Axes>"},"exec_count":10,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":101,"id":"78673f","input":"from numpy import asarray\nfrom sklearn.preprocessing import StandardScaler","pos":109,"type":"cell"}
{"cell_type":"code","exec_count":104,"id":"a14324","input":"churndf.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CreditScore</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n      <th>France</th>\n      <th>Spain</th>\n      <th>Germany</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>619</td>\n      <td>0</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>608</td>\n      <td>0</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>502</td>\n      <td>0</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>699</td>\n      <td>0</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>850</td>\n      <td>0</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   CreditScore  Gender  Age  Tenure    Balance  NumOfProducts  HasCrCard  \\\n0          619       0   42       2       0.00              1          1   \n1          608       0   41       1   83807.86              1          0   \n2          502       0   42       8  159660.80              3          1   \n3          699       0   39       1       0.00              2          0   \n4          850       0   43       2  125510.82              1          1   \n\n   IsActiveMember  EstimatedSalary  Exited  France  Spain  Germany  \n0               1        101348.88       1       1      0        0  \n1               1        112542.58       0       0      1        0  \n2               0        113931.57       1       1      0        0  \n3               0         93826.63       0       1      0        0  \n4               1         79084.10       0       0      1        0  "},"exec_count":104,"output_type":"execute_result"}},"pos":108,"type":"cell"}
{"cell_type":"code","exec_count":105,"id":"62a1bd","input":"x_data = churndf[['CreditScore', 'EstimatedSalary', 'Balance']]","pos":110,"type":"cell"}
{"cell_type":"code","exec_count":107,"id":"6bfe71","input":"","pos":111,"type":"cell"}
{"cell_type":"code","exec_count":108,"id":"63ce12","input":"scaled_data = scaler.fit_transform(x_data) \n","pos":112,"type":"cell"}
{"cell_type":"code","exec_count":109,"id":"386010","input":"print(x_data)","output":{"0":{"name":"stdout","output_type":"stream","text":"       Exited  EstimatedSalary    Balance\n0           1        101348.88       0.00\n1           0        112542.58   83807.86\n2           1        113931.57  159660.80\n3           0         93826.63       0.00\n4           0         79084.10  125510.82\n...       ...              ...        ...\n19995       0         96270.64       0.00\n19996       0        101699.77   57369.61\n19997       1         42085.58       0.00\n19998       1         92888.52   75075.31\n19999       0         38190.78  130142.79\n\n[20000 rows x 3 columns]\n"}},"pos":113,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"234064","input":"plt.figure(figsize=(9,5))\nax = sns.barplot(x='Exited', y='Exited', estimator=lambda x: len(x) / len(churndf) * 100, data=churndf, palette = 'Blues')\nax.bar_label(ax.containers[0], fmt='%.f%%')\nax.set_ylabel('%')\nax.set_title('Percentage of exited to non-exited customers',fontdict= { 'fontsize': 14, 'fontweight':'bold'});","output":{"0":{"data":{"image/png":"83f36961e895b04cae1f676cbd0fba51d05353fc","text/plain":"<Figure size 648x360 with 1 Axes>"},"exec_count":11,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":111,"id":"154338","input":"sns.heatmap(confusion_matrix(y_test, y_pred_dt), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":111,"output_type":"execute_result"},"1":{"data":{"image/png":"0a7226954a54f971b7eafacf0c85ba98d44cd70f","text/plain":"<Figure size 936x360 with 2 Axes>"},"exec_count":111,"output_type":"execute_result"}},"pos":80,"type":"cell"}
{"cell_type":"code","exec_count":122,"id":"4dd029","input":"scaler = StandardScaler()","pos":118,"type":"cell"}
{"cell_type":"code","exec_count":123,"id":"dbfe01","input":"num_cols = ['EstimatedSalary','Balance','Age','CreditScore']","pos":121,"type":"cell"}
{"cell_type":"code","exec_count":125,"id":"124ee9","input":"for i in num_cols:\n    x = scaler.fit(x_train[[i]])\n    x_train[i] = x.transform(x_train[[i]])\n    x_test[i] = x.transform(x_test[[i]])","pos":122,"type":"cell"}
{"cell_type":"code","exec_count":126,"id":"6ad9e4","input":"x_train","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CreditScore</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>France</th>\n      <th>Spain</th>\n      <th>Germany</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>12775</th>\n      <td>2.060624</td>\n      <td>1</td>\n      <td>1.153957</td>\n      <td>3</td>\n      <td>0.530487</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>-1.521255</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>16843</th>\n      <td>0.923119</td>\n      <td>1</td>\n      <td>-0.561079</td>\n      <td>1</td>\n      <td>0.847798</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0.408574</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>8262</th>\n      <td>0.892096</td>\n      <td>0</td>\n      <td>-0.561079</td>\n      <td>4</td>\n      <td>-1.231326</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0.266068</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>9554</th>\n      <td>1.326416</td>\n      <td>0</td>\n      <td>-0.942198</td>\n      <td>3</td>\n      <td>-0.486994</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0.489339</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>8709</th>\n      <td>-1.258823</td>\n      <td>1</td>\n      <td>0.010600</td>\n      <td>6</td>\n      <td>0.405740</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>-1.523114</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>7924</th>\n      <td>1.884828</td>\n      <td>1</td>\n      <td>0.772838</td>\n      <td>2</td>\n      <td>-1.231326</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1.434879</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>19507</th>\n      <td>1.626304</td>\n      <td>1</td>\n      <td>0.201159</td>\n      <td>0</td>\n      <td>-1.231326</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>-0.347245</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>17743</th>\n      <td>1.305734</td>\n      <td>1</td>\n      <td>-0.370519</td>\n      <td>7</td>\n      <td>0.740977</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>-0.411997</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>5531</th>\n      <td>0.561186</td>\n      <td>0</td>\n      <td>-0.751638</td>\n      <td>3</td>\n      <td>0.690866</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1.439766</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>17770</th>\n      <td>0.499140</td>\n      <td>1</td>\n      <td>-0.942198</td>\n      <td>3</td>\n      <td>0.785449</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0.901698</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>16000 rows × 12 columns</p>\n</div>","text/plain":"       CreditScore  Gender       Age  Tenure   Balance  NumOfProducts  \\\n12775     2.060624       1  1.153957       3  0.530487              2   \n16843     0.923119       1 -0.561079       1  0.847798              1   \n8262      0.892096       0 -0.561079       4 -1.231326              2   \n9554      1.326416       0 -0.942198       3 -0.486994              3   \n8709     -1.258823       1  0.010600       6  0.405740              2   \n...            ...     ...       ...     ...       ...            ...   \n7924      1.884828       1  0.772838       2 -1.231326              2   \n19507     1.626304       1  0.201159       0 -1.231326              1   \n17743     1.305734       1 -0.370519       7  0.740977              1   \n5531      0.561186       0 -0.751638       3  0.690866              1   \n17770     0.499140       1 -0.942198       3  0.785449              1   \n\n       HasCrCard  IsActiveMember  EstimatedSalary  France  Spain  Germany  \n12775          1               1        -1.521255       0      1        0  \n16843          1               1         0.408574       1      0        0  \n8262           1               0         0.266068       1      0        0  \n9554           1               0         0.489339       1      0        0  \n8709           1               0        -1.523114       1      0        0  \n...          ...             ...              ...     ...    ...      ...  \n7924           1               1         1.434879       1      0        0  \n19507          1               1        -0.347245       1      0        0  \n17743          1               1        -0.411997       0      0        1  \n5531           0               0         1.439766       1      0        0  \n17770          1               1         0.901698       1      0        0  \n\n[16000 rows x 12 columns]"},"exec_count":126,"output_type":"execute_result"}},"pos":123,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"2ba07e","input":"fig, axes = plt.subplots(3,2)\nsns.set({'figure.figsize':(12,20)});\nsns.countplot(data = churndf, x = 'Gender', hue = 'Exited', ax = axes [0,0], palette = 'Purples').set_title('Gender to exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.countplot(data = churndf, x = 'HasCrCard', hue = 'Exited', ax = axes [0,1], palette = 'Reds').set_title('Has Credit Card or not to exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.countplot(data = churndf, x = 'IsActiveMember', hue = 'Exited', ax = axes [1,0], palette = 'Oranges').set_title('Active or not to exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.countplot(data = churndf, x = 'NumOfProducts', hue = 'Exited', ax = axes [1,1], palette = 'Blues').set_title('Products to exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.countplot(data=churndf, x = 'Geography', hue = 'Exited', ax = axes[2,0], palette = 'Greens').set_title('Countries in relation to Exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.countplot(data = churndf, x = 'Geography', ax = axes[2,1], palette = 'Purples').set_title('Countries',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nfig.tight_layout();","output":{"0":{"data":{"image/png":"2d250453f52e1dfc33861bccd558b353c64e4f27","text/plain":"<Figure size 864x1440 with 6 Axes>"},"exec_count":13,"output_type":"execute_result"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":132,"id":"1d1a25","input":"x_test","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CreditScore</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>France</th>\n      <th>Spain</th>\n      <th>Germany</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>12570</th>\n      <td>-1.424278</td>\n      <td>0</td>\n      <td>-0.751638</td>\n      <td>5</td>\n      <td>1.574324</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>-0.271512</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>10125</th>\n      <td>-2.261895</td>\n      <td>1</td>\n      <td>0.296439</td>\n      <td>9</td>\n      <td>1.217306</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0.181625</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1849</th>\n      <td>-0.721093</td>\n      <td>0</td>\n      <td>-0.942198</td>\n      <td>8</td>\n      <td>-1.231326</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>-0.924467</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>15275</th>\n      <td>0.333685</td>\n      <td>0</td>\n      <td>0.296439</td>\n      <td>8</td>\n      <td>-1.231326</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1.711482</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>14448</th>\n      <td>-0.886548</td>\n      <td>0</td>\n      <td>0.105880</td>\n      <td>1</td>\n      <td>0.212704</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.369990</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>14437</th>\n      <td>0.881755</td>\n      <td>0</td>\n      <td>-1.418596</td>\n      <td>0</td>\n      <td>-1.231326</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0.165790</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>10435</th>\n      <td>1.150620</td>\n      <td>0</td>\n      <td>1.153957</td>\n      <td>3</td>\n      <td>0.361805</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>-0.248182</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>14450</th>\n      <td>-0.183363</td>\n      <td>1</td>\n      <td>1.916195</td>\n      <td>2</td>\n      <td>0.437377</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0.057904</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>11970</th>\n      <td>0.157888</td>\n      <td>0</td>\n      <td>0.201159</td>\n      <td>10</td>\n      <td>1.033721</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>-0.851808</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>14107</th>\n      <td>-0.514274</td>\n      <td>0</td>\n      <td>0.105880</td>\n      <td>3</td>\n      <td>0.245769</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1.128528</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>4000 rows × 12 columns</p>\n</div>","text/plain":"       CreditScore  Gender       Age  Tenure   Balance  NumOfProducts  \\\n12570    -1.424278       0 -0.751638       5  1.574324              1   \n10125    -2.261895       1  0.296439       9  1.217306              1   \n1849     -0.721093       0 -0.942198       8 -1.231326              2   \n15275     0.333685       0  0.296439       8 -1.231326              2   \n14448    -0.886548       0  0.105880       1  0.212704              2   \n...            ...     ...       ...     ...       ...            ...   \n14437     0.881755       0 -1.418596       0 -1.231326              2   \n10435     1.150620       0  1.153957       3  0.361805              1   \n14450    -0.183363       1  1.916195       2  0.437377              1   \n11970     0.157888       0  0.201159      10  1.033721              1   \n14107    -0.514274       0  0.105880       3  0.245769              1   \n\n       HasCrCard  IsActiveMember  EstimatedSalary  France  Spain  Germany  \n12570          1               0        -0.271512       0      1        0  \n10125          1               0         0.181625       1      0        0  \n1849           1               0        -0.924467       0      1        0  \n15275          0               1         1.711482       1      0        0  \n14448          0               1         0.369990       0      0        1  \n...          ...             ...              ...     ...    ...      ...  \n14437          1               0         0.165790       1      0        0  \n10435          0               1        -0.248182       1      0        0  \n14450          1               1         0.057904       1      0        0  \n11970          1               0        -0.851808       1      0        0  \n14107          0               1         1.128528       1      0        0  \n\n[4000 rows x 12 columns]"},"exec_count":132,"output_type":"execute_result"}},"pos":124,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"d3f0b3","input":"fig, axes = plt.subplots(1,4)\nsns.set({'figure.figsize':(13,5)});\nsns.boxplot(data = churndf, x = 'Exited', y = 'Age', ax = axes[0], palette = 'Greens').set_title('Age to Exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.boxplot(data = churndf, x = 'Exited', y = 'EstimatedSalary', ax = axes [1], palette = 'Reds').set_title('Estimated Salary to Exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.boxplot(data = churndf, x = 'Exited', y = 'Balance', ax = axes [2], palette = 'Oranges').set_title('Balance to Exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.boxplot(data = churndf, x = 'Exited', y = 'Tenure', ax = axes [3], palette = 'Blues').set_title('Tenure to Exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'});\nfig.tight_layout()","output":{"0":{"data":{"image/png":"8078da4ca9867c1a55b54781215f5f2accdb35f4","text/plain":"<Figure size 864x1440 with 4 Axes>"},"exec_count":14,"output_type":"execute_result"}},"pos":26,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":149,"id":"ae43ec","input":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=42, stratify = Y)","pos":41,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"ee5b4f","input":"plt.figure(figsize=(18,8))\nsns.scatterplot(x=\"Age\", y=\"Balance\", hue='Exited', data=churndf) #Importing three variables\nplt.title('Relation of Exited, Age and Balance', fontsize=15, fontweight='bold') #Named and colored the plot\nplt.xticks(fontsize=16)\nplt.yticks(fontsize=16)\nplt.show()","output":{"0":{"data":{"image/png":"56d16a9946b9c9a3d1b4dc6bc1cb464e2d0370fa","text/plain":"<Figure size 1296x576 with 1 Axes>"},"exec_count":15,"output_type":"execute_result"}},"pos":28,"type":"cell"}
{"cell_type":"code","exec_count":150,"id":"dc2bc1","input":"from numpy import asarray\nfrom sklearn.preprocessing import StandardScaler","pos":42,"type":"cell"}
{"cell_type":"code","exec_count":151,"id":"882bf5","input":"scaled_data = scaler.fit_transform(x_data) ","pos":44,"type":"cell"}
{"cell_type":"code","exec_count":152,"id":"4f22b7","input":"scaler = StandardScaler()","pos":45,"type":"cell"}
{"cell_type":"code","exec_count":153,"id":"b9d53b","input":"num_cols = ['EstimatedSalary','Balance','Age','CreditScore']","pos":46,"type":"cell"}
{"cell_type":"code","exec_count":154,"id":"856600","input":"for i in num_cols:\n    x = scaler.fit(x_train[[i]])\n    x_train[i] = x.transform(x_train[[i]])\n    x_test[i] = x.transform(x_test[[i]])","pos":47,"type":"cell"}
{"cell_type":"code","exec_count":156,"id":"983b82","input":"x_train","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CreditScore</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>France</th>\n      <th>Spain</th>\n      <th>Germany</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>12775</th>\n      <td>2.060624</td>\n      <td>1</td>\n      <td>1.153957</td>\n      <td>3</td>\n      <td>0.530487</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>-1.521255</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>16843</th>\n      <td>0.923119</td>\n      <td>1</td>\n      <td>-0.561079</td>\n      <td>1</td>\n      <td>0.847798</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0.408574</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>8262</th>\n      <td>0.892096</td>\n      <td>0</td>\n      <td>-0.561079</td>\n      <td>4</td>\n      <td>-1.231326</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0.266068</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>9554</th>\n      <td>1.326416</td>\n      <td>0</td>\n      <td>-0.942198</td>\n      <td>3</td>\n      <td>-0.486994</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0.489339</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>8709</th>\n      <td>-1.258823</td>\n      <td>1</td>\n      <td>0.010600</td>\n      <td>6</td>\n      <td>0.405740</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>-1.523114</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>7924</th>\n      <td>1.884828</td>\n      <td>1</td>\n      <td>0.772838</td>\n      <td>2</td>\n      <td>-1.231326</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1.434879</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>19507</th>\n      <td>1.626304</td>\n      <td>1</td>\n      <td>0.201159</td>\n      <td>0</td>\n      <td>-1.231326</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>-0.347245</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>17743</th>\n      <td>1.305734</td>\n      <td>1</td>\n      <td>-0.370519</td>\n      <td>7</td>\n      <td>0.740977</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>-0.411997</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>5531</th>\n      <td>0.561186</td>\n      <td>0</td>\n      <td>-0.751638</td>\n      <td>3</td>\n      <td>0.690866</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1.439766</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>17770</th>\n      <td>0.499140</td>\n      <td>1</td>\n      <td>-0.942198</td>\n      <td>3</td>\n      <td>0.785449</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0.901698</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>16000 rows × 12 columns</p>\n</div>","text/plain":"       CreditScore  Gender       Age  Tenure   Balance  NumOfProducts  \\\n12775     2.060624       1  1.153957       3  0.530487              2   \n16843     0.923119       1 -0.561079       1  0.847798              1   \n8262      0.892096       0 -0.561079       4 -1.231326              2   \n9554      1.326416       0 -0.942198       3 -0.486994              3   \n8709     -1.258823       1  0.010600       6  0.405740              2   \n...            ...     ...       ...     ...       ...            ...   \n7924      1.884828       1  0.772838       2 -1.231326              2   \n19507     1.626304       1  0.201159       0 -1.231326              1   \n17743     1.305734       1 -0.370519       7  0.740977              1   \n5531      0.561186       0 -0.751638       3  0.690866              1   \n17770     0.499140       1 -0.942198       3  0.785449              1   \n\n       HasCrCard  IsActiveMember  EstimatedSalary  France  Spain  Germany  \n12775          1               1        -1.521255       0      1        0  \n16843          1               1         0.408574       1      0        0  \n8262           1               0         0.266068       1      0        0  \n9554           1               0         0.489339       1      0        0  \n8709           1               0        -1.523114       1      0        0  \n...          ...             ...              ...     ...    ...      ...  \n7924           1               1         1.434879       1      0        0  \n19507          1               1        -0.347245       1      0        0  \n17743          1               1        -0.411997       0      0        1  \n5531           0               0         1.439766       1      0        0  \n17770          1               1         0.901698       1      0        0  \n\n[16000 rows x 12 columns]"},"exec_count":156,"output_type":"execute_result"}},"pos":48,"type":"cell"}
{"cell_type":"code","exec_count":157,"id":"cc6dab","input":"from sklearn.ensemble import RandomForestClassifier as rfc\nfrom sklearn.datasets import make_classification as mc\n","pos":91,"type":"cell"}
{"cell_type":"code","exec_count":158,"id":"b19992","input":"churndf.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CreditScore</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n      <th>France</th>\n      <th>Spain</th>\n      <th>Germany</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>619</td>\n      <td>0</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>608</td>\n      <td>0</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>502</td>\n      <td>0</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>699</td>\n      <td>0</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>850</td>\n      <td>0</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   CreditScore  Gender  Age  Tenure    Balance  NumOfProducts  HasCrCard  \\\n0          619       0   42       2       0.00              1          1   \n1          608       0   41       1   83807.86              1          0   \n2          502       0   42       8  159660.80              3          1   \n3          699       0   39       1       0.00              2          0   \n4          850       0   43       2  125510.82              1          1   \n\n   IsActiveMember  EstimatedSalary  Exited  France  Spain  Germany  \n0               1        101348.88       1       1      0        0  \n1               1        112542.58       0       0      1        0  \n2               0        113931.57       1       1      0        0  \n3               0         93826.63       0       1      0        0  \n4               1         79084.10       0       0      1        0  "},"exec_count":158,"output_type":"execute_result"}},"pos":92,"type":"cell"}
{"cell_type":"code","exec_count":159,"id":"644b8a","input":"clf = rfc(n_estimators = 100)\nclf.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-11 {color: black;background-color: white;}#sk-container-id-11 pre{padding: 0;}#sk-container-id-11 div.sk-toggleable {background-color: white;}#sk-container-id-11 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-11 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-11 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-11 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-11 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-11 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-11 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-11 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-11 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-11 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-11 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-11 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-11 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-11 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-11 div.sk-item {position: relative;z-index: 1;}#sk-container-id-11 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-11 div.sk-item::before, #sk-container-id-11 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-11 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-11 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-11 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-11 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-11 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-11 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-11 div.sk-label-container {text-align: center;}#sk-container-id-11 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-11 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-11\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" checked><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div>","text/plain":"RandomForestClassifier()"},"exec_count":159,"output_type":"execute_result"}},"pos":93,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"7ef26c","input":"dummies = pd.get_dummies(churndf[\"Gender\"])\ndummies.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Female</th>\n      <th>Male</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Female  Male\n0       1     0\n1       1     0\n2       1     0\n3       1     0\n4       1     0"},"exec_count":16,"output_type":"execute_result"}},"pos":32,"type":"cell"}
{"cell_type":"code","exec_count":160,"id":"1fd21b","input":"y_pred_clf = clf.predict(x_test)","pos":94,"type":"cell"}
{"cell_type":"code","exec_count":161,"id":"1e9377","input":"from sklearn.metrics import accuracy_score","pos":95,"type":"cell"}
{"cell_type":"code","exec_count":162,"id":"c66d4a","input":"print(\"ACCURACY OF THE MODEL: \", accuracy_score(y_test, y_pred_clf))","output":{"0":{"name":"stdout","output_type":"stream","text":"ACCURACY OF THE MODEL:  0.972\n"}},"pos":96,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":163,"id":"5e7f1d","input":"sns.heatmap(confusion_matrix(y_test, y_pred_clf), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":163,"output_type":"execute_result"},"1":{"data":{"image/png":"0925a1b056bb0a5008c596c5fa6062138ddbf50a","text/plain":"<Figure size 936x360 with 2 Axes>"},"exec_count":163,"output_type":"execute_result"}},"pos":97,"type":"cell"}
{"cell_type":"code","exec_count":164,"id":"7d518a","input":"recall_score(y_test, y_pred_clf)","output":{"0":{"data":{"text/plain":"0.894478527607362"},"exec_count":164,"output_type":"execute_result"}},"pos":98,"type":"cell"}
{"cell_type":"code","exec_count":165,"id":"68cf1f","input":"print(classification_report(y_test, y_pred_clf))","output":{"0":{"name":"stdout","output_type":"stream","text":"              precision    recall  f1-score   support\n\n           0       0.97      0.99      0.98      3185\n           1       0.97      0.89      0.93       815\n\n    accuracy                           0.97      4000\n   macro avg       0.97      0.94      0.96      4000\nweighted avg       0.97      0.97      0.97      4000\n\n"}},"pos":99,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"eb103d","input":"churndf[\"Gender\"] = dummies[\"Male\"]\nchurndf.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CreditScore</th>\n      <th>Geography</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>619</td>\n      <td>France</td>\n      <td>0</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>608</td>\n      <td>Spain</td>\n      <td>0</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>502</td>\n      <td>France</td>\n      <td>0</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>699</td>\n      <td>France</td>\n      <td>0</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>850</td>\n      <td>Spain</td>\n      <td>0</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   CreditScore Geography  Gender  Age  Tenure    Balance  NumOfProducts  \\\n0          619    France       0   42       2       0.00              1   \n1          608     Spain       0   41       1   83807.86              1   \n2          502    France       0   42       8  159660.80              3   \n3          699    France       0   39       1       0.00              2   \n4          850     Spain       0   43       2  125510.82              1   \n\n   HasCrCard  IsActiveMember  EstimatedSalary  Exited  \n0          1               1        101348.88       1  \n1          0               1        112542.58       0  \n2          1               0        113931.57       1  \n3          0               0         93826.63       0  \n4          1               1         79084.10       0  "},"exec_count":17,"output_type":"execute_result"}},"pos":33,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"a48961","input":"dummies2 = pd.get_dummies(churndf[\"Geography\"])\ndummies2.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>France</th>\n      <th>Germany</th>\n      <th>Spain</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   France  Germany  Spain\n0       1        0      0\n1       0        0      1\n2       1        0      0\n3       1        0      0\n4       0        0      1"},"exec_count":18,"output_type":"execute_result"}},"pos":34,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"003a94","input":"churndf['France'] = dummies2['France']\nchurndf['Spain'] = dummies2['Spain']\nchurndf['Germany'] = dummies2['Germany']","pos":35,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"b0fb93","input":"from sklearn.svm import SVC","pos":83,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"dde309","input":"churndf.drop(['Geography'],axis = 1, inplace = True)","pos":36,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"088079","input":"X = churndf.loc[:, churndf.columns != \"Exited\"]\nY = churndf['Exited']","pos":37,"type":"cell"}
{"cell_type":"code","exec_count":36,"id":"6bef45","input":"y_test.value_counts()","output":{"0":{"data":{"text/plain":"0    3185\n1     815\nName: Exited, dtype: int64"},"exec_count":36,"output_type":"execute_result"}},"pos":38,"type":"cell"}
{"cell_type":"code","exec_count":37,"id":"60ead0","input":"from sklearn.metrics import accuracy_score,plot_precision_recall_curve, plot_roc_curve, ConfusionMatrixDisplay, auc, roc_auc_score, classification_report, confusion_matrix","pos":39,"type":"cell"}
{"cell_type":"code","exec_count":39,"id":"666ab5","input":"y_test.value_counts()","output":{"0":{"data":{"text/plain":"0    3185\n1     815\nName: Exited, dtype: int64"},"exec_count":39,"output_type":"execute_result"}},"pos":50,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"ae5e56","input":"import pandas as pd # Data manipulation\nimport numpy as np # mathemetical operations\nimport seaborn as sns # Data visualization\nimport matplotlib.pyplot as plt # Data visualization\nimport plotly.express as px # Data visualization\n\nfrom sklearn.metrics import recall_score\n","pos":7,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"f55635","input":"from sklearn.linear_model import LogisticRegression","pos":52,"type":"cell"}
{"cell_type":"code","exec_count":41,"id":"a3f72b","input":"log = LogisticRegression()","pos":53,"type":"cell"}
{"cell_type":"code","exec_count":42,"id":"dee553","input":"log.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>","text/plain":"LogisticRegression()"},"exec_count":42,"output_type":"execute_result"}},"pos":54,"type":"cell"}
{"cell_type":"code","exec_count":43,"id":"75c4c5","input":"y_pred_log = log.predict(x_test)\ny_pred_log","output":{"0":{"data":{"text/plain":"array([0, 1, 0, ..., 0, 0, 0])"},"exec_count":43,"output_type":"execute_result"}},"pos":55,"type":"cell"}
{"cell_type":"code","exec_count":44,"id":"aabeaf","input":"recall_score(y_test, y_pred_log)","output":{"0":{"data":{"text/plain":"0.05644171779141104"},"exec_count":44,"output_type":"execute_result"}},"pos":56,"type":"cell"}
{"cell_type":"code","exec_count":45,"id":"98d579","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_pred_log), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":45,"output_type":"execute_result"},"1":{"data":{"image/png":"1185ceb04f61fe35ca243e79ee05fa766772e591","text/plain":"<Figure size 936x360 with 2 Axes>"},"exec_count":45,"output_type":"execute_result"}},"pos":57,"type":"cell"}
{"cell_type":"code","exec_count":46,"id":"8dbc96","input":"from sklearn.neighbors import KNeighborsClassifier as KNN","pos":59,"type":"cell"}
{"cell_type":"code","exec_count":47,"id":"4dea00","input":"k = 4\nmy_KNN_model = KNN(n_neighbors=k)","pos":60,"type":"cell"}
{"cell_type":"code","exec_count":48,"id":"371a02","input":"my_KNN_model.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=4)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=4)</pre></div></div></div></div></div>","text/plain":"KNeighborsClassifier(n_neighbors=4)"},"exec_count":48,"output_type":"execute_result"}},"pos":61,"type":"cell"}
{"cell_type":"code","exec_count":49,"id":"1fa061","input":"y_pred_knn = my_KNN_model.predict(x_test)\ny_pred_knn","output":{"0":{"data":{"text/plain":"array([0, 0, 0, ..., 1, 0, 1])"},"exec_count":49,"output_type":"execute_result"}},"pos":62,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"1e3660","input":"churndf = pd.read_csv('data/Churn_Modelling.csv')","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":50,"id":"2a97bb","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_pred_knn), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":50,"output_type":"execute_result"},"1":{"data":{"image/png":"9424c2b194bde781984a426717ffe86be1391255","text/plain":"<Figure size 936x360 with 2 Axes>"},"exec_count":50,"output_type":"execute_result"}},"pos":63,"type":"cell"}
{"cell_type":"code","exec_count":51,"id":"4009de","input":"recall_score(y_test, y_pred_knn)","output":{"0":{"data":{"text/plain":"0.19141104294478528"},"exec_count":51,"output_type":"execute_result"}},"pos":64,"type":"cell"}
{"cell_type":"code","exec_count":52,"id":"896fa0","input":"from sklearn.naive_bayes import GaussianNB\ngnb = GaussianNB()\ngnb.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GaussianNB</label><div class=\"sk-toggleable__content\"><pre>GaussianNB()</pre></div></div></div></div></div>","text/plain":"GaussianNB()"},"exec_count":52,"output_type":"execute_result"}},"pos":67,"type":"cell"}
{"cell_type":"code","exec_count":53,"id":"31acf9","input":"y_pred_gnb = gnb.predict(x_test)","pos":68,"type":"cell"}
{"cell_type":"code","exec_count":54,"id":"5d09c1","input":"print(\"Gaussian Naive Bayes model accuracy(in %):\", accuracy_score(y_test, y_pred_gnb)*100)","output":{"0":{"name":"stdout","output_type":"stream","text":"Gaussian Naive Bayes model accuracy(in %): 78.77499999999999\n"}},"pos":69,"type":"cell"}
{"cell_type":"code","exec_count":55,"id":"1722ed","input":"recall_score(y_test, y_pred_knn)","output":{"0":{"data":{"text/plain":"0.19141104294478528"},"exec_count":55,"output_type":"execute_result"}},"pos":70,"type":"cell"}
{"cell_type":"code","exec_count":56,"id":"862a18","input":"sns.heatmap(confusion_matrix(y_test, y_pred_knn), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":56,"output_type":"execute_result"},"1":{"data":{"image/png":"9424c2b194bde781984a426717ffe86be1391255","text/plain":"<Figure size 936x360 with 2 Axes>"},"exec_count":56,"output_type":"execute_result"}},"pos":71,"type":"cell"}
{"cell_type":"code","exec_count":57,"id":"4cedd9","input":"import graphviz\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import tree\nfrom sklearn.model_selection import GridSearchCV","pos":73,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":58,"id":"0ea314","input":"treeClassifier = DecisionTreeClassifier(max_depth=5)\ntreeClassifier.fit(x_train, y_train)\n\ndata = tree.export_graphviz(treeClassifier, class_names=['0', '1'], out_file=None)\ngraph = graphviz.Source(data)\ngraph","output":{"0":{"data":{"image/svg+xml":"10794f0b397b67477640939edf133c4e96c2960c","text/plain":"<graphviz.sources.Source at 0x7f0f636cb100>"},"exec_count":58,"output_type":"execute_result"}},"pos":74,"type":"cell"}
{"cell_type":"code","exec_count":59,"id":"9dbc5d","input":"y_pred_dt = treeClassifier.predict(x_test)","pos":75,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"d5f3eb","input":"churndf.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>RowNumber</th>\n      <th>CustomerId</th>\n      <th>Surname</th>\n      <th>CreditScore</th>\n      <th>Geography</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>15634602</td>\n      <td>Hargrave</td>\n      <td>619</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>15647311</td>\n      <td>Hill</td>\n      <td>608</td>\n      <td>Spain</td>\n      <td>Female</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>15619304</td>\n      <td>Onio</td>\n      <td>502</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>15701354</td>\n      <td>Boni</td>\n      <td>699</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>15737888</td>\n      <td>Mitchell</td>\n      <td>850</td>\n      <td>Spain</td>\n      <td>Female</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n0          1    15634602  Hargrave          619    France  Female   42   \n1          2    15647311      Hill          608     Spain  Female   41   \n2          3    15619304      Onio          502    France  Female   42   \n3          4    15701354      Boni          699    France  Female   39   \n4          5    15737888  Mitchell          850     Spain  Female   43   \n\n   Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n0       2       0.00              1          1               1   \n1       1   83807.86              1          0               1   \n2       8  159660.80              3          1               0   \n3       1       0.00              2          0               0   \n4       2  125510.82              1          1               1   \n\n   EstimatedSalary  Exited  \n0        101348.88       1  \n1        112542.58       0  \n2        113931.57       1  \n3         93826.63       0  \n4         79084.10       0  "},"exec_count":6,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":60,"id":"ca5c14","input":"# param_grid = {'C': [0.1, 1, 10, 100],  \n#               'gamma': [1, 0.1, 0.01, 0.001, 0.0001], \n#               'gamma':['scale', 'auto'],\n#               'kernel': ['linear']}\n# grid = GridSearchCV(, param_grid, refit = True, verbose = 3,n_jobs=-1)","pos":76,"type":"cell"}
{"cell_type":"code","exec_count":61,"id":"13b558","input":"# grid.fit(X_train, y_train)","pos":77,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":62,"id":"4f6788","input":"print(grid.best_params_) \ngrid_predictions = grid.predict(x_test)","output":{"0":{"ename":"NameError","evalue":"name 'grid' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [62]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[43mgrid\u001b[49m\u001b[38;5;241m.\u001b[39mbest_params_) \n\u001b[1;32m      2\u001b[0m grid_predictions \u001b[38;5;241m=\u001b[39m grid\u001b[38;5;241m.\u001b[39mpredict(x_test)\n","\u001b[0;31mNameError\u001b[0m: name 'grid' is not defined"]}},"pos":78,"type":"cell"}
{"cell_type":"code","exec_count":63,"id":"e56f35","input":"print(classification_report(y_test, y_pred_dt))","output":{"0":{"name":"stdout","output_type":"stream","text":"              precision    recall  f1-score   support\n\n           0       0.88      0.95      0.91      3185\n           1       0.70      0.49      0.58       815\n\n    accuracy                           0.85      4000\n   macro avg       0.79      0.72      0.74      4000\nweighted avg       0.84      0.85      0.84      4000\n\n"}},"pos":79,"type":"cell"}
{"cell_type":"code","exec_count":64,"id":"306b59","input":"sv = SVC()\nsv.fit(x_train, y_train)\ny_pred_svc = svc.predict(x_test)","output":{"0":{"ename":"NameError","evalue":"name 'svc' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [64]\u001b[0m, in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m sv \u001b[38;5;241m=\u001b[39m SVC()\n\u001b[1;32m      2\u001b[0m sv\u001b[38;5;241m.\u001b[39mfit(x_train, y_train)\n\u001b[0;32m----> 3\u001b[0m y_pred_svc \u001b[38;5;241m=\u001b[39m \u001b[43msvc\u001b[49m\u001b[38;5;241m.\u001b[39mpredict(x_test)\n","\u001b[0;31mNameError\u001b[0m: name 'svc' is not defined"]}},"pos":84,"type":"cell"}
{"cell_type":"code","exec_count":65,"id":"f42cfa","input":"sns.heatmap(confusion_matrix(y_test, y_pred_svc), annot=True, fmt='g')","output":{"0":{"ename":"NameError","evalue":"name 'y_pred_svc' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [65]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m sns\u001b[38;5;241m.\u001b[39mheatmap(confusion_matrix(y_test, \u001b[43my_pred_svc\u001b[49m), annot\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m, fmt\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mg\u001b[39m\u001b[38;5;124m'\u001b[39m)\n","\u001b[0;31mNameError\u001b[0m: name 'y_pred_svc' is not defined"]}},"pos":85,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"da54bd","input":"churndf.info()","output":{"0":{"name":"stdout","output_type":"stream","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 20000 entries, 0 to 19999\nData columns (total 14 columns):\n #   Column           Non-Null Count  Dtype  \n---  ------           --------------  -----  \n 0   RowNumber        20000 non-null  int64  \n 1   CustomerId       20000 non-null  int64  \n 2   Surname          20000 non-null  object \n 3   CreditScore      20000 non-null  int64  \n 4   Geography        20000 non-null  object \n 5   Gender           20000 non-null  object \n 6   Age              20000 non-null  int64  \n 7   Tenure           20000 non-null  int64  \n 8   Balance          20000 non-null  float64\n 9   NumOfProducts    20000 non-null  int64  \n 10  HasCrCard        20000 non-null  int64  \n 11  IsActiveMember   20000 non-null  int64  \n 12  EstimatedSalary  20000 non-null  float64\n 13  Exited           20000 non-null  int64  \ndtypes: float64(2), int64(9), object(3)\nmemory usage: 2.1+ MB\n"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"ca892c","input":"churndf.describe()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>RowNumber</th>\n      <th>CustomerId</th>\n      <th>CreditScore</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>20000.000000</td>\n      <td>2.000000e+04</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n      <td>20000.00000</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>5000.500000</td>\n      <td>1.569094e+07</td>\n      <td>650.528800</td>\n      <td>38.921800</td>\n      <td>5.012800</td>\n      <td>76485.889288</td>\n      <td>1.53020</td>\n      <td>0.705500</td>\n      <td>0.515100</td>\n      <td>100090.239881</td>\n      <td>0.203700</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>2886.823503</td>\n      <td>7.193439e+04</td>\n      <td>96.650882</td>\n      <td>10.487544</td>\n      <td>2.892102</td>\n      <td>62395.845170</td>\n      <td>0.58164</td>\n      <td>0.455829</td>\n      <td>0.499784</td>\n      <td>57509.054966</td>\n      <td>0.402759</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>1.556570e+07</td>\n      <td>350.000000</td>\n      <td>18.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>11.580000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2500.750000</td>\n      <td>1.562853e+07</td>\n      <td>584.000000</td>\n      <td>32.000000</td>\n      <td>3.000000</td>\n      <td>0.000000</td>\n      <td>1.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>51002.110000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>5000.500000</td>\n      <td>1.569074e+07</td>\n      <td>652.000000</td>\n      <td>37.000000</td>\n      <td>5.000000</td>\n      <td>97198.540000</td>\n      <td>1.00000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>100193.915000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>7500.250000</td>\n      <td>1.575323e+07</td>\n      <td>718.000000</td>\n      <td>44.000000</td>\n      <td>7.000000</td>\n      <td>127644.240000</td>\n      <td>2.00000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>149388.247500</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>10000.000000</td>\n      <td>1.581569e+07</td>\n      <td>850.000000</td>\n      <td>92.000000</td>\n      <td>10.000000</td>\n      <td>250898.090000</td>\n      <td>4.00000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>199992.480000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"          RowNumber    CustomerId   CreditScore           Age        Tenure  \\\ncount  20000.000000  2.000000e+04  20000.000000  20000.000000  20000.000000   \nmean    5000.500000  1.569094e+07    650.528800     38.921800      5.012800   \nstd     2886.823503  7.193439e+04     96.650882     10.487544      2.892102   \nmin        1.000000  1.556570e+07    350.000000     18.000000      0.000000   \n25%     2500.750000  1.562853e+07    584.000000     32.000000      3.000000   \n50%     5000.500000  1.569074e+07    652.000000     37.000000      5.000000   \n75%     7500.250000  1.575323e+07    718.000000     44.000000      7.000000   \nmax    10000.000000  1.581569e+07    850.000000     92.000000     10.000000   \n\n             Balance  NumOfProducts     HasCrCard  IsActiveMember  \\\ncount   20000.000000    20000.00000  20000.000000    20000.000000   \nmean    76485.889288        1.53020      0.705500        0.515100   \nstd     62395.845170        0.58164      0.455829        0.499784   \nmin         0.000000        1.00000      0.000000        0.000000   \n25%         0.000000        1.00000      0.000000        0.000000   \n50%     97198.540000        1.00000      1.000000        1.000000   \n75%    127644.240000        2.00000      1.000000        1.000000   \nmax    250898.090000        4.00000      1.000000        1.000000   \n\n       EstimatedSalary        Exited  \ncount     20000.000000  20000.000000  \nmean     100090.239881      0.203700  \nstd       57509.054966      0.402759  \nmin          11.580000      0.000000  \n25%       51002.110000      0.000000  \n50%      100193.915000      0.000000  \n75%      149388.247500      0.000000  \nmax      199992.480000      1.000000  "},"exec_count":8,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":86,"id":"ee3d45","input":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score","pos":101,"type":"cell"}
{"cell_type":"code","exec_count":87,"id":"ae0bc4","input":"# Number of trees in random forest\nn_estimators = [100,200,300]\n# Number of features to consider at every split\n\n# Maximum number of levels in tree\nmax_depth = [6,10,20]\n# Minimum number of samples required to split a node\nmin_samples_split = [5, 10]\n# Minimum number of samples required at each leaf node\nmin_samples_leaf = [1, 2, 4]\n# Method of selecting samples for training each tree\nbootstrap = [True, False]\n# Create the random grid\nparam_grid = {'n_estimators': n_estimators,\n               'max_features': ['sqrt'],\n               'max_depth': max_depth,\n               'min_samples_split': min_samples_split,\n               'min_samples_leaf': min_samples_leaf,\n               'bootstrap': bootstrap}","pos":102,"type":"cell"}
{"cell_type":"code","exec_count":88,"id":"03a90d","input":"CV_rfc = GridSearchCV(estimator = clf, param_grid=param_grid, cv= 5)","pos":103,"type":"cell"}
{"cell_type":"code","exec_count":89,"id":"f34e72","input":"CV_rfc.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-9 {color: black;background-color: white;}#sk-container-id-9 pre{padding: 0;}#sk-container-id-9 div.sk-toggleable {background-color: white;}#sk-container-id-9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-9 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-9 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-9 div.sk-item {position: relative;z-index: 1;}#sk-container-id-9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-9 div.sk-item::before, #sk-container-id-9 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-9 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-9 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-9 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-9 div.sk-label-container {text-align: center;}#sk-container-id-9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-9 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-9\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=RandomForestClassifier(),\n             param_grid={&#x27;bootstrap&#x27;: [True, False], &#x27;max_depth&#x27;: [6, 10, 20],\n                         &#x27;max_features&#x27;: [&#x27;sqrt&#x27;],\n                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n                         &#x27;min_samples_split&#x27;: [5, 10],\n                         &#x27;n_estimators&#x27;: [100, 200, 300]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5, estimator=RandomForestClassifier(),\n             param_grid={&#x27;bootstrap&#x27;: [True, False], &#x27;max_depth&#x27;: [6, 10, 20],\n                         &#x27;max_features&#x27;: [&#x27;sqrt&#x27;],\n                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n                         &#x27;min_samples_split&#x27;: [5, 10],\n                         &#x27;n_estimators&#x27;: [100, 200, 300]})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" ><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" ><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div>","text/plain":"GridSearchCV(cv=5, estimator=RandomForestClassifier(),\n             param_grid={'bootstrap': [True, False], 'max_depth': [6, 10, 20],\n                         'max_features': ['sqrt'],\n                         'min_samples_leaf': [1, 2, 4],\n                         'min_samples_split': [5, 10],\n                         'n_estimators': [100, 200, 300]})"},"exec_count":89,"output_type":"execute_result"}},"pos":104,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"c73946","input":"columns_to_drop = ['RowNumber', 'CustomerId', 'Surname']\nchurndf.drop(columns_to_drop, axis=1, inplace = True)","pos":16,"type":"cell"}
{"cell_type":"code","exec_count":93,"id":"256d23","input":"y_pred_rfgs = CV_rfc.predict(x_test)","pos":105,"type":"cell"}
{"cell_type":"code","exec_count":95,"id":"eb5e64","input":"print(accuracy_score(y_pred_rfgs, y_test))","output":{"0":{"name":"stdout","output_type":"stream","text":"0.97075\n"}},"pos":106,"type":"cell"}
{"cell_type":"code","exec_count":96,"id":"4e9ce9","input":"print(classification_report(y_test, y_pred_rfgs))","output":{"0":{"name":"stdout","output_type":"stream","text":"              precision    recall  f1-score   support\n\n           0       0.97      0.99      0.98      3185\n           1       0.96      0.89      0.93       815\n\n    accuracy                           0.97      4000\n   macro avg       0.97      0.94      0.95      4000\nweighted avg       0.97      0.97      0.97      4000\n\n"}},"pos":107,"type":"cell"}
{"cell_type":"markdown","id":"0c6000","input":"##### Drop unnecessary columns","pos":15,"type":"cell"}
{"cell_type":"markdown","id":"0cd788","input":"##### Summary","pos":30,"type":"cell"}
{"cell_type":"markdown","id":"1316b8","input":"> 1 = Churned\n>\n>\n> 0 = Not Churned\n\n","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"354e2d","input":"#### Support Vector Classifier\n\n","pos":82,"type":"cell"}
{"cell_type":"markdown","id":"3603fd","input":"This bar graph shows our percentage of exited to non\\-exited customers. As shown, we have a large percentage of exited customers along with the opposite for non\\-exited customers.\n\n","pos":21,"type":"cell"}
{"cell_type":"markdown","id":"3b5873","input":"#### Decision Tree Classifier\n\n","pos":72,"type":"cell"}
{"cell_type":"markdown","id":"3f7128","input":"1\\)Graph 1 shows the gender of the customer and whether or not they exited.\n\n2\\)Graph 2 shows whether or not the customer had a credit card or not when they exited.\n\n3\\)Graph 3 shows whether or not the customer that exited was an active member or not.\n\n4\\)Graph 4 shows the number of products a customer had compared to whether or not they exited.\n\n5\\)Graph 5 shows the country of the customer and whether or not the person exited.\n\n6\\)Shows the number of customers by country.\n\n","pos":24,"type":"cell"}
{"cell_type":"markdown","id":"49285a","input":"- What features are significant in prediction the churn in a customer.\n- To suggest measure in order to improve the retention rate with respect to customer category.\n\n","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"4ee5d6","input":"### Grid Search CV\n\n","pos":100,"type":"cell"}
{"cell_type":"markdown","id":"550350","input":"#### **Logistic Regression**\n\n","pos":51,"type":"cell"}
{"cell_type":"markdown","id":"6784cd","input":"### `Random Forest Classifier`\n\n","pos":90,"type":"cell"}
{"cell_type":"markdown","id":"67b949","input":"- The dataset we chose includes multiple variables that describe customers at a bank. Our target is finding whether or not a customer will leave the bank, and our variable for that is Exited, with a value of 1 meaning that the customer has left, and a value of 0 meaning that the customer remains.\n- Through our analysis of the correlation between variables, we found that all of the ones that we didn't remove played a small role in predicting whether or not the customer has exited or will exit \\(as seen in our heat\\-map\\).\n- Some of the variables we chose to analyze through exploratory data analysis were the age of the customer, their estimated salary, balance, tenure,\n  gender, which country they were from, whether they had a credit card or not, how active they were, and the number of products they were utilizing from the bank.\n\n","pos":31,"type":"cell"}
{"cell_type":"markdown","id":"6b3736","input":"The box plots above show the relationship between multiple factors such as age, estimated salary, balance, and tenure, to whether they exited or not.\n\n","pos":27,"type":"cell"}
{"cell_type":"markdown","id":"892df9","input":"## Customer Churn Prediction\n\n","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"a15937","input":"#### **KNeighbours Classifier**\n\n","pos":58,"type":"cell"}
{"cell_type":"markdown","id":"b0ac35","input":"##### Column Statistics","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"b0f113","input":"##### Dataset Info","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"bdcdae","input":"This scatter plot shows the relationship between the age and balance of the customers, and how that affects the number of people that have exited. \n\n","pos":29,"type":"cell"}
{"cell_type":"markdown","id":"c18bd5","input":"<h4> Goal</h4>\n\n","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"c4887f","input":"##### Assessing the proportions of our target value triggers to our defaults.\n\n","pos":19,"type":"cell"}
{"cell_type":"markdown","id":"cb27d2","input":"This uses Bayes Theorem which is: P\\(A|B\\) = P \\(B|A\\) . P \\(A\\) / P\\(B\\)\n\nGood for well\\-separated categories, very high\\-dimensional data, and when data is matched by naive assumprtions.\n\n","pos":66,"type":"cell"}
{"cell_type":"markdown","id":"d0baf3","input":"##### Import Dataset","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"d7a5ab","input":"#### Naive Bayes\n\n","pos":65,"type":"cell"}
{"cell_type":"markdown","id":"db3d0b","input":"One of the most important applications of data science in the commercial sector is churn prediction. Its popularity stems from the fact that its impacts are more tangible to comprehend, and it plays a significant role in the company's overall revenues.\n\nChurn is described as \"when a client cancels a subscription to a service they have been utilizing\" in business terms. People cancelling Spotify/Netflix memberships are a regular example. So, based on their utilization of the service, Churn Prediction is effectively projecting which clients are most likely to cancel a subscription, i.e. 'leave a company.'\n\nFrom a business standpoint, obtaining this information is critical because recruiting new clients is generally more difficult and costly than retaining existing customers. As a result, the information acquired through Churn Prediction allows them to focus more on the customers who are most likely to leave.\n\n","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"e19105","input":"##### Creating a heat\\-map to assess the correlation between our variables.\n\n","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"e238bc","input":"##### Creating box-plots to examine the spread of our data among multiple variables.\n\n","pos":25,"type":"cell"}
{"cell_type":"markdown","id":"ec7d9a","input":"##### Creating count-plots for values that wouldn't be properly visualized by box plots due to being categorical.\n\n","pos":22,"type":"cell"}
{"cell_type":"markdown","id":"ef7d61","input":"##### Importing Required Libraries\n\n","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"f88a9a","input":"### Splitting the Data\n\n","pos":40,"type":"cell"}
{"id":0,"time":1657561406022,"type":"user"}
{"last_load":1657561406367,"type":"file"}