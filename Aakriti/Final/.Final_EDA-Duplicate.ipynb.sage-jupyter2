{"backend_state":"running","connection_file":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/.local/share/jupyter/runtime/kernel-3908d128-96a3-4d27-a56e-10b0ca23b994.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1657212932483,"exec_count":3,"id":"535c23","input":"import pandas as pd # Data manipulation\nimport numpy as np # mathemetical operations\nimport seaborn as sns # Data visualization\nimport matplotlib.pyplot as plt # Data visualization\nimport plotly.express as px # Data visualization\n\nfrom sklearn.metrics import recall_score\n\nimport warnings\nwarnings.filterwarnings(\"ignore\") #to ignore the warnings\nfrom sklearn.datasets import load_iris","kernel":"ds_env","pos":7,"start":1657212932424,"state":"done","type":"cell"}
{"cell_type":"code","end":1657215764206,"exec_count":7,"id":"699e38","input":"from sklearn import preprocessing\ndata = load_iris()\n\nX_data = data.data\ntarget = data.target\n\nstandard = preprocessing.scale(X_data)\nprint(standard)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"[[-9.00681170e-01  1.01900435e+00 -1.34022653e+00 -1.31544430e+00]\n [-1.14301691e+00 -1.31979479e-01 -1.34022653e+00 -1.31544430e+00]\n [-1.38535265e+00  3.28414053e-01 -1.39706395e+00 -1.31544430e+00]\n [-1.50652052e+00  9.82172869e-02 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  1.24920112e+00 -1.34022653e+00 -1.31544430e+00]\n [-5.37177559e-01  1.93979142e+00 -1.16971425e+00 -1.05217993e+00]\n [-1.50652052e+00  7.88807586e-01 -1.34022653e+00 -1.18381211e+00]\n [-1.02184904e+00  7.88807586e-01 -1.28338910e+00 -1.31544430e+00]\n [-1.74885626e+00 -3.62176246e-01 -1.34022653e+00 -1.31544430e+00]\n [-1.14301691e+00  9.82172869e-02 -1.28338910e+00 -1.44707648e+00]\n [-5.37177559e-01  1.47939788e+00 -1.28338910e+00 -1.31544430e+00]\n [-1.26418478e+00  7.88807586e-01 -1.22655167e+00 -1.31544430e+00]\n [-1.26418478e+00 -1.31979479e-01 -1.34022653e+00 -1.44707648e+00]\n [-1.87002413e+00 -1.31979479e-01 -1.51073881e+00 -1.44707648e+00]\n [-5.25060772e-02  2.16998818e+00 -1.45390138e+00 -1.31544430e+00]\n [-1.73673948e-01  3.09077525e+00 -1.28338910e+00 -1.05217993e+00]\n [-5.37177559e-01  1.93979142e+00 -1.39706395e+00 -1.05217993e+00]\n [-9.00681170e-01  1.01900435e+00 -1.34022653e+00 -1.18381211e+00]\n [-1.73673948e-01  1.70959465e+00 -1.16971425e+00 -1.18381211e+00]\n [-9.00681170e-01  1.70959465e+00 -1.28338910e+00 -1.18381211e+00]\n [-5.37177559e-01  7.88807586e-01 -1.16971425e+00 -1.31544430e+00]\n [-9.00681170e-01  1.47939788e+00 -1.28338910e+00 -1.05217993e+00]\n [-1.50652052e+00  1.24920112e+00 -1.56757623e+00 -1.31544430e+00]\n [-9.00681170e-01  5.58610819e-01 -1.16971425e+00 -9.20547742e-01]\n [-1.26418478e+00  7.88807586e-01 -1.05603939e+00 -1.31544430e+00]\n [-1.02184904e+00 -1.31979479e-01 -1.22655167e+00 -1.31544430e+00]\n [-1.02184904e+00  7.88807586e-01 -1.22655167e+00 -1.05217993e+00]\n [-7.79513300e-01  1.01900435e+00 -1.28338910e+00 -1.31544430e+00]\n [-7.79513300e-01  7.88807586e-01 -1.34022653e+00 -1.31544430e+00]\n [-1.38535265e+00  3.28414053e-01 -1.22655167e+00 -1.31544430e+00]\n [-1.26418478e+00  9.82172869e-02 -1.22655167e+00 -1.31544430e+00]\n [-5.37177559e-01  7.88807586e-01 -1.28338910e+00 -1.05217993e+00]\n [-7.79513300e-01  2.40018495e+00 -1.28338910e+00 -1.44707648e+00]\n [-4.16009689e-01  2.63038172e+00 -1.34022653e+00 -1.31544430e+00]\n [-1.14301691e+00  9.82172869e-02 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  3.28414053e-01 -1.45390138e+00 -1.31544430e+00]\n [-4.16009689e-01  1.01900435e+00 -1.39706395e+00 -1.31544430e+00]\n [-1.14301691e+00  1.24920112e+00 -1.34022653e+00 -1.44707648e+00]\n [-1.74885626e+00 -1.31979479e-01 -1.39706395e+00 -1.31544430e+00]\n [-9.00681170e-01  7.88807586e-01 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  1.01900435e+00 -1.39706395e+00 -1.18381211e+00]\n [-1.62768839e+00 -1.74335684e+00 -1.39706395e+00 -1.18381211e+00]\n [-1.74885626e+00  3.28414053e-01 -1.39706395e+00 -1.31544430e+00]\n [-1.02184904e+00  1.01900435e+00 -1.22655167e+00 -7.88915558e-01]\n [-9.00681170e-01  1.70959465e+00 -1.05603939e+00 -1.05217993e+00]\n [-1.26418478e+00 -1.31979479e-01 -1.34022653e+00 -1.18381211e+00]\n [-9.00681170e-01  1.70959465e+00 -1.22655167e+00 -1.31544430e+00]\n [-1.50652052e+00  3.28414053e-01 -1.34022653e+00 -1.31544430e+00]\n [-6.58345429e-01  1.47939788e+00 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  5.58610819e-01 -1.34022653e+00 -1.31544430e+00]\n [ 1.40150837e+00  3.28414053e-01  5.35408562e-01  2.64141916e-01]\n [ 6.74501145e-01  3.28414053e-01  4.21733708e-01  3.95774101e-01]\n [ 1.28034050e+00  9.82172869e-02  6.49083415e-01  3.95774101e-01]\n [-4.16009689e-01 -1.74335684e+00  1.37546573e-01  1.32509732e-01]\n [ 7.95669016e-01 -5.92373012e-01  4.78571135e-01  3.95774101e-01]\n [-1.73673948e-01 -5.92373012e-01  4.21733708e-01  1.32509732e-01]\n [ 5.53333275e-01  5.58610819e-01  5.35408562e-01  5.27406285e-01]\n [-1.14301691e+00 -1.51316008e+00 -2.60315415e-01 -2.62386821e-01]\n [ 9.16836886e-01 -3.62176246e-01  4.78571135e-01  1.32509732e-01]\n [-7.79513300e-01 -8.22569778e-01  8.07091462e-02  2.64141916e-01]\n [-1.02184904e+00 -2.43394714e+00 -1.46640561e-01 -2.62386821e-01]\n [ 6.86617933e-02 -1.31979479e-01  2.51221427e-01  3.95774101e-01]\n [ 1.89829664e-01 -1.97355361e+00  1.37546573e-01 -2.62386821e-01]\n [ 3.10997534e-01 -3.62176246e-01  5.35408562e-01  2.64141916e-01]\n [-2.94841818e-01 -3.62176246e-01 -8.98031345e-02  1.32509732e-01]\n [ 1.03800476e+00  9.82172869e-02  3.64896281e-01  2.64141916e-01]\n [-2.94841818e-01 -1.31979479e-01  4.21733708e-01  3.95774101e-01]\n [-5.25060772e-02 -8.22569778e-01  1.94384000e-01 -2.62386821e-01]\n [ 4.32165405e-01 -1.97355361e+00  4.21733708e-01  3.95774101e-01]\n [-2.94841818e-01 -1.28296331e+00  8.07091462e-02 -1.30754636e-01]\n [ 6.86617933e-02  3.28414053e-01  5.92245988e-01  7.90670654e-01]\n [ 3.10997534e-01 -5.92373012e-01  1.37546573e-01  1.32509732e-01]\n [ 5.53333275e-01 -1.28296331e+00  6.49083415e-01  3.95774101e-01]\n [ 3.10997534e-01 -5.92373012e-01  5.35408562e-01  8.77547895e-04]\n [ 6.74501145e-01 -3.62176246e-01  3.08058854e-01  1.32509732e-01]\n [ 9.16836886e-01 -1.31979479e-01  3.64896281e-01  2.64141916e-01]\n [ 1.15917263e+00 -5.92373012e-01  5.92245988e-01  2.64141916e-01]\n [ 1.03800476e+00 -1.31979479e-01  7.05920842e-01  6.59038469e-01]\n [ 1.89829664e-01 -3.62176246e-01  4.21733708e-01  3.95774101e-01]\n [-1.73673948e-01 -1.05276654e+00 -1.46640561e-01 -2.62386821e-01]\n [-4.16009689e-01 -1.51316008e+00  2.38717193e-02 -1.30754636e-01]\n [-4.16009689e-01 -1.51316008e+00 -3.29657076e-02 -2.62386821e-01]\n [-5.25060772e-02 -8.22569778e-01  8.07091462e-02  8.77547895e-04]\n [ 1.89829664e-01 -8.22569778e-01  7.62758269e-01  5.27406285e-01]\n [-5.37177559e-01 -1.31979479e-01  4.21733708e-01  3.95774101e-01]\n [ 1.89829664e-01  7.88807586e-01  4.21733708e-01  5.27406285e-01]\n [ 1.03800476e+00  9.82172869e-02  5.35408562e-01  3.95774101e-01]\n [ 5.53333275e-01 -1.74335684e+00  3.64896281e-01  1.32509732e-01]\n [-2.94841818e-01 -1.31979479e-01  1.94384000e-01  1.32509732e-01]\n [-4.16009689e-01 -1.28296331e+00  1.37546573e-01  1.32509732e-01]\n [-4.16009689e-01 -1.05276654e+00  3.64896281e-01  8.77547895e-04]\n [ 3.10997534e-01 -1.31979479e-01  4.78571135e-01  2.64141916e-01]\n [-5.25060772e-02 -1.05276654e+00  1.37546573e-01  8.77547895e-04]\n [-1.02184904e+00 -1.74335684e+00 -2.60315415e-01 -2.62386821e-01]\n [-2.94841818e-01 -8.22569778e-01  2.51221427e-01  1.32509732e-01]\n [-1.73673948e-01 -1.31979479e-01  2.51221427e-01  8.77547895e-04]\n [-1.73673948e-01 -3.62176246e-01  2.51221427e-01  1.32509732e-01]\n [ 4.32165405e-01 -3.62176246e-01  3.08058854e-01  1.32509732e-01]\n [-9.00681170e-01 -1.28296331e+00 -4.30827696e-01 -1.30754636e-01]\n [-1.73673948e-01 -5.92373012e-01  1.94384000e-01  1.32509732e-01]\n [ 5.53333275e-01  5.58610819e-01  1.27429511e+00  1.71209594e+00]\n [-5.25060772e-02 -8.22569778e-01  7.62758269e-01  9.22302838e-01]\n [ 1.52267624e+00 -1.31979479e-01  1.21745768e+00  1.18556721e+00]\n [ 5.53333275e-01 -3.62176246e-01  1.04694540e+00  7.90670654e-01]\n [ 7.95669016e-01 -1.31979479e-01  1.16062026e+00  1.31719939e+00]\n [ 2.12851559e+00 -1.31979479e-01  1.61531967e+00  1.18556721e+00]\n [-1.14301691e+00 -1.28296331e+00  4.21733708e-01  6.59038469e-01]\n [ 1.76501198e+00 -3.62176246e-01  1.44480739e+00  7.90670654e-01]\n [ 1.03800476e+00 -1.28296331e+00  1.16062026e+00  7.90670654e-01]\n [ 1.64384411e+00  1.24920112e+00  1.33113254e+00  1.71209594e+00]\n [ 7.95669016e-01  3.28414053e-01  7.62758269e-01  1.05393502e+00]\n [ 6.74501145e-01 -8.22569778e-01  8.76433123e-01  9.22302838e-01]\n [ 1.15917263e+00 -1.31979479e-01  9.90107977e-01  1.18556721e+00]\n [-1.73673948e-01 -1.28296331e+00  7.05920842e-01  1.05393502e+00]\n [-5.25060772e-02 -5.92373012e-01  7.62758269e-01  1.58046376e+00]\n [ 6.74501145e-01  3.28414053e-01  8.76433123e-01  1.44883158e+00]\n [ 7.95669016e-01 -1.31979479e-01  9.90107977e-01  7.90670654e-01]\n [ 2.24968346e+00  1.70959465e+00  1.67215710e+00  1.31719939e+00]\n [ 2.24968346e+00 -1.05276654e+00  1.78583195e+00  1.44883158e+00]\n [ 1.89829664e-01 -1.97355361e+00  7.05920842e-01  3.95774101e-01]\n [ 1.28034050e+00  3.28414053e-01  1.10378283e+00  1.44883158e+00]\n [-2.94841818e-01 -5.92373012e-01  6.49083415e-01  1.05393502e+00]\n [ 2.24968346e+00 -5.92373012e-01  1.67215710e+00  1.05393502e+00]\n [ 5.53333275e-01 -8.22569778e-01  6.49083415e-01  7.90670654e-01]\n [ 1.03800476e+00  5.58610819e-01  1.10378283e+00  1.18556721e+00]\n [ 1.64384411e+00  3.28414053e-01  1.27429511e+00  7.90670654e-01]\n [ 4.32165405e-01 -5.92373012e-01  5.92245988e-01  7.90670654e-01]\n [ 3.10997534e-01 -1.31979479e-01  6.49083415e-01  7.90670654e-01]\n [ 6.74501145e-01 -5.92373012e-01  1.04694540e+00  1.18556721e+00]\n [ 1.64384411e+00 -1.31979479e-01  1.16062026e+00  5.27406285e-01]\n [ 1.88617985e+00 -5.92373012e-01  1.33113254e+00  9.22302838e-01]\n [ 2.49201920e+00  1.70959465e+00  1.50164482e+00  1.05393502e+00]\n [ 6.74501145e-01 -5.92373012e-01  1.04694540e+00  1.31719939e+00]\n [ 5.53333275e-01 -5.92373012e-01  7.62758269e-01  3.95774101e-01]\n [ 3.10997534e-01 -1.05276654e+00  1.04694540e+00  2.64141916e-01]\n [ 2.24968346e+00 -1.31979479e-01  1.33113254e+00  1.44883158e+00]\n [ 5.53333275e-01  7.88807586e-01  1.04694540e+00  1.58046376e+00]\n [ 6.74501145e-01  9.82172869e-02  9.90107977e-01  7.90670654e-01]\n [ 1.89829664e-01 -1.31979479e-01  5.92245988e-01  7.90670654e-01]\n [ 1.28034050e+00  9.82172869e-02  9.33270550e-01  1.18556721e+00]\n [ 1.03800476e+00  9.82172869e-02  1.04694540e+00  1.58046376e+00]\n [ 1.28034050e+00  9.82172869e-02  7.62758269e-01  1.44883158e+00]\n [-5.25060772e-02 -8.22569778e-01  7.62758269e-01  9.22302838e-01]\n [ 1.15917263e+00  3.28414053e-01  1.21745768e+00  1.44883158e+00]\n [ 1.03800476e+00  5.58610819e-01  1.10378283e+00  1.71209594e+00]\n [ 1.03800476e+00 -1.31979479e-01  8.19595696e-01  1.44883158e+00]\n [ 5.53333275e-01 -1.28296331e+00  7.05920842e-01  9.22302838e-01]\n [ 7.95669016e-01 -1.31979479e-01  8.19595696e-01  1.05393502e+00]\n [ 4.32165405e-01  7.88807586e-01  9.33270550e-01  1.44883158e+00]\n [ 6.86617933e-02 -1.31979479e-01  7.62758269e-01  7.90670654e-01]]\n"}},"pos":92,"start":1657215764092,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"15e249","input":"","pos":84,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"1d1ec6","input":"","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"2b7a39","input":"","pos":78,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"6d2a64","input":"","pos":94,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"721cac","input":"print(grid.best_params_) \ngrid_predictions = grid.predict(X_test)","pos":69,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"89643c","input":"","pos":93,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b9032b","input":"","pos":79,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d438ec","input":"","pos":77,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"dad517","input":"parameters = {\n    \"loss\":[\"deviance\"],\n    \"learning_rate\": [0.01, 0.025, 0.05, 0.075, 0.1, 0.15, 0.2],\n    \"min_samples_split\": np.linspace(0.1, 0.5, 12),\n    \"min_samples_leaf\": np.linspace(0.1, 0.5, 12),\n    \"max_depth\":[3,5,8],\n    \"max_features\":[\"log2\",\"sqrt\"],\n    }\n\nclf = GridSearchCV(GradientBoostingClassifier(), parameters, cv=10, n_jobs=-1)\n\nclf.fit(x_train, y_train)\nprint(clf.score(x_train, y_train))\nprint(clf.best_params_)","pos":87,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"db8902","input":"","pos":76,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f0a642","input":"clf = rfc(n_estimators = 100)\n\nclf.fit(X_train, y_train)","pos":83,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f5bb12","input":"param_grid = {'C': [0.1, 1, 10, 100],  \n              'gamma': [1, 0.1, 0.01, 0.001, 0.0001], \n              'gamma':['scale', 'auto'],\n              'kernel': ['linear']}\ngrid = GridSearchCV(SVC(), param_grid, refit = True, verbose = 3,n_jobs=-1)","pos":67,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"041789","input":"churndf.info()","output":{"0":{"name":"stdout","output_type":"stream","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 20000 entries, 0 to 19999\nData columns (total 14 columns):\n #   Column           Non-Null Count  Dtype  \n---  ------           --------------  -----  \n 0   RowNumber        20000 non-null  int64  \n 1   CustomerId       20000 non-null  int64  \n 2   Surname          20000 non-null  object \n 3   CreditScore      20000 non-null  int64  \n 4   Geography        20000 non-null  object \n 5   Gender           20000 non-null  object \n 6   Age              20000 non-null  int64  \n 7   Tenure           20000 non-null  int64  \n 8   Balance          20000 non-null  float64\n 9   NumOfProducts    20000 non-null  int64  \n 10  HasCrCard        20000 non-null  int64  \n 11  IsActiveMember   20000 non-null  int64  \n 12  EstimatedSalary  20000 non-null  float64\n 13  Exited           20000 non-null  int64  \ndtypes: float64(2), int64(9), object(3)\nmemory usage: 2.1+ MB\n"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"53e66a","input":"churndf.describe()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>RowNumber</th>\n      <th>CustomerId</th>\n      <th>CreditScore</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>20000.000000</td>\n      <td>2.000000e+04</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n      <td>20000.00000</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n      <td>20000.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>5000.500000</td>\n      <td>1.569094e+07</td>\n      <td>650.528800</td>\n      <td>38.921800</td>\n      <td>5.012800</td>\n      <td>76485.889288</td>\n      <td>1.53020</td>\n      <td>0.705500</td>\n      <td>0.515100</td>\n      <td>100090.239881</td>\n      <td>0.203700</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>2886.823503</td>\n      <td>7.193439e+04</td>\n      <td>96.650882</td>\n      <td>10.487544</td>\n      <td>2.892102</td>\n      <td>62395.845170</td>\n      <td>0.58164</td>\n      <td>0.455829</td>\n      <td>0.499784</td>\n      <td>57509.054966</td>\n      <td>0.402759</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>1.556570e+07</td>\n      <td>350.000000</td>\n      <td>18.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>11.580000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2500.750000</td>\n      <td>1.562853e+07</td>\n      <td>584.000000</td>\n      <td>32.000000</td>\n      <td>3.000000</td>\n      <td>0.000000</td>\n      <td>1.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>51002.110000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>5000.500000</td>\n      <td>1.569074e+07</td>\n      <td>652.000000</td>\n      <td>37.000000</td>\n      <td>5.000000</td>\n      <td>97198.540000</td>\n      <td>1.00000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>100193.915000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>7500.250000</td>\n      <td>1.575323e+07</td>\n      <td>718.000000</td>\n      <td>44.000000</td>\n      <td>7.000000</td>\n      <td>127644.240000</td>\n      <td>2.00000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>149388.247500</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>10000.000000</td>\n      <td>1.581569e+07</td>\n      <td>850.000000</td>\n      <td>92.000000</td>\n      <td>10.000000</td>\n      <td>250898.090000</td>\n      <td>4.00000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>199992.480000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"          RowNumber    CustomerId   CreditScore           Age        Tenure  \\\ncount  20000.000000  2.000000e+04  20000.000000  20000.000000  20000.000000   \nmean    5000.500000  1.569094e+07    650.528800     38.921800      5.012800   \nstd     2886.823503  7.193439e+04     96.650882     10.487544      2.892102   \nmin        1.000000  1.556570e+07    350.000000     18.000000      0.000000   \n25%     2500.750000  1.562853e+07    584.000000     32.000000      3.000000   \n50%     5000.500000  1.569074e+07    652.000000     37.000000      5.000000   \n75%     7500.250000  1.575323e+07    718.000000     44.000000      7.000000   \nmax    10000.000000  1.581569e+07    850.000000     92.000000     10.000000   \n\n             Balance  NumOfProducts     HasCrCard  IsActiveMember  \\\ncount   20000.000000    20000.00000  20000.000000    20000.000000   \nmean    76485.889288        1.53020      0.705500        0.515100   \nstd     62395.845170        0.58164      0.455829        0.499784   \nmin         0.000000        1.00000      0.000000        0.000000   \n25%         0.000000        1.00000      0.000000        0.000000   \n50%     97198.540000        1.00000      1.000000        1.000000   \n75%    127644.240000        2.00000      1.000000        1.000000   \nmax    250898.090000        4.00000      1.000000        1.000000   \n\n       EstimatedSalary        Exited  \ncount     20000.000000  20000.000000  \nmean     100090.239881      0.203700  \nstd       57509.054966      0.402759  \nmin          11.580000      0.000000  \n25%       51002.110000      0.000000  \n50%      100193.915000      0.000000  \n75%      149388.247500      0.000000  \nmax      199992.480000      1.000000  "},"execution_count":11,"metadata":{},"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"269ff5","input":"columns_to_drop = ['RowNumber', 'CustomerId', 'Surname']\nchurndf.drop(columns_to_drop, axis=1, inplace = True)","pos":16,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"adf5b0","input":"corr = churndf.corr()\nplt.figure(figsize=(10,10))\nsns.heatmap(corr, cmap='YlGnBu', annot = True).set_title('Correlation between variables',fontdict= { 'fontsize': 14, 'fontweight':'bold'});","output":{"0":{"data":{"image/png":"","text/plain":"<Figure size 720x720 with 2 Axes>"},"execution_count":13,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"266d35","input":"plt.figure(figsize=(9,5))\nax = sns.barplot(x='Exited', y='Exited', estimator=lambda x: len(x) / len(churndf) * 100, data=churndf, palette = 'Blues')\nax.bar_label(ax.containers[0], fmt='%.f%%')\nax.set_ylabel('%')\nax.set_title('Percentage of exited to non-exited customers',fontdict= { 'fontsize': 14, 'fontweight':'bold'});","output":{"0":{"data":{"image/png":"","text/plain":"<Figure size 648x360 with 1 Axes>"},"execution_count":14,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"550728","input":"fig, axes = plt.subplots(3,2)\nsns.set({'figure.figsize':(12,20)});\nsns.countplot(data = churndf, x = 'Gender', hue = 'Exited', ax = axes [0,0], palette = 'Purples').set_title('Gender to exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.countplot(data = churndf, x = 'HasCrCard', hue = 'Exited', ax = axes [0,1], palette = 'Reds').set_title('Has Credit Card or not to exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.countplot(data = churndf, x = 'IsActiveMember', hue = 'Exited', ax = axes [1,0], palette = 'Oranges').set_title('Active or not to exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.countplot(data = churndf, x = 'NumOfProducts', hue = 'Exited', ax = axes [1,1], palette = 'Blues').set_title('Products to exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.countplot(data=churndf, x = 'Geography', hue = 'Exited', ax = axes[2,0], palette = 'Greens').set_title('Countries in relation to Exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.countplot(data = churndf, x = 'Geography', ax = axes[2,1], palette = 'Purples').set_title('Countries',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nfig.tight_layout();","output":{"0":{"data":{"image/png":"","text/plain":"<Figure size 432x288 with 6 Axes>"},"execution_count":15,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"40c865","input":"fig, axes = plt.subplots(1,4)\nsns.set({'figure.figsize':(13,5)});\nsns.boxplot(data = churndf, x = 'Exited', y = 'Age', ax = axes[0], palette = 'Greens').set_title('Age to Exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.boxplot(data = churndf, x = 'Exited', y = 'EstimatedSalary', ax = axes [1], palette = 'Reds').set_title('Estimated Salary to Exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.boxplot(data = churndf, x = 'Exited', y = 'Balance', ax = axes [2], palette = 'Oranges').set_title('Balance to Exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'})\nsns.boxplot(data = churndf, x = 'Exited', y = 'Tenure', ax = axes [3], palette = 'Blues').set_title('Tenure to Exited',fontdict= { 'fontsize': 14, 'fontweight':'bold'});\nfig.tight_layout()","output":{"0":{"data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAA1gAAAWYCAYAAACrp2cmAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAClgUlEQVR4nOzdeViVdf7/8dcRxBXBDXFc0xFrXNAmTYIw8QvuiaaZU5a0WGqamZpkY+pU1uS4Tws5k1qNuQIlUy6YGWbZYjq2jiUKLpBsiYoI3r8//J17REDgdB/OEZ6P6/Ly3Pc597nf53Cf5XXe9/25bYZhGAIAAAAA/GY1XF0AAAAAAFQVBCwAAAAAsAgBCwAAAAAsQsACAAAAAIsQsAAAAADAIgQsAAAAALAIAQvl1rFjR3Xs2FHLli1z6nrCwsLUsWNHzZw506nrgbRp0ybz75qamurqchz22WefmY/js88+q7T1VtZr4lpXWX+f1NRUcz2bNm1y2nquRWPGjFHHjh01ZswYV5dSpbBtA85TWe9bM2fOVMeOHRUWFmbZfRKw/r/Nmzebb14dO3bUjz/+WOk1OOPL7uX3eeW/im6wgYGBCgwMlL+/vzmPL5jOZX9zKelfRT5kS3uTatSokfl39fLysrr8Erk61H3wwQe666671LNnT3Xt2lWhoaG67777FBcXV+m1WMkZHxD2+yzpX0Ve8/Xr1ze3s/r160tyXSi+Vlz52v/DH/6gW265RY888oi+//57V5dXqdi2UZnsP/Je7V9V+c7jjOB++X2W9K8i2rdvr8DAQLVv396cd638WOTp6gLcRWxsbLHpJ5980kXVOEf79u3NDwD7dEWsW7fO6pJQTjVr1tQf/vCHIvMaNWr0m+/3tttu02233fab7+dasX37dj322GOSpKZNm6pFixZKT0/Xp59+qubNmysyMtJlteXn51dayHVEYGBgkenLf2gpS6dOnXj/cJD9tZ+fn68ffvhBH374oQ4cOKAdO3aodu3ari6vSmDbxuVuuOEGNWnSRJJ08uRJpaWlmfPt79EV2UacqaCgQB4eHrLZbK4upUTNmjX7Tc/VnDlzrCumktHB0qUX0CeffCJJ6ty5syTp3XffVUFBQbHbPfzww+ratav69Omjd955p8QknZ+fr7///e/q16+fOnfurJtvvllPPPGETp48WWoNM2fOVHR0tDndt2/fIr+S5OXladGiRQoPD1fnzp3Vs2dPPfLII/rmm2/K/TifeeYZrVu3zvxn33BXr16tjh07qnPnzjp06JAkKS4uzvzV9Ouvv5ZUtFtl/4XObvny5cV+YUxKStK9996rG2+8UV27dtXIkSO1Y8eOIjX997//1ejRo9WlSxf1799f27dvL/fjqU78/PyK/O3WrVtnBqOzZ89q7ty5uu2229SlSxfdfPPNGjlypN544w1Jl/5ue/fulSTt3bu3SPeopG7S5b8Wx8fHKywsTN27d9ecOXN0/vx5LVy4UD179lRISIiWL19epM7p06crIiJC3bt3V+fOndWnTx89++yzys3NNe/7att5eV87a9as0W233abAwEA98sgj5gdgWRISEiRJPXv21Mcff6zY2Fjt3r1b27Zt07Bhw8zbHTx4UPfdd59CQkLUuXNndevWTXfccYfi4+Ovev9nz57VhAkTFBYWpm7duqlz586KiIjQkiVLlJ+fb97u8veNmJgYhYSEKDg4WFOnTlXHjh115513Frnfu+++Wx07dtTUqVNLXG9YWJj5I9GxY8eK/Xp+/PhxzZgxQ8HBwerUqZNuvfVW/fnPf1ZGRka5njdJxba/kSNHSpImTZqkjh07ql+/fsrLy5MkRUdHq2PHjurdu7dycnKK/aK/bNky3XvvveZ933vvvUV2CzYMQ2+//bZuv/12de3aVX/84x/1yCOPmO9Pdtu2bVO/fv3UpUsX3X333frpp5/K/XiuFfbXflxcnB599FFJUkZGhvlclHebK8mLL76oQYMG6aabblKnTp0UEhKiJ598Uunp6eZtli1bZv7tPv30Uw0bNkxdu3bVsGHDzM8Gu4MHD2rChAm6+eabzdf/5e8Rv/zyi2bNmqVbb73VvH7BggVXrZNtu+pu2+7q73//e7FtQbr0Pcc+f8CAAZo/f77CwsLUuXNnhYSEaPbs2fr111/N21/+Wfr++++rf//+6tatm+6++279/PPPJd7OrqzP5k2bNpnrPn36tKRLn2933nmnunXrpm7duunee+/Vl19+Werj3LRpk/r27WtO27fty7/Pbty4UcOHD1fXrl3VrVs33XnnnXr//ffL/VyOHDmy2OtLuvRe0blzZ3Xs2FHr16+XJB0+fFiBgYHq2LGj/vGPf0gq3q262vcZ+308/vjjCgoKMt8LV6xYoYsXL5o1nT59Wk888YS6d++u4OBg/f3vf5dhGOV+TOVFwNKlbtXFixfl4+Ojl156STabTadOndJHH31U5HaTJk3Szp07lZ+fr9q1a2v+/Pk6ePBgsfubPHmyli5dqqNHj+q6666TYRjavHmzRo8erZycnBJraNWqlVq1amVO33DDDUV2xxs/frxeffVVHT16VK1atVJBQYE+/PBD/elPf9J33333mx7/mDFjdOutt+rChQuKjo7WiRMn9Nxzz0mSJkyYoG7duhVbxr5bhF2zZs0UGBioG264QdKl3bAefPBBffbZZ/L29pa/v78OHDigCRMm6IMPPpAknT9/Xg899JC++uorXbx4UR4eHnriiSf0yy+//KbHU90sXbpU//rXv3Tq1Cn9/ve/l7e3t7799ltz+w0MDFS9evUkSfXq1Sv3LoHp6emaM2eOPDw8dPbsWa1Zs0bDhw/X22+/rbp16+qXX37RsmXLtHv3bnOZ7du3KycnR61bt5a/v7+OHz+uN998U0899ZSksrfz8rx2PvroI82ZM0cnTpxQ7dq1dejQIT3zzDPleq7sb7KHDx9WXFycjhw5IsMw1Lp1a918883m7VJTU7V37155eXmpQ4cO8vLy0sGDBzVjxgzt3Lmz1PvPy8tTYmKizp8/r7Zt26px48Y6cuSIXn75ZS1atKjY7fft26fFixerQYMGatCggf70pz9Jkvbv36///ve/ki59Kf3qq68kqdQO2w033KCGDRtKutTxuHyXpYyMDI0aNUrx8fH69ddf1bZtW2VlZWndunX605/+pDNnzpTruSvNX/7yF/n5+Sk5OVlLlizRRx99pE2bNqlGjRp68cUX5ePjU2wZf3//Ih10+24g9m3j2Wef1bx58/TDDz+oZcuWql27tj788EPdddddSklJkST98MMPeuyxx5ScnKyaNWsqIyNDU6ZM+U2PxZ3l5+ebXyK8vLz0u9/9TlLFt7nLffzxx0pLS1Pz5s3VunVrnTp1SnFxcZowYUKJt3/ooYd07tw5FRYW6ttvv9XUqVPNHyK/+uor3XXXXUpMTNSZM2fUtm1b5eXlmUEoKytLo0aN0oYNG5Sbm6t27drpl19+0euvv67JkyeXWiPbdtXftq81+fn5uvfee7Vy5Uqlp6erXbt2OnPmjNauXauxY8fqwoULRW6flpam6dOny2azKS8vT1988YX5meiI9PR0zZo1SzVr1lTjxo0lSf/85z81depU7d+/X02bNpWvr68+++wz3Xfffdq3b1+J99OoUSPzO5t06fP58t3xXn75ZT311FP65ptv1KhRI9WvX1/79+/XlClT9M477zhcv3SpmWF/3b/44os6fvy4oqOjlZeXp169eun+++8vcbmrfZ85cuSI7rzzTv373/9WQUGB2rVrp5SUFL300kvmd1pJevrpp7V582adPXtW9evX1xtvvKGtW7f+psdTIgNGeHi4ERAQYMyePdswDMP405/+ZAQEBBgTJkwwb/PJJ58YAQEBRkBAgPGPf/zDMAzD+PHHH40bbrjBCAgIMO655x7DMAxj79695u0+/vhjwzAMIycnx7j55puNgIAA4+WXXy61jo0bN5rLpqSkmPP37Nljzl+xYoVhGIaRnp5u3HTTTUZAQIDx6KOPlus+r/z3xhtvmLdLT083a7zllluMgIAAY9SoUUZBQYF5G/tyS5cuveo8wzCMsLAwIyAgwJg6dapx8eJFwzAMY9asWUZAQIARHh5uGIZhbNiwwVx+27ZthmEYxu7du815Tz75ZKmPq7q45557Sv375eTkGIZhGA8//LAREBBgLF++3Fzu9OnTxv79+4vdj307tStpm3vyySfNeV988YVRWFho9O7d2wgICDA6depkpKSkGLm5uUaXLl2MgIAA46WXXjLv79tvvy1y/wsXLjQCAgKMP/zhD0ZeXl6p6zSM8r927r77biMgIMDo06eP8euvvxqGYRjTpk0zl/30009LfT53795tvmbt/4KCgoyZM2cax44dM2+XlpZm/PLLL+Z0Xl6e+T4xbdo0c/6V2//58+eN//73v0XWaa8tNDS02N8jICDA+OijjwzDMMzX2pAhQ4yAgADj+eefNwzDMN5++20jICDACAkJKfJ6vJL979anT58i85csWWIEBAQYHTt2NLeJjz76yFz/6tWry7zPkv5d/rfevXu30bFjR+P66683/15//etfzes//fTTYn+fkuYZhmGkpKQYHTt2NAICAox33nnHfF4HDRpkBAQEGLNmzTIMwzBmzJhhBAQEGN26dTNOnDhhGMb/treAgABj48aNpT6ua0Fpr/2OHTsasbGx5u0qus1d/h7w3XffGYWFheb0unXrzPUcOXLEMAzDWLp0abFtZdWqVea8Q4cOGYZhGGPGjDEC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cEC///3v1aNHD0mXvjjdfffdSk9P188//6zOnTub29aVv1Jbyf6rXr169bRjxw55eXnpmWeeKbavdmnbeXlfOx06dNAXX3yhpKQk5ebmqn79+uX+5emtt95Ss2bNdNttt6lmzZpq2bKlbrrpJnPwCvu2bv/F784779S8efOUnZ2twYMHl3lMh/05aNu2rbZs2aKLFy9WaBAO6dIX0MjISL355pt68cUXVVhYqC5dupQ56qf9eT137pwMwzA/FLt06aJdu3bpyJEjOnDggLp27apdu3aZrzMr3j/Wr1+vbdu2qU6dOmrWrJmSk5M1e/bsqw5lfHmX4Mr3O5vNJsMwNGjQII0bN8687uDBg+aACB06dNC3336rr776SmlpaWrWrJnZ7auqLv8SYP+i4Og2d+DAAfP+3nvvPfn5+SkmJsb8HKiorl276rPPPtP27ds1btw485fq77//Xtdff7253dlsNr300kvmF6C8vDzt3LlTt9xyS6n3zbZd9bfta0nXrl21Zs0aFRQU6KmnnjKPUy8oKNDu3bsrPEKzfUTgjIwM5ebmqm7dukpMTCz38h06dFCdOnV07tw59erVS3/+85/NAPbTTz/pxIkTpS5b2rb6+9//3vx+l5CQoIEDB6qwsNDcDhs1auRQ9+1y586d07Rp03ThwgXze+eyZcsUEhKiTp06lbpcad9nunbtqp9++kl169bVq6++aj6vubm52rZtm3r37l0kwH3wwQfq3r27MjMzzR8yrVStA9aWLVvML0ybNm0q8geNj4/XjBkz9MMPP+ibb75Rr1691LVrVx04cEDPPfec3nnnHaWmpsrLy6vIRnnzzTcrNDRUu3bt0uOPP64lS5bIy8tLx44d05kzZzR//nxdf/31JdbTrl0783JUVJR+97vf6cknn1SvXr10yy236JNPPtFf//pXbdiwQenp6crNzVWtWrVKPSD5SnPnzi0Slpo2baq///3vys/P17Rp03T+/HmFh4frxRdf1O23367U1FT95S9/MbsSpdX87bff6s0339TevXvNkdCmTZumxx9/XB9++KFCQkLUvHlznTp1SqdOnVKPHj30f//3fxoyZIiWLVumkydPavLkybruuut09OhR1axZs9hBotVdenp6sZHlRo4cqZEjR2r16tV6//331axZM/n6+pq7vNatW9fcxaddu3batWuXDh48qCFDhsjPz88cpccq9lElz5w5o759+8rLy8scPfBypW3n5X3tPPjgg/riiy907Ngx9e3bV97e3uUOMF9++aX+/e9/q2bNmmrRooU8PT3NX+xvuOEG84OxY8eO2rdvn9avX68vv/xS6enp5foVr2PHjvrwww+VnJyssLAwFRQUFPl1rrz+9Kc/6a233jI/QC4f4bA09uc1MzNT/fv3l4+Pj1avXq27775b69at0y+//KK7775bbdq0UXJysqRLu1aVtzN25fbXu3dvTZw4UUeOHDE7glOnTlWPHj00cuRIbd26VRs3btQdd9xR4v21atXKfK0/+eSTatOmje6//371799fd911l9asWaO//e1vWrNmjby9vXXy5Enl5OTo0Ucf1Y033qj7779f7733ns6ePasBAwaoWbNm1/TJsktjf+3bdxGULu1a06dPH0mOb3OXjwI7ZMgQNWrUSJmZmQ7XOWXKFN1777369ddfNWTIEF133XXKzMxUu3bt9Oabb+ruu+/Wxo0bdeLECQ0aNEjXXXedzp8/rxMnTig/P1+JiYlFfum/HNt21dy2r1WDBw/W6tWr9d133+muu+5S+/btdfHiRZ04cULnzp3T6tWrzV3pyyMoKEgrVqzQhQsXNHz4cNWqVavYqJJXU6dOHU2cOFELFizQv/71L23btk1NmjRRWlqaMjMzNWzYMIWEhJS4bKNGjczDMhYsWKC4uDjdfvvtGjNmjB5++GEtWbJEO3bsUFhYmAoLC83djh977LFSu2iXW79+vT7++OMi85YvXy4/Pz/Nnz9fycnJatGihTkY1pYtWzRt2jTFxsaWehqK0r7PPPzww9q+fbuOHz+uPn366LrrrtPp06d18uRJFRQUaNiwYWrdurX69eunLVu2aOXKldq5c2exLppVqvUogvbdA1u0aFEsLYeFhZldF/vtli1bpt69e5tfHGfMmGF+Ibu81f/3v/9dkyZNUrt27XTs2DGdPHlSrVq10v3336+ePXuWWs/111+vCRMmqEmTJvrll1+0f/9+c8jPV155RY888ohatWqllJQU8wN2zZo1RUaBuZqffvpJ+/fvN//ZRx/829/+ph9++EENGzbU3LlzVa9ePb3wwguqUaOG4uLirjok56xZs8zu3sGDB80Pt4EDB+r1119Xr169dOHCBf3000+qVauW+vfvb44OU6tWLcXExKh79+7m6DrPP//8VXeTqK4uXLhQ5G+3f/9+c+jy2267TT169FB+fr5+/PFHeXp66pZbbtHrr79ufmG5//77dcstt6hu3brmboRWGzFihKKiotSwYUOdOXNGPXv2LHF0sKtt5+V57fTp00ezZ89Ws2bNdO7cObVu3brc58q48847NXz4cLVq1UoZGRk6fPiwmjRpoqFDh+rVV181d4V84YUXdPPNN6tWrVo6d+6cnnrqqXKdIPHhhx/WsGHD1KBBA505c0aDBg3S6NGjy/kM/k+7du0UFBQk6dIxivbjPq/mjjvuUL9+/eTt7a3k5GTt379fhYWFaty4sdatW6ehQ4eqQYMGOnz4sBo2bKiRI0dqzZo15ohMZbly+0tJSVFBQYGmTZums2fPqmfPnhozZoxuuOEG80ef5557ztxF9EoNGzbUrFmz1Lx5c+Xk5Gj//v3mfvizZ8/W008/reuvv14ZGRlKTU1V06ZNNXr0aEVEREi6tB0tWrRIbdq0UX5+vry9vbVw4cJyPZZrif21/80338jDw0Pdu3fXokWLzNeDo9tccHCwpk2bJj8/P50/f17t2rUr92icJbnxxhv1zjvvqG/fvqpXr54OHz4sLy8vs85GjRpp7dq1GjlypBo1aqSff/5Zubm56tKli6ZOnWqed6gkbNtVc9u+Vnl5eenNN99UVFSUWrRooSNHjigzM1O///3vNX78+BJ3gb2akJAQTZkyRX5+fvrll1/Url27Ch/n99BDD2nBggXq1q2bcnNzlZycrAYNGmjYsGEaMWJEqcvZbDY9++yzatOmjc6fP68DBw6Yu8ROmDBBzz//vDp16qTMzEz9+uuvCgwM1KJFi3TXXXeVq660tLRiry/7Xktr166VzWbTc889p/r162vOnDlq2rSpfv7556v+sF/a95nrrrtO69at06BBg8zd+vPz89WzZ88iozY+++yzGjRokOrUqaOcnByNHj3aPB7LSjaDHXvLLSUlRc2bNze/hB0+fFhDhw7V+fPn9fDDD5d6jhoAqKhnn31Wb775pvr3768lS5a4uhwAAFBO1XoXwYqy74p1/fXXyzAMffnllzp//ryaNm2qe+65x9XlAagC1q5dq507d5rHq5Q0oiIAAHBfBKwKCAwM1N69e/Xll1/qwoULatq0qYYMGaKJEyeyWxsAS+zbt087duxQs2bNNGnS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UpKUnZ2tqKgoRUREKCoqSjk5Oc4sAQAAAAAqjdMC1o8//qj169dr/fr1io+P186dO5WcnKyYmBgFBQVp69atCgoKUkxMjLNKAAAAAIBK5bSA9dNPPykwMFB16tSRp6enevTooW3btikxMVGRkZGSpMjISG3fvt1ZJQAAAABApfJ01h0HBARo8eLFysrKUu3atbVr1y517txZGRkZ8vPzkyT5+fkpMzOzzPvy8LDJ17eus0oFAAAAAEs4LWC1b99eDz74oO6//37VrVtXHTt2lIeHh0P3VVhoKDv7rMUVorpr2tTb1SUAAACginHqIBcjR45UbGys3n77bfn6+qpNmzZq3Lix0tPTJUnp6elq1KiRM0sAAAAAgErj1ICVkZEhSTp+/Li2bt2qwYMHKywsTHFxcZKkuLg49e3b15klAAAAAEClcdougpI0adIkZWdny9PTU88884x8fHw0btw4TZkyRRs2bFDz5s21ZMkSZ5YAAAAAAJXGqQHrX//6V7F5DRs21KpVq5y5WgAAAABwCafuIggAAAAA1QkBCwAAAAAsQsACAAAAAIsQsAAAAADAIgQsAAAAALAIAQsAAAAALELAAgAAAACLELAAAAAAwCIELAAAAACwCAELAAAAACxCwAIAAAAAixCwAAAAAMAiBCwAAAAAsAgBCwAAAAAsQsACAAAAAIsQsAAAAADAIgQsAAAAALAIAQsAAAAALELAAgAAAACLELAAAAAAwCIELAAAAACwCAELAAAAACxCwAIAAAAAixCwAAAAAMAiBCwHJCf/rLFjR+vIkcOuLgUAAACAGyFgOWDZsoU6d+6sli5d6OpSAAAAALgRAlYFJSf/rNTUFElSaupRulgAAAAATASsClq2rGjXii4WAAAAADsCVgXZu1f/mz7qokoAAAAAuBsCVgW1bNnqiunWLqoEAAAAgLshYFXQpElTi0xPnjy1lFsCAAAAqG4IWBXUtm07s4vVsmVrtWlznYsrAgAAAOAuCFgOmDRpqurUqUv3CgAAAEARnq4u4FrUtm07rVy5xtVlAAAAAHAzdLAAAAAAwCIELAAAAACwCAELAAAAACxCwAIAAAAAixCwAAAAAMAiBCwAAAAAsAgBCwAAAAAsQsACAAAAAIsQsAAAAADAIgQsAAAAALAIAQsAAAAALELAAgAAAACLELAAAAAAwCIELAAAAACw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ejwAAODNOaEDK0nOeMcZ+fB1H6r3GDXxzbX31XsEAADgKLwGCwAAoBCBBQAAUIjAAgAAKERgAQAAFCKwAAAAChFYAAAAhQgsAACAQgQWAABAIQILAACgEIEFAABQiMACAAAopKneAwAAQL38Ztevs/GeO2t6zBd7n0+SnDb29Joe9ze7fp1x099V02OOREMeWP39/bnssssyefLk3H333enp6cl1112XX//615k6dWruvPPOjB8/fqjHAACA13jnO99Vl+PurfYmSSZPmlTT446b/q66nfNIMuSB9Q//8A9597vfnd7eQ19I7e3tmTNnTq6++uq0t7envb09q1atGuoxAADgNa688k/rctzbb78tSbJ69efqcnyG1pC+BmvXrl35zne+k2XLlg1u6+rqytKlS5MkS5cuzcMPPzyUIwAAANTMkF7B+sIXvpBVq1blhRdeGNy2e/fuVCqVJEmlUsmePXve8H4aGxvS3HzaYdubmkYlL5eb90TQ1DTqdR+LY9lvpDnexwoAAI7XkAXWt7/97UycODFnn312vv/977+l++rvH0hPz4uHbe/re+Ut3e+JqK/vldd9LI5lv5HmjR6rM84YV8NpAAAYCYYssH74wx9m8+bN2bJlS1566aX09vbm05/+dCZNmpTu7u5UKpV0d3dn4sSJQzUCAABATQ3Z88ZuuOGGbNmyJZs3b86Xv/zlnH/++bnjjjsyf/78dHR0JEk6OjqyYMGCoRoBAACgpmr+wpyrr746W7duzYUXXpitW7fm6quvrvUIAAAAQ6Im/9Dweeedl/POOy9JMmHChKxfv74WhwUAAKipkffWcgAAAENEYAEAABQisAAAAAoRWAAAAIUILAAAgEIEFgAAQCECCwAAoBCBBQAAUIjAAgAAKERgAQAAFCKwAAAAChFYAAAAhQgsAACAQgQWAABAIQILAACgEIEFAABQiMACAAAoRGABAAAUIrAAAAAKEVgAAACFCCwAAIBCBBYAAEAhAgsAAKAQgQUAAFCIwAIAAChEYAEAABQisAAAAAppqvcA1NC+l9O/5Te1PeaB/kP/fVtjbY+77+WkUttDAgCAwBohpk8/sy7H3b79F0mSd1Vm1PbAlfqdMwAAI5fAGiGuuurjdTnubbfdnCT53Of+si7HBwCAWvIaLAAAgEIEFgAAQCECCwAAoBCBBQAAUIjAAgAA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AACgEIEFAABQiMACAAAoRGABAAAUIrAAAAAKEVgAAACFCCwAAIBCBBYAAEAhAgsAAKAQgQUAAFCIwAIAAChEYAEAABQisAAAAAoRWAAAAIUILAAAgEIEFgAAQCECCwAAoBCBBXWyc+fOfPSjH82iRYuyePHirF+/Pknyla98JRdccEGWLFmSJUuW5JFHHhnc5+67705bW1sWLlyYRx99dHD7U089lUsuuSRtbW35/Oc/n4GBgSTJwYMHc+2116atrS2XX355nn322dqeJADACNNU7wFgpGpsbMyNN96Ys846K729vbnssssyd+7cJMlVV12Vj33sY6+5/dNPP53Ozs50dnamWq1m+fLleeCBB9LY2Jhbb701a9asyfve97584hOfyJYtWzJv3rzce++9Of300/PQQw+ls7Mzd9xxR+688846nC0AwMjgChbUSaVSyVlnnZUkGTt2bGbMmJFqtXrE23d1dWXx4sUZPXp0pk2blunTp2fbtm3p7u5Ob29vzj333DQ0NGTp0qXp6upKkmzevDmXXnppkmThwoV5/PHHB69uAQBQnitYMAw8++yz+clPfpLZs2fnhz/8Yb7+9a+no6MjZ599dm688caMHz8+1Wo1s2fPHtxn8uTJqVaraWpqSktLy+D2lpaWwVCrVquZMmVKkqSpqSnjxo3L3r17M3HixCPO0tjYkObm04boTN+8pqZDPwcaTjMNVx4rAKg/gQV19sILL2TlypW56aabMnbs2HzkIx/JJz/5yTQ0NGTdunX54he/mNtvv/11rzw1NDQccXuSo37uSPr7B9LT8+Jxnk15fX2vJMmwmmm4Gq6P1RlnjKv3CABQM54iCHX08ssvZ+XKlbnkkkty4YUXJkne/va3p7GxMaNGjcrll1+eH/3oR0kOXZnatWvX4L7VajWVSuWw7bt27UqlUhncZ+fOnUmSvr6+7N+/P83NzTU6OwCAkUdgQZ0MDAzk5ptvzowZM7J8+fLB7d3d3YO/f/jhhzNz5swkyfz589PZ2ZmDBw9mx44d2b59e84555xUKpWMGTMmTz75ZAYGBtLR0ZEFCxYM7nP//fcnSR544IGcf/75b3gFCwCA4+cpglAnTzzxRDZu3Jj3vve9WbJkSZLk+uuvz6ZNm/LTn/40STJ16tSsWbMmSTJz5swsWrQoF110URobG3PLLbeksbExSXLr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","text/plain":"<Figure size 864x1440 with 4 Axes>"},"execution_count":16,"metadata":{},"output_type":"execute_result"}},"pos":26,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"b55ed9","input":"plt.figure(figsize=(18,8))\nsns.scatterplot(x=\"Age\", y=\"Balance\", hue='Exited', data=churndf) #Importing three variables\nplt.title('Relation of Exited, Age and Balance', fontsize=15, fontweight='bold') #Named and colored the plot\nplt.xticks(fontsize=16)\nplt.yticks(fontsize=16)\nplt.show()","output":{"0":{"data":{"image/png":"","text/plain":"<Figure size 1296x576 with 1 Axes>"},"execution_count":17,"metadata":{},"output_type":"execute_result"}},"pos":28,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"b8a222","input":"dummies = pd.get_dummies(churndf[\"Gender\"])\ndummies.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Female</th>\n      <th>Male</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Female  Male\n0       1     0\n1       1     0\n2       1     0\n3       1     0\n4       1     0"},"execution_count":18,"metadata":{},"output_type":"execute_result"}},"pos":32,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"dc8c50","input":"churndf[\"Gender\"] = dummies[\"Male\"]\nchurndf.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CreditScore</th>\n      <th>Geography</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>619</td>\n      <td>France</td>\n      <td>0</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>608</td>\n      <td>Spain</td>\n      <td>0</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>502</td>\n      <td>France</td>\n      <td>0</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>699</td>\n      <td>France</td>\n      <td>0</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>850</td>\n      <td>Spain</td>\n      <td>0</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   CreditScore Geography  Gender  Age  Tenure    Balance  NumOfProducts  \\\n0          619    France       0   42       2       0.00              1   \n1          608     Spain       0   41       1   83807.86              1   \n2          502    France       0   42       8  159660.80              3   \n3          699    France       0   39       1       0.00              2   \n4          850     Spain       0   43       2  125510.82              1   \n\n   HasCrCard  IsActiveMember  EstimatedSalary  Exited  \n0          1               1        101348.88       1  \n1          0               1        112542.58       0  \n2          1               0        113931.57       1  \n3          0               0         93826.63       0  \n4          1               1         79084.10       0  "},"execution_count":19,"metadata":{},"output_type":"execute_result"}},"pos":33,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"172a90","input":"dummies2 = pd.get_dummies(churndf[\"Geography\"])\ndummies2.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>France</th>\n      <th>Germany</th>\n      <th>Spain</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   France  Germany  Spain\n0       1        0      0\n1       0        0      1\n2       1        0      0\n3       1        0      0\n4       0        0      1"},"execution_count":20,"metadata":{},"output_type":"execute_result"}},"pos":34,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"61f398","input":"churndf['France'] = dummies2['France']\nchurndf['Spain'] = dummies2['Spain']\nchurndf['Germany'] = dummies2['Germany']","pos":35,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"dc3a53","input":"churndf.drop(['Geography'],axis = 1, inplace = True)","pos":36,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"579238","input":"X = churndf.loc[:, churndf.columns != \"Exited\"]\nY = churndf['Exited']","pos":37,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"bf096b","input":"from sklearn.metrics import accuracy_score,plot_precision_recall_curve, plot_roc_curve, ConfusionMatrixDisplay, auc, roc_auc_score, classification_report, confusion_matrix","pos":38,"type":"cell"}
{"cell_type":"code","exec_count":242,"id":"526c04","input":"from sklearn.naive_bayes import GaussianNB\ngnb = GaussianNB()\ngnb.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-22 {color: black;background-color: white;}#sk-container-id-22 pre{padding: 0;}#sk-container-id-22 div.sk-toggleable {background-color: white;}#sk-container-id-22 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-22 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-22 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-22 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-22 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-22 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-22 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-22 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-22 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-22 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-22 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-22 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-22 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-22 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-22 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-22 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-22 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-22 div.sk-item {position: relative;z-index: 1;}#sk-container-id-22 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-22 div.sk-item::before, #sk-container-id-22 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-22 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-22 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-22 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-22 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-22 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-22 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-22 div.sk-label-container {text-align: center;}#sk-container-id-22 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-22 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-22\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-22\" type=\"checkbox\" checked><label for=\"sk-estimator-id-22\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GaussianNB</label><div class=\"sk-toggleable__content\"><pre>GaussianNB()</pre></div></div></div></div></div>","text/plain":"GaussianNB()"},"execution_count":242,"metadata":{},"output_type":"execute_result"}},"pos":58,"type":"cell"}
{"cell_type":"code","exec_count":243,"id":"c4b38c","input":"y_pred_gnb = gnb.predict(x_test)","pos":59,"type":"cell"}
{"cell_type":"code","exec_count":244,"id":"2657da","input":"print(\"Gaussian Naive Bayes model accuracy(in %):\", metrics.accuracy_score(y_test, y_pred_gnb)*100)","output":{"0":{"name":"stdout","output_type":"stream","text":"Gaussian Naive Bayes model accuracy(in %): 80.55\n"}},"pos":60,"type":"cell"}
{"cell_type":"code","exec_count":245,"id":"b6d4f6","input":"recall_score(y_test, y_pred_knn)","output":{"0":{"data":{"text/plain":"0.17095115681233933"},"execution_count":245,"metadata":{},"output_type":"execute_result"}},"pos":61,"type":"cell"}
{"cell_type":"code","exec_count":246,"id":"dbffb1","input":"sns.heatmap(confusion_matrix(y_test, y_pred_knn), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"execution_count":246,"metadata":{},"output_type":"execute_result"},"1":{"data":{"image/png":"","text/plain":"<Figure size 432x288 with 2 Axes>"},"execution_count":246,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":62,"type":"cell"}
{"cell_type":"code","exec_count":248,"id":"82ae89","input":"treeClassifier = DecisionTreeClassifier(max_depth=5)\ntreeClassifier.fit(X_train, y_train)\n\ndata = tree.export_graphviz(treeClassifier, class_names=['0', '1'], out_file=None)\ngraph = graphviz.Source(data)\ngraph","output":{"0":{"data":{"image/svg+xml":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: Tree Pages: 1 -->\n<svg width=\"2992pt\" height=\"671pt\"\n viewBox=\"0.00 0.00 2991.50 671.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 667)\">\n<title>Tree</title>\n<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-667 2987.5,-667 2987.5,4 -4,4\"/>\n<!-- 0 -->\n<g id=\"node1\" class=\"node\">\n<title>0</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2016.5,-663 1840.5,-663 1840.5,-580 2016.5,-580 2016.5,-663\"/>\n<text text-anchor=\"middle\" x=\"1928.5\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[2] &lt;= 73.5</text>\n<text text-anchor=\"middle\" x=\"1928.5\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.327</text>\n<text text-anchor=\"middle\" x=\"1928.5\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 16000</text>\n<text text-anchor=\"middle\" x=\"1928.5\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [12704, 3296]</text>\n<text text-anchor=\"middle\" x=\"1928.5\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 1 -->\n<g id=\"node2\" class=\"node\">\n<title>1</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"1608.5,-544 1432.5,-544 1432.5,-461 1608.5,-461 1608.5,-544\"/>\n<text text-anchor=\"middle\" x=\"1520.5\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[8] &lt;= 170314.883</text>\n<text text-anchor=\"middle\" x=\"1520.5\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.326</text>\n<text text-anchor=\"middle\" x=\"1520.5\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 15891</text>\n<text text-anchor=\"middle\" x=\"1520.5\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [12631, 3260]</text>\n<text text-anchor=\"middle\" x=\"1520.5\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 0&#45;&gt;1 -->\n<g id=\"edge1\" class=\"edge\">\n<title>0&#45;&gt;1</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1840.47,-595.26C1775.16,-576.53 1686.11,-550.99 1618.53,-531.61\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"1619.3,-528.19 1608.72,-528.8 1617.37,-534.92 1619.3,-528.19\"/>\n<text text-anchor=\"middle\" x=\"1620.84\" y=\"-546.96\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">True</text>\n</g>\n<!-- 30 -->\n<g id=\"node31\" class=\"node\">\n<title>30</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2137,-544 2006,-544 2006,-461 2137,-461 2137,-544\"/>\n<text text-anchor=\"middle\" x=\"2071.5\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[0] &lt;= 434.5</text>\n<text text-anchor=\"middle\" x=\"2071.5\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.442</text>\n<text text-anchor=\"middle\" x=\"2071.5\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 109</text>\n<text text-anchor=\"middle\" x=\"2071.5\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [73, 36]</text>\n<text text-anchor=\"middle\" x=\"2071.5\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 0&#45;&gt;30 -->\n<g id=\"edge30\" class=\"edge\">\n<title>0&#45;&gt;30</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1978.11,-579.91C1989.76,-570.38 2002.26,-560.15 2014.21,-550.37\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2016.45,-553.06 2021.97,-544.02 2012.02,-547.64 2016.45,-553.06\"/>\n<text text-anchor=\"middle\" x=\"2019.49\" y=\"-565.2\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">False</text>\n</g>\n<!-- 2 -->\n<g id=\"node3\" class=\"node\">\n<title>2</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"762.5,-425 586.5,-425 586.5,-342 762.5,-342 762.5,-425\"/>\n<text text-anchor=\"middle\" x=\"674.5\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[3] &lt;= 6.5</text>\n<text text-anchor=\"middle\" x=\"674.5\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.322</text>\n<text text-anchor=\"middle\" x=\"674.5\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 13497</text>\n<text text-anchor=\"middle\" x=\"674.5\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [10777, 2720]</text>\n<text text-anchor=\"middle\" x=\"674.5\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 1&#45;&gt;2 -->\n<g id=\"edge2\" class=\"edge\">\n<title>1&#45;&gt;2</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1432.36,-489.31C1273.28,-467.31 939.32,-421.12 772.99,-398.12\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"773.15,-394.61 762.76,-396.71 772.19,-401.54 773.15,-394.61\"/>\n</g>\n<!-- 15 -->\n<g id=\"node16\" class=\"node\">\n<title>15</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"1602.5,-425 1438.5,-425 1438.5,-342 1602.5,-342 1602.5,-425\"/>\n<text text-anchor=\"middle\" x=\"1520.5\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[4] &lt;= 114484.145</text>\n<text text-anchor=\"middle\" x=\"1520.5\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.349</text>\n<text text-anchor=\"middle\" x=\"1520.5\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 2394</text>\n<text text-anchor=\"middle\" x=\"1520.5\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [1854, 540]</text>\n<text text-anchor=\"middle\" x=\"1520.5\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 1&#45;&gt;15 -->\n<g id=\"edge15\" class=\"edge\">\n<title>1&#45;&gt;15</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1520.5,-460.91C1520.5,-452.65 1520.5,-443.86 1520.5,-435.3\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"1524,-435.02 1520.5,-425.02 1517,-435.02 1524,-435.02\"/>\n</g>\n<!-- 3 -->\n<g id=\"node4\" class=\"node\">\n<title>3</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"510,-306 343,-306 343,-223 510,-223 510,-306\"/>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[8] &lt;= 169637.5</text>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.329</text>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 8777</text>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [6958, 1819]</text>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 2&#45;&gt;3 -->\n<g id=\"edge3\" class=\"edge\">\n<title>2&#45;&gt;3</title>\n<path fill=\"none\" stroke=\"black\" d=\"M588.46,-341.91C566.2,-331.41 542.14,-320.06 519.55,-309.4\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"520.84,-306.14 510.3,-305.03 517.85,-312.47 520.84,-306.14\"/>\n</g>\n<!-- 8 -->\n<g id=\"node9\" class=\"node\">\n<title>8</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"753.5,-306 595.5,-306 595.5,-223 753.5,-223 753.5,-306\"/>\n<text text-anchor=\"middle\" x=\"674.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[8] &lt;= 6316.88</text>\n<text text-anchor=\"middle\" x=\"674.5\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.309</text>\n<text text-anchor=\"middle\" x=\"674.5\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 4720</text>\n<text text-anchor=\"middle\" x=\"674.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [3819, 901]</text>\n<text text-anchor=\"middle\" x=\"674.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 2&#45;&gt;8 -->\n<g id=\"edge8\" class=\"edge\">\n<title>2&#45;&gt;8</title>\n<path fill=\"none\" stroke=\"black\" d=\"M674.5,-341.91C674.5,-333.65 674.5,-324.86 674.5,-316.3\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"678,-316.02 674.5,-306.02 671,-316.02 678,-316.02\"/>\n</g>\n<!-- 4 -->\n<g id=\"node5\" class=\"node\">\n<title>4</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"347,-187 180,-187 180,-104 347,-104 347,-187\"/>\n<text text-anchor=\"middle\" x=\"263.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[11] &lt;= 0.5</text>\n<text text-anchor=\"middle\" x=\"263.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.329</text>\n<text text-anchor=\"middle\" x=\"263.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 8746</text>\n<text text-anchor=\"middle\" x=\"263.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [6927, 1819]</text>\n<text text-anchor=\"middle\" x=\"263.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 3&#45;&gt;4 -->\n<g id=\"edge4\" class=\"edge\">\n<title>3&#45;&gt;4</title>\n<path fill=\"none\" stroke=\"black\" d=\"M369.95,-222.91C356.55,-213.29 342.15,-202.95 328.41,-193.09\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"330.12,-190.01 319.95,-187.02 326.03,-195.7 330.12,-190.01\"/>\n</g>\n<!-- 7 -->\n<g id=\"node8\" class=\"node\">\n<title>7</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"487.5,-179.5 365.5,-179.5 365.5,-111.5 487.5,-111.5 487.5,-179.5\"/>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 31</text>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [31, 0]</text>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 3&#45;&gt;7 -->\n<g id=\"edge7\" class=\"edge\">\n<title>3&#45;&gt;7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M426.5,-222.91C426.5,-212.2 426.5,-200.62 426.5,-189.78\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"430,-189.67 426.5,-179.67 423,-189.67 430,-189.67\"/>\n</g>\n<!-- 5 -->\n<g id=\"node6\" class=\"node\">\n<title>5</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"167,-68 0,-68 0,0 167,0 167,-68\"/>\n<text text-anchor=\"middle\" x=\"83.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.322</text>\n<text text-anchor=\"middle\" x=\"83.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 6588</text>\n<text text-anchor=\"middle\" x=\"83.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [5258, 1330]</text>\n<text text-anchor=\"middle\" x=\"83.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 4&#45;&gt;5 -->\n<g id=\"edge5\" class=\"edge\">\n<title>4&#45;&gt;5</title>\n<path fill=\"none\" stroke=\"black\" d=\"M196.73,-103.88C180.35,-93.92 162.87,-83.29 146.67,-73.43\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"148.18,-70.25 137.82,-68.04 144.54,-76.23 148.18,-70.25\"/>\n</g>\n<!-- 6 -->\n<g id=\"node7\" class=\"node\">\n<title>6</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"342.5,-68 184.5,-68 184.5,0 342.5,0 342.5,-68\"/>\n<text text-anchor=\"middle\" x=\"263.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.351</text>\n<text text-anchor=\"middle\" x=\"263.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 2158</text>\n<text text-anchor=\"middle\" x=\"263.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [1669, 489]</text>\n<text text-anchor=\"middle\" x=\"263.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 4&#45;&gt;6 -->\n<g id=\"edge6\" class=\"edge\">\n<title>4&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"black\" d=\"M263.5,-103.73C263.5,-95.52 263.5,-86.86 263.5,-78.56\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"267,-78.3 263.5,-68.3 260,-78.3 267,-78.3\"/>\n</g>\n<!-- 9 -->\n<g id=\"node10\" class=\"node\">\n<title>9</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"645.5,-187 505.5,-187 505.5,-104 645.5,-104 645.5,-187\"/>\n<text text-anchor=\"middle\" x=\"575.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[2] &lt;= 34.5</text>\n<text text-anchor=\"middle\" x=\"575.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.208</text>\n<text text-anchor=\"middle\" x=\"575.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 187</text>\n<text text-anchor=\"middle\" x=\"575.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [165, 22]</text>\n<text text-anchor=\"middle\" x=\"575.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 8&#45;&gt;9 -->\n<g id=\"edge9\" class=\"edge\">\n<title>8&#45;&gt;9</title>\n<path fill=\"none\" stroke=\"black\" d=\"M640.15,-222.91C632.47,-213.83 624.26,-204.12 616.34,-194.77\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"618.92,-192.39 609.79,-187.02 613.57,-196.92 618.92,-192.39\"/>\n</g>\n<!-- 12 -->\n<g id=\"node13\" class=\"node\">\n<title>12</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"821.5,-187 663.5,-187 663.5,-104 821.5,-104 821.5,-187\"/>\n<text text-anchor=\"middle\" x=\"742.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[0] &lt;= 433.5</text>\n<text text-anchor=\"middle\" x=\"742.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.313</text>\n<text text-anchor=\"middle\" x=\"742.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 4533</text>\n<text text-anchor=\"middle\" x=\"742.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [3654, 879]</text>\n<text text-anchor=\"middle\" x=\"742.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 8&#45;&gt;12 -->\n<g id=\"edge12\" class=\"edge\">\n<title>8&#45;&gt;12</title>\n<path fill=\"none\" stroke=\"black\" d=\"M698.09,-222.91C703.16,-214.2 708.56,-204.9 713.79,-195.89\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"716.95,-197.43 718.95,-187.02 710.9,-193.91 716.95,-197.43\"/>\n</g>\n<!-- 10 -->\n<g id=\"node11\" class=\"node\">\n<title>10</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"492,-68 361,-68 361,0 492,0 492,-68\"/>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.287</text>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 75</text>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [62, 13]</text>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 9&#45;&gt;10 -->\n<g id=\"edge10\" class=\"edge\">\n<title>9&#45;&gt;10</title>\n<path fill=\"none\" stroke=\"black\" d=\"M520.02,-103.73C506.99,-94.15 493.12,-83.96 480.17,-74.44\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"481.94,-71.4 471.81,-68.3 477.8,-77.04 481.94,-71.4\"/>\n</g>\n<!-- 11 -->\n<g id=\"node12\" class=\"node\">\n<title>11</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"641,-68 510,-68 510,0 641,0 641,-68\"/>\n<text text-anchor=\"middle\" x=\"575.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.148</text>\n<text text-anchor=\"middle\" x=\"575.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 112</text>\n<text text-anchor=\"middle\" x=\"575.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [103, 9]</text>\n<text text-anchor=\"middle\" x=\"575.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 9&#45;&gt;11 -->\n<g id=\"edge11\" class=\"edge\">\n<title>9&#45;&gt;11</title>\n<path fill=\"none\" stroke=\"black\" d=\"M575.5,-103.73C575.5,-95.52 575.5,-86.86 575.5,-78.56\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"579,-78.3 575.5,-68.3 572,-78.3 579,-78.3\"/>\n</g>\n<!-- 13 -->\n<g id=\"node14\" class=\"node\">\n<title>13</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"781.5,-68 659.5,-68 659.5,0 781.5,0 781.5,-68\"/>\n<text text-anchor=\"middle\" x=\"720.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.124</text>\n<text text-anchor=\"middle\" x=\"720.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 60</text>\n<text text-anchor=\"middle\" x=\"720.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [56, 4]</text>\n<text text-anchor=\"middle\" x=\"720.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 12&#45;&gt;13 -->\n<g id=\"edge13\" class=\"edge\">\n<title>12&#45;&gt;13</title>\n<path fill=\"none\" stroke=\"black\" d=\"M734.31,-103.73C732.64,-95.43 730.88,-86.67 729.2,-78.28\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"732.59,-77.41 727.19,-68.3 725.73,-78.79 732.59,-77.41\"/>\n</g>\n<!-- 14 -->\n<g id=\"node15\" class=\"node\">\n<title>14</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"957.5,-68 799.5,-68 799.5,0 957.5,0 957.5,-68\"/>\n<text text-anchor=\"middle\" x=\"878.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.315</text>\n<text text-anchor=\"middle\" x=\"878.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 4473</text>\n<text text-anchor=\"middle\" x=\"878.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [3598, 875]</text>\n<text text-anchor=\"middle\" x=\"878.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 12&#45;&gt;14 -->\n<g id=\"edge14\" class=\"edge\">\n<title>12&#45;&gt;14</title>\n<path fill=\"none\" stroke=\"black\" d=\"M793.14,-103.73C804.92,-94.24 817.45,-84.16 829.17,-74.72\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"831.55,-77.3 837.14,-68.3 827.16,-71.84 831.55,-77.3\"/>\n</g>\n<!-- 16 -->\n<g id=\"node17\" class=\"node\">\n<title>16</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"1532.5,-306 1374.5,-306 1374.5,-223 1532.5,-223 1532.5,-306\"/>\n<text text-anchor=\"middle\" x=\"1453.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[7] &lt;= 0.5</text>\n<text text-anchor=\"middle\" x=\"1453.5\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.323</text>\n<text text-anchor=\"middle\" x=\"1453.5\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 1503</text>\n<text text-anchor=\"middle\" x=\"1453.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [1198, 305]</text>\n<text text-anchor=\"middle\" x=\"1453.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 15&#45;&gt;16 -->\n<g id=\"edge16\" class=\"edge\">\n<title>15&#45;&gt;16</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1497.25,-341.91C1492.27,-333.2 1486.94,-323.9 1481.79,-314.89\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"1484.71,-312.96 1476.7,-306.02 1478.64,-316.44 1484.71,-312.96\"/>\n</g>\n<!-- 23 -->\n<g id=\"node24\" class=\"node\">\n<title>23</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"1794.5,-306 1630.5,-306 1630.5,-223 1794.5,-223 1794.5,-306\"/>\n<text text-anchor=\"middle\" x=\"1712.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[8] &lt;= 171063.586</text>\n<text text-anchor=\"middle\" x=\"1712.5\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.388</text>\n<text text-anchor=\"middle\" x=\"1712.5\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 891</text>\n<text text-anchor=\"middle\" x=\"1712.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [656, 235]</text>\n<text text-anchor=\"middle\" x=\"1712.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 15&#45;&gt;23 -->\n<g id=\"edge23\" class=\"edge\">\n<title>15&#45;&gt;23</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1587.11,-341.91C1603.35,-332.02 1620.82,-321.37 1637.42,-311.25\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"1639.29,-314.21 1646,-306.02 1635.64,-308.24 1639.29,-314.21\"/>\n</g>\n<!-- 17 -->\n<g id=\"node18\" class=\"node\">\n<title>17</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"1290.5,-187 1126.5,-187 1126.5,-104 1290.5,-104 1290.5,-187\"/>\n<text text-anchor=\"middle\" x=\"1208.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[8] &lt;= 177812.297</text>\n<text text-anchor=\"middle\" x=\"1208.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.358</text>\n<text text-anchor=\"middle\" x=\"1208.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 741</text>\n<text text-anchor=\"middle\" x=\"1208.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [568, 173]</text>\n<text text-anchor=\"middle\" x=\"1208.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 16&#45;&gt;17 -->\n<g id=\"edge17\" class=\"edge\">\n<title>16&#45;&gt;17</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1374.29,-225.68C1350.62,-214.37 1324.46,-201.88 1300.06,-190.22\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"1301.33,-186.95 1290.8,-185.8 1298.32,-193.27 1301.33,-186.95\"/>\n</g>\n<!-- 20 -->\n<g id=\"node21\" class=\"node\">\n<title>20</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"1528,-187 1379,-187 1379,-104 1528,-104 1528,-187\"/>\n<text text-anchor=\"middle\" x=\"1453.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[5] &lt;= 3.5</text>\n<text text-anchor=\"middle\" x=\"1453.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.286</text>\n<text text-anchor=\"middle\" x=\"1453.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 762</text>\n<text text-anchor=\"middle\" x=\"1453.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [630, 132]</text>\n<text text-anchor=\"middle\" x=\"1453.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 16&#45;&gt;20 -->\n<g id=\"edge20\" class=\"edge\">\n<title>16&#45;&gt;20</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1453.5,-222.91C1453.5,-214.65 1453.5,-205.86 1453.5,-197.3\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"1457,-197.02 1453.5,-187.02 1450,-197.02 1457,-197.02\"/>\n</g>\n<!-- 18 -->\n<g id=\"node19\" class=\"node\">\n<title>18</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"1115.5,-68 975.5,-68 975.5,0 1115.5,0 1115.5,-68\"/>\n<text text-anchor=\"middle\" x=\"1045.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.278</text>\n<text text-anchor=\"middle\" x=\"1045.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 198</text>\n<text text-anchor=\"middle\" x=\"1045.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [165, 33]</text>\n<text text-anchor=\"middle\" x=\"1045.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 17&#45;&gt;18 -->\n<g id=\"edge18\" class=\"edge\">\n<title>17&#45;&gt;18</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1147.8,-103.73C1133.2,-93.92 1117.64,-83.46 1103.18,-73.75\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"1105.06,-70.8 1094.81,-68.13 1101.16,-76.61 1105.06,-70.8\"/>\n</g>\n<!-- 19 -->\n<g id=\"node20\" class=\"node\">\n<title>19</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"1283,-68 1134,-68 1134,0 1283,0 1283,-68\"/>\n<text text-anchor=\"middle\" x=\"1208.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.383</text>\n<text text-anchor=\"middle\" x=\"1208.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 543</text>\n<text text-anchor=\"middle\" x=\"1208.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [403, 140]</text>\n<text text-anchor=\"middle\" x=\"1208.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 17&#45;&gt;19 -->\n<g id=\"edge19\" class=\"edge\">\n<title>17&#45;&gt;19</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1208.5,-103.73C1208.5,-95.52 1208.5,-86.86 1208.5,-78.56\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"1212,-78.3 1208.5,-68.3 1205,-78.3 1212,-78.3\"/>\n</g>\n<!-- 21 -->\n<g id=\"node22\" class=\"node\">\n<title>21</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"1450,-68 1301,-68 1301,0 1450,0 1450,-68\"/>\n<text text-anchor=\"middle\" x=\"1375.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.282</text>\n<text text-anchor=\"middle\" x=\"1375.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 755</text>\n<text text-anchor=\"middle\" x=\"1375.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [627, 128]</text>\n<text text-anchor=\"middle\" x=\"1375.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 20&#45;&gt;21 -->\n<g id=\"edge21\" class=\"edge\">\n<title>20&#45;&gt;21</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1424.46,-103.73C1418.15,-94.88 1411.48,-85.51 1405.15,-76.63\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"1407.87,-74.41 1399.22,-68.3 1402.17,-78.48 1407.87,-74.41\"/>\n</g>\n<!-- 22 -->\n<g id=\"node23\" class=\"node\">\n<title>22</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"1581,-68 1468,-68 1468,0 1581,0 1581,-68\"/>\n<text text-anchor=\"middle\" x=\"1524.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.49</text>\n<text text-anchor=\"middle\" x=\"1524.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 7</text>\n<text text-anchor=\"middle\" x=\"1524.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [3, 4]</text>\n<text text-anchor=\"middle\" x=\"1524.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 1</text>\n</g>\n<!-- 20&#45;&gt;22 -->\n<g id=\"edge22\" class=\"edge\">\n<title>20&#45;&gt;22</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1479.94,-103.73C1485.62,-94.97 1491.62,-85.7 1497.33,-76.91\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"1500.4,-78.59 1502.91,-68.3 1494.53,-74.79 1500.4,-78.59\"/>\n</g>\n<!-- 24 -->\n<g id=\"node25\" class=\"node\">\n<title>24</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"1778,-187 1647,-187 1647,-104 1778,-104 1778,-187\"/>\n<text text-anchor=\"middle\" x=\"1712.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[1] &lt;= 0.5</text>\n<text text-anchor=\"middle\" x=\"1712.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.491</text>\n<text text-anchor=\"middle\" x=\"1712.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 23</text>\n<text text-anchor=\"middle\" x=\"1712.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [10, 13]</text>\n<text text-anchor=\"middle\" x=\"1712.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 1</text>\n</g>\n<!-- 23&#45;&gt;24 -->\n<g id=\"edge24\" class=\"edge\">\n<title>23&#45;&gt;24</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1712.5,-222.91C1712.5,-214.65 1712.5,-205.86 1712.5,-197.3\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"1716,-197.02 1712.5,-187.02 1709,-197.02 1716,-197.02\"/>\n</g>\n<!-- 27 -->\n<g id=\"node28\" class=\"node\">\n<title>27</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2017.5,-187 1853.5,-187 1853.5,-104 2017.5,-104 2017.5,-187\"/>\n<text text-anchor=\"middle\" x=\"1935.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[4] &lt;= 190389.188</text>\n<text text-anchor=\"middle\" x=\"1935.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.381</text>\n<text text-anchor=\"middle\" x=\"1935.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 868</text>\n<text text-anchor=\"middle\" x=\"1935.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [646, 222]</text>\n<text text-anchor=\"middle\" x=\"1935.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 23&#45;&gt;27 -->\n<g id=\"edge27\" class=\"edge\">\n<title>23&#45;&gt;27</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1789.87,-222.91C1809.07,-212.83 1829.76,-201.98 1849.35,-191.7\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"1851.04,-194.77 1858.27,-187.02 1847.79,-188.57 1851.04,-194.77\"/>\n</g>\n<!-- 25 -->\n<g id=\"node26\" class=\"node\">\n<title>25</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"1712,-68 1599,-68 1599,0 1712,0 1712,-68\"/>\n<text text-anchor=\"middle\" x=\"1655.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.375</text>\n<text text-anchor=\"middle\" x=\"1655.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 12</text>\n<text text-anchor=\"middle\" x=\"1655.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [3, 9]</text>\n<text text-anchor=\"middle\" x=\"1655.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 1</text>\n</g>\n<!-- 24&#45;&gt;25 -->\n<g id=\"edge25\" class=\"edge\">\n<title>24&#45;&gt;25</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1691.28,-103.73C1686.76,-95.06 1681.99,-85.9 1677.46,-77.18\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"1680.56,-75.55 1672.83,-68.3 1674.35,-78.79 1680.56,-75.55\"/>\n</g>\n<!-- 26 -->\n<g id=\"node27\" class=\"node\">\n<title>26</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"1843,-68 1730,-68 1730,0 1843,0 1843,-68\"/>\n<text text-anchor=\"middle\" x=\"1786.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.463</text>\n<text text-anchor=\"middle\" x=\"1786.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 11</text>\n<text text-anchor=\"middle\" x=\"1786.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [7, 4]</text>\n<text text-anchor=\"middle\" x=\"1786.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 24&#45;&gt;26 -->\n<g id=\"edge26\" class=\"edge\">\n<title>24&#45;&gt;26</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1740.05,-103.73C1746.03,-94.88 1752.37,-85.51 1758.37,-76.63\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"1761.3,-78.54 1764,-68.3 1755.5,-74.63 1761.3,-78.54\"/>\n</g>\n<!-- 28 -->\n<g id=\"node29\" class=\"node\">\n<title>28</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2010,-68 1861,-68 1861,0 2010,0 2010,-68\"/>\n<text text-anchor=\"middle\" x=\"1935.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.376</text>\n<text text-anchor=\"middle\" x=\"1935.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 856</text>\n<text text-anchor=\"middle\" x=\"1935.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [641, 215]</text>\n<text text-anchor=\"middle\" x=\"1935.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 27&#45;&gt;28 -->\n<g id=\"edge28\" class=\"edge\">\n<title>27&#45;&gt;28</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1935.5,-103.73C1935.5,-95.52 1935.5,-86.86 1935.5,-78.56\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"1939,-78.3 1935.5,-68.3 1932,-78.3 1939,-78.3\"/>\n</g>\n<!-- 29 -->\n<g id=\"node30\" class=\"node\">\n<title>29</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2141,-68 2028,-68 2028,0 2141,0 2141,-68\"/>\n<text text-anchor=\"middle\" x=\"2084.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.486</text>\n<text text-anchor=\"middle\" x=\"2084.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 12</text>\n<text text-anchor=\"middle\" x=\"2084.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [5, 7]</text>\n<text text-anchor=\"middle\" x=\"2084.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 1</text>\n</g>\n<!-- 27&#45;&gt;29 -->\n<g id=\"edge29\" class=\"edge\">\n<title>27&#45;&gt;29</title>\n<path fill=\"none\" stroke=\"black\" d=\"M1990.98,-103.73C2004.01,-94.15 2017.88,-83.96 2030.83,-74.44\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2033.2,-77.04 2039.19,-68.3 2029.06,-71.4 2033.2,-77.04\"/>\n</g>\n<!-- 31 -->\n<g id=\"node32\" class=\"node\">\n<title>31</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2128,-417.5 2015,-417.5 2015,-349.5 2128,-349.5 2128,-417.5\"/>\n<text text-anchor=\"middle\" x=\"2071.5\" y=\"-402.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"2071.5\" y=\"-387.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 2</text>\n<text text-anchor=\"middle\" x=\"2071.5\" y=\"-372.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0, 2]</text>\n<text text-anchor=\"middle\" x=\"2071.5\" y=\"-357.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 1</text>\n</g>\n<!-- 30&#45;&gt;31 -->\n<g id=\"edge31\" class=\"edge\">\n<title>30&#45;&gt;31</title>\n<path fill=\"none\" stroke=\"black\" d=\"M2071.5,-460.91C2071.5,-450.2 2071.5,-438.62 2071.5,-427.78\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2075,-427.67 2071.5,-417.67 2068,-427.67 2075,-427.67\"/>\n</g>\n<!-- 32 -->\n<g id=\"node33\" class=\"node\">\n<title>32</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2514.5,-425 2350.5,-425 2350.5,-342 2514.5,-342 2514.5,-425\"/>\n<text text-anchor=\"middle\" x=\"2432.5\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[8] &lt;= 172543.961</text>\n<text text-anchor=\"middle\" x=\"2432.5\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.434</text>\n<text text-anchor=\"middle\" x=\"2432.5\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 107</text>\n<text text-anchor=\"middle\" x=\"2432.5\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [73, 34]</text>\n<text text-anchor=\"middle\" x=\"2432.5\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 30&#45;&gt;32 -->\n<g id=\"edge32\" class=\"edge\">\n<title>30&#45;&gt;32</title>\n<path fill=\"none\" stroke=\"black\" d=\"M2137.29,-480.18C2194.26,-461.71 2277.26,-434.81 2340.75,-414.24\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2341.93,-417.53 2350.37,-411.12 2339.78,-410.87 2341.93,-417.53\"/>\n</g>\n<!-- 33 -->\n<g id=\"node34\" class=\"node\">\n<title>33</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2498,-306 2367,-306 2367,-223 2498,-223 2498,-306\"/>\n<text text-anchor=\"middle\" x=\"2432.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[1] &lt;= 0.5</text>\n<text text-anchor=\"middle\" x=\"2432.5\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.465</text>\n<text text-anchor=\"middle\" x=\"2432.5\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 87</text>\n<text text-anchor=\"middle\" x=\"2432.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [55, 32]</text>\n<text text-anchor=\"middle\" x=\"2432.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 32&#45;&gt;33 -->\n<g id=\"edge33\" class=\"edge\">\n<title>32&#45;&gt;33</title>\n<path fill=\"none\" stroke=\"black\" d=\"M2432.5,-341.91C2432.5,-333.65 2432.5,-324.86 2432.5,-316.3\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2436,-316.02 2432.5,-306.02 2429,-316.02 2436,-316.02\"/>\n</g>\n<!-- 40 -->\n<g id=\"node41\" class=\"node\">\n<title>40</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2864,-306 2709,-306 2709,-223 2864,-223 2864,-306\"/>\n<text text-anchor=\"middle\" x=\"2786.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[4] &lt;= 76780.986</text>\n<text text-anchor=\"middle\" x=\"2786.5\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.18</text>\n<text text-anchor=\"middle\" x=\"2786.5\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 20</text>\n<text text-anchor=\"middle\" x=\"2786.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [18, 2]</text>\n<text text-anchor=\"middle\" x=\"2786.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 32&#45;&gt;40 -->\n<g id=\"edge40\" class=\"edge\">\n<title>32&#45;&gt;40</title>\n<path fill=\"none\" stroke=\"black\" d=\"M2514.6,-355.36C2569.92,-337.08 2642.8,-313 2699.17,-294.36\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2700.39,-297.65 2708.79,-291.19 2698.19,-291 2700.39,-297.65\"/>\n</g>\n<!-- 34 -->\n<g id=\"node35\" class=\"node\">\n<title>34</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2424,-187 2293,-187 2293,-104 2424,-104 2424,-187\"/>\n<text text-anchor=\"middle\" x=\"2358.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[2] &lt;= 76.5</text>\n<text text-anchor=\"middle\" x=\"2358.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.495</text>\n<text text-anchor=\"middle\" x=\"2358.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 42</text>\n<text text-anchor=\"middle\" x=\"2358.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [23, 19]</text>\n<text text-anchor=\"middle\" x=\"2358.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 33&#45;&gt;34 -->\n<g id=\"edge34\" class=\"edge\">\n<title>33&#45;&gt;34</title>\n<path fill=\"none\" stroke=\"black\" d=\"M2406.83,-222.91C2401.26,-214.1 2395.31,-204.7 2389.56,-195.61\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2392.43,-193.6 2384.13,-187.02 2386.52,-197.34 2392.43,-193.6\"/>\n</g>\n<!-- 37 -->\n<g id=\"node38\" class=\"node\">\n<title>37</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2573,-187 2442,-187 2442,-104 2573,-104 2573,-187\"/>\n<text text-anchor=\"middle\" x=\"2507.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[2] &lt;= 77.5</text>\n<text text-anchor=\"middle\" x=\"2507.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.411</text>\n<text text-anchor=\"middle\" x=\"2507.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 45</text>\n<text text-anchor=\"middle\" x=\"2507.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [32, 13]</text>\n<text text-anchor=\"middle\" x=\"2507.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 33&#45;&gt;37 -->\n<g id=\"edge37\" class=\"edge\">\n<title>33&#45;&gt;37</title>\n<path fill=\"none\" stroke=\"black\" d=\"M2458.52,-222.91C2464.16,-214.1 2470.19,-204.7 2476.02,-195.61\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2479.07,-197.33 2481.53,-187.02 2473.18,-193.55 2479.07,-197.33\"/>\n</g>\n<!-- 35 -->\n<g id=\"node36\" class=\"node\">\n<title>35</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2281.5,-68 2159.5,-68 2159.5,0 2281.5,0 2281.5,-68\"/>\n<text text-anchor=\"middle\" x=\"2220.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.444</text>\n<text text-anchor=\"middle\" x=\"2220.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 24</text>\n<text text-anchor=\"middle\" x=\"2220.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [16, 8]</text>\n<text text-anchor=\"middle\" x=\"2220.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 34&#45;&gt;35 -->\n<g id=\"edge35\" class=\"edge\">\n<title>34&#45;&gt;35</title>\n<path fill=\"none\" stroke=\"black\" d=\"M2307.11,-103.73C2295.16,-94.24 2282.45,-84.16 2270.55,-74.72\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2272.48,-71.77 2262.47,-68.3 2268.12,-77.26 2272.48,-71.77\"/>\n</g>\n<!-- 36 -->\n<g id=\"node37\" class=\"node\">\n<title>36</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2421.5,-68 2299.5,-68 2299.5,0 2421.5,0 2421.5,-68\"/>\n<text text-anchor=\"middle\" x=\"2360.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.475</text>\n<text text-anchor=\"middle\" x=\"2360.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 18</text>\n<text text-anchor=\"middle\" x=\"2360.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [7, 11]</text>\n<text text-anchor=\"middle\" x=\"2360.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 1</text>\n</g>\n<!-- 34&#45;&gt;36 -->\n<g id=\"edge36\" class=\"edge\">\n<title>34&#45;&gt;36</title>\n<path fill=\"none\" stroke=\"black\" d=\"M2359.24,-103.73C2359.39,-95.52 2359.55,-86.86 2359.7,-78.56\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2363.21,-78.36 2359.89,-68.3 2356.21,-78.23 2363.21,-78.36\"/>\n</g>\n<!-- 38 -->\n<g id=\"node39\" class=\"node\">\n<title>38</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2571,-68 2440,-68 2440,0 2571,0 2571,-68\"/>\n<text text-anchor=\"middle\" x=\"2505.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.48</text>\n<text text-anchor=\"middle\" x=\"2505.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 30</text>\n<text text-anchor=\"middle\" x=\"2505.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [18, 12]</text>\n<text text-anchor=\"middle\" x=\"2505.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 37&#45;&gt;38 -->\n<g id=\"edge38\" class=\"edge\">\n<title>37&#45;&gt;38</title>\n<path fill=\"none\" stroke=\"black\" d=\"M2506.76,-103.73C2506.61,-95.52 2506.45,-86.86 2506.3,-78.56\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2509.79,-78.23 2506.11,-68.3 2502.79,-78.36 2509.79,-78.23\"/>\n</g>\n<!-- 39 -->\n<g id=\"node40\" class=\"node\">\n<title>39</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2711.5,-68 2589.5,-68 2589.5,0 2711.5,0 2711.5,-68\"/>\n<text text-anchor=\"middle\" x=\"2650.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.124</text>\n<text text-anchor=\"middle\" x=\"2650.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 15</text>\n<text text-anchor=\"middle\" x=\"2650.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [14, 1]</text>\n<text text-anchor=\"middle\" x=\"2650.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 37&#45;&gt;39 -->\n<g id=\"edge39\" class=\"edge\">\n<title>37&#45;&gt;39</title>\n<path fill=\"none\" stroke=\"black\" d=\"M2560.75,-103.73C2573.25,-94.15 2586.56,-83.96 2598.99,-74.44\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2601.2,-77.16 2607.01,-68.3 2596.95,-71.6 2601.2,-77.16\"/>\n</g>\n<!-- 41 -->\n<g id=\"node42\" class=\"node\">\n<title>41</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2843,-187 2730,-187 2730,-104 2843,-104 2843,-187\"/>\n<text text-anchor=\"middle\" x=\"2786.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">X[2] &lt;= 77.0</text>\n<text text-anchor=\"middle\" x=\"2786.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.408</text>\n<text text-anchor=\"middle\" x=\"2786.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 7</text>\n<text text-anchor=\"middle\" x=\"2786.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [5, 2]</text>\n<text text-anchor=\"middle\" x=\"2786.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 40&#45;&gt;41 -->\n<g id=\"edge41\" class=\"edge\">\n<title>40&#45;&gt;41</title>\n<path fill=\"none\" stroke=\"black\" d=\"M2786.5,-222.91C2786.5,-214.65 2786.5,-205.86 2786.5,-197.3\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2790,-197.02 2786.5,-187.02 2783,-197.02 2790,-197.02\"/>\n</g>\n<!-- 44 -->\n<g id=\"node45\" class=\"node\">\n<title>44</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2983.5,-179.5 2861.5,-179.5 2861.5,-111.5 2983.5,-111.5 2983.5,-179.5\"/>\n<text text-anchor=\"middle\" x=\"2922.5\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"2922.5\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 13</text>\n<text text-anchor=\"middle\" x=\"2922.5\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [13, 0]</text>\n<text text-anchor=\"middle\" x=\"2922.5\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 40&#45;&gt;44 -->\n<g id=\"edge44\" class=\"edge\">\n<title>40&#45;&gt;44</title>\n<path fill=\"none\" stroke=\"black\" d=\"M2833.68,-222.91C2847.41,-211.1 2862.39,-198.22 2876.06,-186.45\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2878.65,-188.84 2883.95,-179.67 2874.08,-183.54 2878.65,-188.84\"/>\n</g>\n<!-- 42 -->\n<g id=\"node43\" class=\"node\">\n<title>42</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2843,-68 2730,-68 2730,0 2843,0 2843,-68\"/>\n<text text-anchor=\"middle\" x=\"2786.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.5</text>\n<text text-anchor=\"middle\" x=\"2786.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 4</text>\n<text text-anchor=\"middle\" x=\"2786.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [2, 2]</text>\n<text text-anchor=\"middle\" x=\"2786.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 41&#45;&gt;42 -->\n<g id=\"edge42\" class=\"edge\">\n<title>41&#45;&gt;42</title>\n<path fill=\"none\" stroke=\"black\" d=\"M2786.5,-103.73C2786.5,-95.52 2786.5,-86.86 2786.5,-78.56\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2790,-78.3 2786.5,-68.3 2783,-78.3 2790,-78.3\"/>\n</g>\n<!-- 43 -->\n<g id=\"node44\" class=\"node\">\n<title>43</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"2974,-68 2861,-68 2861,0 2974,0 2974,-68\"/>\n<text text-anchor=\"middle\" x=\"2917.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"2917.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 3</text>\n<text text-anchor=\"middle\" x=\"2917.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [3, 0]</text>\n<text text-anchor=\"middle\" x=\"2917.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = 0</text>\n</g>\n<!-- 41&#45;&gt;43 -->\n<g id=\"edge43\" class=\"edge\">\n<title>41&#45;&gt;43</title>\n<path fill=\"none\" stroke=\"black\" d=\"M2835.28,-103.73C2846.63,-94.24 2858.69,-84.16 2869.99,-74.72\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"2872.23,-77.4 2877.66,-68.3 2867.74,-72.03 2872.23,-77.4\"/>\n</g>\n</g>\n</svg>\n","text/plain":"<graphviz.sources.Source at 0x7fa18a16e1f0>"},"execution_count":248,"metadata":{},"output_type":"execute_result"}},"pos":65,"type":"cell"}
{"cell_type":"code","exec_count":249,"id":"d9822e","input":"from sklearn.svm import SVC","pos":73,"type":"cell"}
{"cell_type":"code","exec_count":25,"id":"37714a","input":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=42, stratify = Y)","pos":40,"type":"cell"}
{"cell_type":"code","exec_count":254,"id":"358c58","input":"sv = SVC()\nsv.fit(x_train, y_train)\ny_pred_svc = svc.predict(x_test)","pos":74,"type":"cell"}
{"cell_type":"code","exec_count":259,"id":"55d3d0","input":"sns.heatmap(confusion_matrix(y_test, y_pred_svc), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"execution_count":259,"metadata":{},"output_type":"execute_result"},"1":{"data":{"image/png":"","text/plain":"<Figure size 432x288 with 2 Axes>"},"execution_count":259,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":75,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"0053df","input":"parameters = {\n    'penalty' : ['l1','l2','elasticnet'], \n    'C'       : [0.001,0.01,0.1,1,10,100],\n    'solver'  : ['newton-cg', 'lbfgs', 'liblinear'],\n}\n\n\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.linear_model import LogisticRegression\ngrid={\"C\":np.logspace(-3,3,7), \"penalty\":[\"l1\",\"l2\"]}\nlog = LogisticRegression()\nlog_cv=GridSearchCV(log,grid,cv=10)\nlog_cv.fit(x_train,y_train)\n\nprint(\"tuned hpyerparameters :(best parameters) \",log_cv.best_params_)\nprint(\"accuracy :\",log_cv.best_score_)","output":{"0":{"name":"stdout","output_type":"stream","text":"tuned hpyerparameters :(best parameters)  {'C': 0.001, 'penalty': 'l2'}\naccuracy : 0.7901875\n"},"1":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: \n70 fits failed out of a total of 140.\nThe score on these train-test partitions for these parameters will be set to nan.\nIf these failures are not expected, you can try to debug them by setting error_score='raise'.\n\nBelow are more details about the failures:\n--------------------------------------------------------------------------------\n70 fits failed with the following error:\nTraceback (most recent call last):\n  File \"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n    estimator.fit(X_train, y_train, **fit_params)\n  File \"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py\", line 1091, in fit\n    solver = _check_solver(self.solver, self.penalty, self.dual)\n  File \"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py\", line 61, in _check_solver\n    raise ValueError(\nValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got l1 penalty.\n\n  warnings.warn(some_fits_failed_message, FitFailedWarning)\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/model_selection/_search.py:953: UserWarning: One or more of the test scores are non-finite: [      nan 0.7901875       nan 0.789875        nan 0.79            nan\n 0.79            nan 0.79            nan 0.79            nan 0.79     ]\n  warnings.warn(\n"}},"pos":42,"type":"cell"}
{"cell_type":"code","exec_count":267,"id":"710701","input":"import graphviz\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import tree\nfrom sklearn.model_selection import GridSearchCV","pos":64,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":27,"id":"bc170d","input":"log = LogisticRegression()","pos":43,"type":"cell"}
{"cell_type":"code","exec_count":275,"id":"c3314d","input":"from sklearn.ensemble import RandomForestClassifier as rfc\nfrom sklearn.datasets import make_classification as mc\n","pos":81,"type":"cell"}
{"cell_type":"code","exec_count":276,"id":"867527","input":"y_pred_dt = treeClassifier.predict(x_test)","pos":66,"type":"cell"}
{"cell_type":"code","exec_count":277,"id":"7d8deb","input":"sns.heatmap(confusion_matrix(y_test, y_pred_dt), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"execution_count":277,"metadata":{},"output_type":"execute_result"},"1":{"data":{"image/png":"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","text/plain":"<Figure size 432x288 with 2 Axes>"},"execution_count":277,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":71,"type":"cell"}
{"cell_type":"code","exec_count":28,"id":"443760","input":"log.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>","text/plain":"LogisticRegression()"},"execution_count":28,"metadata":{},"output_type":"execute_result"}},"pos":44,"type":"cell"}
{"cell_type":"code","exec_count":281,"id":"a8a972","input":"print(classification_report(y_test, y_pred_dt))","output":{"0":{"name":"stdout","output_type":"stream","text":"              precision    recall  f1-score   support\n\n           0       0.80      1.00      0.89      3185\n           1       0.50      0.01      0.01       815\n\n    accuracy                           0.80      4000\n   macro avg       0.65      0.50      0.45      4000\nweighted avg       0.74      0.80      0.71      4000\n\n"}},"pos":70,"type":"cell"}
{"cell_type":"code","exec_count":286,"id":"015a33","input":"churndf.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CreditScore</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n      <th>France</th>\n      <th>Spain</th>\n      <th>Germany</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>619</td>\n      <td>0</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>608</td>\n      <td>0</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>502</td>\n      <td>0</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>699</td>\n      <td>0</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>850</td>\n      <td>0</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   CreditScore  Gender  Age  Tenure    Balance  NumOfProducts  HasCrCard  \\\n0          619       0   42       2       0.00              1          1   \n1          608       0   41       1   83807.86              1          0   \n2          502       0   42       8  159660.80              3          1   \n3          699       0   39       1       0.00              2          0   \n4          850       0   43       2  125510.82              1          1   \n\n   IsActiveMember  EstimatedSalary  Exited  France  Spain  Germany  \n0               1        101348.88       1       1      0        0  \n1               1        112542.58       0       0      1        0  \n2               0        113931.57       1       1      0        0  \n3               0         93826.63       0       1      0        0  \n4               1         79084.10       0       0      1        0  "},"execution_count":286,"metadata":{},"output_type":"execute_result"}},"pos":82,"type":"cell"}
{"cell_type":"code","exec_count":29,"id":"bfbf3c","input":"y_pred_log = log.predict(x_test)\ny_pred_log","output":{"0":{"data":{"text/plain":"array([0, 1, 0, ..., 0, 0, 0])"},"execution_count":29,"metadata":{},"output_type":"execute_result"}},"pos":45,"type":"cell"}
{"cell_type":"code","exec_count":290,"id":"a08424","input":"grid.fit(X_train, y_train)","pos":68,"type":"cell"}
{"cell_type":"code","exec_count":30,"id":"08399c","input":"recall_score(y_test, y_pred_log)","output":{"0":{"data":{"text/plain":"0.05644171779141104"},"execution_count":30,"metadata":{},"output_type":"execute_result"}},"pos":46,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"e0aaa9","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_pred_log), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"execution_count":31,"metadata":{},"output_type":"execute_result"},"1":{"data":{"image/png":"","text/plain":"<Figure size 936x360 with 2 Axes>"},"execution_count":31,"metadata":{},"output_type":"execute_result"}},"pos":47,"type":"cell"}
{"cell_type":"code","exec_count":32,"id":"1d50d0","input":"from sklearn.neighbors import KNeighborsClassifier as KNN","pos":49,"type":"cell"}
{"cell_type":"code","exec_count":33,"id":"1938e9","input":"error_rate = []\n\nfor i in range(1, 40):\n    my_KNN_model = KNN(n_neighbors=i)\n    my_KNN_model.fit(x_train, y_train)\n    y_pred_knn = my_KNN_model.predict(x_test)\n    error_rate.append(np.mean(y_pred_knn != y_test))\n    \nplt.figure(figsize=(10,6))\nplt.plot(range(1,40),error_rate,color='blue', linestyle='dashed', marker='o',\n markerfacecolor='red', markersize=10)\nplt.title('Error Rate vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Error Rate')","output":{"0":{"data":{"text/plain":"Text(0, 0.5, 'Error Rate')"},"execution_count":33,"metadata":{},"output_type":"execute_result"},"1":{"data":{"image/png":"","text/plain":"<Figure size 720x432 with 1 Axes>"},"execution_count":33,"metadata":{},"output_type":"execute_result"}},"pos":50,"type":"cell"}
{"cell_type":"code","exec_count":34,"id":"ac51f6","input":"# x,y = df.drop('y',axis=1),df.y\n# kf = KFold(n_splits=5,random_state=42,shuffle=True)\n# for train_index,val_index in kf.split(X):\n#     X_train,X_val = X.iloc[train_index],X.iloc[val_index],\n#     y_train,y_val = y.iloc[train_index],y.iloc[val_index],","pos":88,"type":"cell"}
{"cell_type":"code","exec_count":35,"id":"63227b","input":"gradient_booster = GradientBoostingClassifier(learning_rate=0.1)\n# gradient_booster.get_params()","pos":89,"type":"cell"}
{"cell_type":"code","exec_count":38,"id":"dae0b1","input":"gradient_booster.fit(x_train,y_train)\n# print(classification_report(y_test,gradient_booster.predict(x_test)))","output":{"0":{"data":{"text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GradientBoostingClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GradientBoostingClassifier</label><div class=\"sk-toggleable__content\"><pre>GradientBoostingClassifier()</pre></div></div></div></div></div>","text/plain":"GradientBoostingClassifier()"},"execution_count":38,"metadata":{},"output_type":"execute_result"}},"pos":90,"type":"cell"}
{"cell_type":"code","exec_count":39,"id":"3ca71b","input":"print(classification_report(y_test,gradient_booster.predict(x_test)))","output":{"0":{"name":"stdout","output_type":"stream","text":"              precision    recall  f1-score   support\n\n           0       0.88      0.96      0.92      3185\n           1       0.78      0.50      0.61       815\n\n    accuracy                           0.87      4000\n   macro avg       0.83      0.73      0.76      4000\nweighted avg       0.86      0.87      0.86      4000\n\n"}},"pos":91,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"5babc3","input":"k = 3\nmy_KNN_model = KNN(n_neighbors=k)","pos":51,"type":"cell"}
{"cell_type":"code","exec_count":41,"id":"5d71d1","input":"my_KNN_model.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=3)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=3)</pre></div></div></div></div></div>","text/plain":"KNeighborsClassifier(n_neighbors=3)"},"execution_count":41,"metadata":{},"output_type":"execute_result"}},"pos":52,"type":"cell"}
{"cell_type":"code","exec_count":42,"id":"bce711","input":"y_pred_knn = my_KNN_model.predict(x_test)\ny_pred_knn","output":{"0":{"data":{"text/plain":"array([0, 0, 1, ..., 1, 0, 1])"},"execution_count":42,"metadata":{},"output_type":"execute_result"}},"pos":53,"type":"cell"}
{"cell_type":"code","exec_count":43,"id":"5e4e0f","input":"from sklearn.metrics import classification_report\nfrom sklearn.model_selection import KFold\n\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.model_selection import GridSearchCV\nimport warnings\nwarnings.filterwarnings(\"ignore\")","pos":85,"type":"cell"}
{"cell_type":"code","exec_count":43,"id":"8009f4","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_pred_knn), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"execution_count":43,"metadata":{},"output_type":"execute_result"},"1":{"data":{"image/png":"","text/plain":"<Figure size 936x360 with 2 Axes>"},"execution_count":43,"metadata":{},"output_type":"execute_result"}},"pos":54,"type":"cell"}
{"cell_type":"code","exec_count":44,"id":"69fc41","input":"parameters = {\n    \"loss\":[\"deviance\"],\n    \"learning_rate\": [0.01, 0.025, 0.05, 0.075, 0.1, 0.15, 0.2],\n    \"min_samples_split\": np.linspace(0.1, 0.5, 12),\n    \"min_samples_leaf\": np.linspace(0.1, 0.5, 12),\n    \"max_depth\":[3,5,8],\n    \"max_features\":[\"log2\",\"sqrt\"],\n    \"criterion\": [\"friedman_mse\",  \"mae\"],\n    \"subsample\":[0.5, 0.618, 0.8, 0.85, 0.9, 0.95, 1.0],\n    \"n_estimators\":[10]\n    }\n\nclf = GridSearchCV(GradientBoostingClassifier(), parameters, cv=10, n_jobs=-1)\n\nclf.fit(x_train, y_train)\nprint(clf.score(x_train, y_train))\nprint(clf.best_params_)","output":{"0":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"1":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"10":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"11":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"12":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"13":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"14":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"15":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"16":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"2":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"3":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"4":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"5":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"6":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"7":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"8":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"},"9":{"name":"stderr","output_type":"stream","text":"/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n/projects/384affd7-8fb5-487a-a2bf-30e2102843d9/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_gb.py:310: FutureWarning: The loss parameter name 'deviance' was deprecated in v1.1 and will be removed in version 1.3. Use the new parameter name 'log_loss' which is equivalent.\n  warnings.warn(\n"}},"pos":86,"type":"cell"}
{"cell_type":"code","exec_count":44,"id":"f027eb","input":"recall_score(y_test, y_pred_knn)","output":{"0":{"data":{"text/plain":"0.2625766871165644"},"execution_count":44,"metadata":{},"output_type":"execute_result"}},"pos":55,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"17532a","input":"churndf = pd.read_csv('data/Churn_Modelling.csv')","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"04cd2b","input":"churndf.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>RowNumber</th>\n      <th>CustomerId</th>\n      <th>Surname</th>\n      <th>CreditScore</th>\n      <th>Geography</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>15634602</td>\n      <td>Hargrave</td>\n      <td>619</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>15647311</td>\n      <td>Hill</td>\n      <td>608</td>\n      <td>Spain</td>\n      <td>Female</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>15619304</td>\n      <td>Onio</td>\n      <td>502</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>15701354</td>\n      <td>Boni</td>\n      <td>699</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>15737888</td>\n      <td>Mitchell</td>\n      <td>850</td>\n      <td>Spain</td>\n      <td>Female</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n0          1    15634602  Hargrave          619    France  Female   42   \n1          2    15647311      Hill          608     Spain  Female   41   \n2          3    15619304      Onio          502    France  Female   42   \n3          4    15701354      Boni          699    France  Female   39   \n4          5    15737888  Mitchell          850     Spain  Female   43   \n\n   Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n0       2       0.00              1          1               1   \n1       1   83807.86              1          0               1   \n2       8  159660.80              3          1               0   \n3       1       0.00              2          0               0   \n4       2  125510.82              1          1               1   \n\n   EstimatedSalary  Exited  \n0        101348.88       1  \n1        112542.58       0  \n2        113931.57       1  \n3         93826.63       0  \n4         79084.10       0  "},"execution_count":9,"metadata":{},"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"markdown","id":"007d6b","input":"- The dataset we chose includes multiple variables that describe customers at a bank. Our target is finding whether or not a customer will leave the bank, and our variable for that is Exited, with a value of 1 meaning that the customer has left, and a value of 0 meaning that the customer remains.\n- Through our analysis of the correlation between variables, we found that all of the ones that we didn't remove played a small role in predicting whether or not the customer has exited or will exit \\(as seen in our heat\\-map\\).\n- Some of the variables we chose to analyze through exploratory data analysis were the age of the customer, their estimated salary, balance, tenure,\n  gender, which country they were from, whether they had a credit card or not, how active they were, and the number of products they were utilizing from the bank.\n\n","pos":31,"type":"cell"}
{"cell_type":"markdown","id":"078a49","input":"#### **Logistic Regression**\n\n","pos":41,"type":"cell"}
{"cell_type":"markdown","id":"08a531","input":"This scatter plot shows the relationship between the age and balance of the customers, and how that affects the number of people that have exited. \n\n","pos":29,"type":"cell"}
{"cell_type":"markdown","id":"119078","input":"This uses Bayes Theorem which is: P\\(A|B\\) = P \\(B|A\\) . P \\(A\\) / P\\(B\\)\n\nGood for well\\-separated categories, very high\\-dimensional data, and when data is matched by naive assumprtions.\n\n","pos":57,"type":"cell"}
{"cell_type":"markdown","id":"171aa5","input":"##### Column Statistics","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"183142","input":"##### Importing Required Libraries\n\n","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"1befaa","input":"1\\)Graph 1 shows the gender of the customer and whether or not they exited.\n\n2\\)Graph 2 shows whether or not the customer had a credit card or not when they exited.\n\n3\\)Graph 3 shows whether or not the customer that exited was an active member or not.\n\n4\\)Graph 4 shows the number of products a customer had compared to whether or not they exited.\n\n5\\)Graph 5 shows the country of the customer and whether or not the person exited.\n\n6\\)Shows the number of customers by country.\n\n","pos":24,"type":"cell"}
{"cell_type":"markdown","id":"44daa7","input":"#### Naive Bayes\n\n","pos":56,"type":"cell"}
{"cell_type":"markdown","id":"64d920","input":"##### Import Dataset\n\n","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"65bb02","input":"### Splitting the Data\n\n","pos":39,"type":"cell"}
{"cell_type":"markdown","id":"66e2aa","input":"#### Decision Tree Classifier\n\n","pos":63,"type":"cell"}
{"cell_type":"markdown","id":"68c507","input":"##### Creating box-plots to examine the spread of our data among multiple variables.\n\n","pos":25,"type":"cell"}
{"cell_type":"markdown","id":"69c3bb","input":"## Customer Churn Prediction\n\n","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"6a99a2","input":"- What features are significant in prediction the churn in a customer.\n- To suggest measure in order to improve the retention rate with respect to customer category.\n\n","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"7714cc","input":"##### Dataset Info","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"838b36","input":"##### Drop unnecessary columns","pos":15,"type":"cell"}
{"cell_type":"markdown","id":"9cab2a","input":"> 1 = Churned\n>\n>\n> 0 = Not Churned\n\n","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"b05253","input":"<h4> Goal</h4>\n\n","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"b620ab","input":"#### Support Vector Classifier\n\n","pos":72,"type":"cell"}
{"cell_type":"markdown","id":"b81612","input":"##### Assessing the proportions of our target value triggers to our defaults.\n\n","pos":19,"type":"cell"}
{"cell_type":"markdown","id":"b97e16","input":"##### Creating a heat\\-map to assess the correlation between our variables.\n\n","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"c62db2","input":"#### **KNeighbours Classifier**\n\n","pos":48,"type":"cell"}
{"cell_type":"markdown","id":"c92d92","input":"##### Creating count-plots for values that wouldn't be properly visualized by box plots due to being categorical.\n\n","pos":22,"type":"cell"}
{"cell_type":"markdown","id":"ca29f5","input":"The box plots above show the relationship between multiple factors such as age, estimated salary, balance, and tenure, to whether they exited or not.\n\n","pos":27,"type":"cell"}
{"cell_type":"markdown","id":"dcce3c","input":"##### Summary","pos":30,"type":"cell"}
{"cell_type":"markdown","id":"f2720e","input":"### `Random Forest Classifier`\n\n","pos":80,"type":"cell"}
{"cell_type":"markdown","id":"f93835","input":"This bar graph shows our percentage of exited to non\\-exited customers. As shown, we have a large percentage of exited customers along with the opposite for non\\-exited customers.\n\n","pos":21,"type":"cell"}
{"cell_type":"markdown","id":"fd5f4b","input":"One of the most important applications of data science in the commercial sector is churn prediction. Its popularity stems from the fact that its impacts are more tangible to comprehend, and it plays a significant role in the company's overall revenues.\n\nChurn is described as \"when a client cancels a subscription to a service they have been utilizing\" in business terms. People cancelling Spotify/Netflix memberships are a regular example. So, based on their utilization of the service, Churn Prediction is effectively projecting which clients are most likely to cancel a subscription, i.e. 'leave a company.'\n\nFrom a business standpoint, obtaining this information is critical because recruiting new clients is generally more difficult and costly than retaining existing customers. As a result, the information acquired through Churn Prediction allows them to focus more on the customers who are most likely to leave.\n\n","pos":2,"type":"cell"}
{"end":1657215762342,"exec_count":6,"id":"a2c13d","input":"from sklearn.datasets import load_iris","kernel":"ds_env","pos":91.5,"start":1657215762317,"state":"done","type":"cell"}
{"exec_count":4,"id":"cc4209","input":"from sklearn import preprocessing\n\nstandard = preprocessing.scale(X_data)\nprint(standard)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"[[-9.00681170e-01  1.01900435e+00 -1.34022653e+00 -1.31544430e+00]\n [-1.14301691e+00 -1.31979479e-01 -1.34022653e+00 -1.31544430e+00]\n [-1.38535265e+00  3.28414053e-01 -1.39706395e+00 -1.31544430e+00]\n [-1.50652052e+00  9.82172869e-02 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  1.24920112e+00 -1.34022653e+00 -1.31544430e+00]\n [-5.37177559e-01  1.93979142e+00 -1.16971425e+00 -1.05217993e+00]\n [-1.50652052e+00  7.88807586e-01 -1.34022653e+00 -1.18381211e+00]\n [-1.02184904e+00  7.88807586e-01 -1.28338910e+00 -1.31544430e+00]\n [-1.74885626e+00 -3.62176246e-01 -1.34022653e+00 -1.31544430e+00]\n [-1.14301691e+00  9.82172869e-02 -1.28338910e+00 -1.44707648e+00]\n [-5.37177559e-01  1.47939788e+00 -1.28338910e+00 -1.31544430e+00]\n [-1.26418478e+00  7.88807586e-01 -1.22655167e+00 -1.31544430e+00]\n [-1.26418478e+00 -1.31979479e-01 -1.34022653e+00 -1.44707648e+00]\n [-1.87002413e+00 -1.31979479e-01 -1.51073881e+00 -1.44707648e+00]\n [-5.25060772e-02  2.16998818e+00 -1.45390138e+00 -1.31544430e+00]\n [-1.73673948e-01  3.09077525e+00 -1.28338910e+00 -1.05217993e+00]\n [-5.37177559e-01  1.93979142e+00 -1.39706395e+00 -1.05217993e+00]\n [-9.00681170e-01  1.01900435e+00 -1.34022653e+00 -1.18381211e+00]\n [-1.73673948e-01  1.70959465e+00 -1.16971425e+00 -1.18381211e+00]\n [-9.00681170e-01  1.70959465e+00 -1.28338910e+00 -1.18381211e+00]\n [-5.37177559e-01  7.88807586e-01 -1.16971425e+00 -1.31544430e+00]\n [-9.00681170e-01  1.47939788e+00 -1.28338910e+00 -1.05217993e+00]\n [-1.50652052e+00  1.24920112e+00 -1.56757623e+00 -1.31544430e+00]\n [-9.00681170e-01  5.58610819e-01 -1.16971425e+00 -9.20547742e-01]\n [-1.26418478e+00  7.88807586e-01 -1.05603939e+00 -1.31544430e+00]\n [-1.02184904e+00 -1.31979479e-01 -1.22655167e+00 -1.31544430e+00]\n [-1.02184904e+00  7.88807586e-01 -1.22655167e+00 -1.05217993e+00]\n [-7.79513300e-01  1.01900435e+00 -1.28338910e+00 -1.31544430e+00]\n [-7.79513300e-01  7.88807586e-01 -1.34022653e+00 -1.31544430e+00]\n [-1.38535265e+00  3.28414053e-01 -1.22655167e+00 -1.31544430e+00]\n [-1.26418478e+00  9.82172869e-02 -1.22655167e+00 -1.31544430e+00]\n [-5.37177559e-01  7.88807586e-01 -1.28338910e+00 -1.05217993e+00]\n [-7.79513300e-01  2.40018495e+00 -1.28338910e+00 -1.44707648e+00]\n [-4.16009689e-01  2.63038172e+00 -1.34022653e+00 -1.31544430e+00]\n [-1.14301691e+00  9.82172869e-02 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  3.28414053e-01 -1.45390138e+00 -1.31544430e+00]\n [-4.16009689e-01  1.01900435e+00 -1.39706395e+00 -1.31544430e+00]\n [-1.14301691e+00  1.24920112e+00 -1.34022653e+00 -1.44707648e+00]\n [-1.74885626e+00 -1.31979479e-01 -1.39706395e+00 -1.31544430e+00]\n [-9.00681170e-01  7.88807586e-01 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  1.01900435e+00 -1.39706395e+00 -1.18381211e+00]\n [-1.62768839e+00 -1.74335684e+00 -1.39706395e+00 -1.18381211e+00]\n [-1.74885626e+00  3.28414053e-01 -1.39706395e+00 -1.31544430e+00]\n [-1.02184904e+00  1.01900435e+00 -1.22655167e+00 -7.88915558e-01]\n [-9.00681170e-01  1.70959465e+00 -1.05603939e+00 -1.05217993e+00]\n [-1.26418478e+00 -1.31979479e-01 -1.34022653e+00 -1.18381211e+00]\n [-9.00681170e-01  1.70959465e+00 -1.22655167e+00 -1.31544430e+00]\n [-1.50652052e+00  3.28414053e-01 -1.34022653e+00 -1.31544430e+00]\n [-6.58345429e-01  1.47939788e+00 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  5.58610819e-01 -1.34022653e+00 -1.31544430e+00]\n [ 1.40150837e+00  3.28414053e-01  5.35408562e-01  2.64141916e-01]\n [ 6.74501145e-01  3.28414053e-01  4.21733708e-01  3.95774101e-01]\n [ 1.28034050e+00  9.82172869e-02  6.49083415e-01  3.95774101e-01]\n [-4.16009689e-01 -1.74335684e+00  1.37546573e-01  1.32509732e-01]\n [ 7.95669016e-01 -5.92373012e-01  4.78571135e-01  3.95774101e-01]\n [-1.73673948e-01 -5.92373012e-01  4.21733708e-01  1.32509732e-01]\n [ 5.53333275e-01  5.58610819e-01  5.35408562e-01  5.27406285e-01]\n [-1.14301691e+00 -1.51316008e+00 -2.60315415e-01 -2.62386821e-01]\n [ 9.16836886e-01 -3.62176246e-01  4.78571135e-01  1.32509732e-01]\n [-7.79513300e-01 -8.22569778e-01  8.07091462e-02  2.64141916e-01]\n [-1.02184904e+00 -2.43394714e+00 -1.46640561e-01 -2.62386821e-01]\n [ 6.86617933e-02 -1.31979479e-01  2.51221427e-01  3.95774101e-01]\n [ 1.89829664e-01 -1.97355361e+00  1.37546573e-01 -2.62386821e-01]\n [ 3.10997534e-01 -3.62176246e-01  5.35408562e-01  2.64141916e-01]\n [-2.94841818e-01 -3.62176246e-01 -8.98031345e-02  1.32509732e-01]\n [ 1.03800476e+00  9.82172869e-02  3.64896281e-01  2.64141916e-01]\n [-2.94841818e-01 -1.31979479e-01  4.21733708e-01  3.95774101e-01]\n [-5.25060772e-02 -8.22569778e-01  1.94384000e-01 -2.62386821e-01]\n [ 4.32165405e-01 -1.97355361e+00  4.21733708e-01  3.95774101e-01]\n [-2.94841818e-01 -1.28296331e+00  8.07091462e-02 -1.30754636e-01]\n [ 6.86617933e-02  3.28414053e-01  5.92245988e-01  7.90670654e-01]\n [ 3.10997534e-01 -5.92373012e-01  1.37546573e-01  1.32509732e-01]\n [ 5.53333275e-01 -1.28296331e+00  6.49083415e-01  3.95774101e-01]\n [ 3.10997534e-01 -5.92373012e-01  5.35408562e-01  8.77547895e-04]\n [ 6.74501145e-01 -3.62176246e-01  3.08058854e-01  1.32509732e-01]\n [ 9.16836886e-01 -1.31979479e-01  3.64896281e-01  2.64141916e-01]\n [ 1.15917263e+00 -5.92373012e-01  5.92245988e-01  2.64141916e-01]\n [ 1.03800476e+00 -1.31979479e-01  7.05920842e-01  6.59038469e-01]\n [ 1.89829664e-01 -3.62176246e-01  4.21733708e-01  3.95774101e-01]\n [-1.73673948e-01 -1.05276654e+00 -1.46640561e-01 -2.62386821e-01]\n [-4.16009689e-01 -1.51316008e+00  2.38717193e-02 -1.30754636e-01]\n [-4.16009689e-01 -1.51316008e+00 -3.29657076e-02 -2.62386821e-01]\n [-5.25060772e-02 -8.22569778e-01  8.07091462e-02  8.77547895e-04]\n [ 1.89829664e-01 -8.22569778e-01  7.62758269e-01  5.27406285e-01]\n [-5.37177559e-01 -1.31979479e-01  4.21733708e-01  3.95774101e-01]\n [ 1.89829664e-01  7.88807586e-01  4.21733708e-01  5.27406285e-01]\n [ 1.03800476e+00  9.82172869e-02  5.35408562e-01  3.95774101e-01]\n [ 5.53333275e-01 -1.74335684e+00  3.64896281e-01  1.32509732e-01]\n [-2.94841818e-01 -1.31979479e-01  1.94384000e-01  1.32509732e-01]\n [-4.16009689e-01 -1.28296331e+00  1.37546573e-01  1.32509732e-01]\n [-4.16009689e-01 -1.05276654e+00  3.64896281e-01  8.77547895e-04]\n [ 3.10997534e-01 -1.31979479e-01  4.78571135e-01  2.64141916e-01]\n [-5.25060772e-02 -1.05276654e+00  1.37546573e-01  8.77547895e-04]\n [-1.02184904e+00 -1.74335684e+00 -2.60315415e-01 -2.62386821e-01]\n [-2.94841818e-01 -8.22569778e-01  2.51221427e-01  1.32509732e-01]\n [-1.73673948e-01 -1.31979479e-01  2.51221427e-01  8.77547895e-04]\n [-1.73673948e-01 -3.62176246e-01  2.51221427e-01  1.32509732e-01]\n [ 4.32165405e-01 -3.62176246e-01  3.08058854e-01  1.32509732e-01]\n [-9.00681170e-01 -1.28296331e+00 -4.30827696e-01 -1.30754636e-01]\n [-1.73673948e-01 -5.92373012e-01  1.94384000e-01  1.32509732e-01]\n [ 5.53333275e-01  5.58610819e-01  1.27429511e+00  1.71209594e+00]\n [-5.25060772e-02 -8.22569778e-01  7.62758269e-01  9.22302838e-01]\n [ 1.52267624e+00 -1.31979479e-01  1.21745768e+00  1.18556721e+00]\n [ 5.53333275e-01 -3.62176246e-01  1.04694540e+00  7.90670654e-01]\n [ 7.95669016e-01 -1.31979479e-01  1.16062026e+00  1.31719939e+00]\n [ 2.12851559e+00 -1.31979479e-01  1.61531967e+00  1.18556721e+00]\n [-1.14301691e+00 -1.28296331e+00  4.21733708e-01  6.59038469e-01]\n [ 1.76501198e+00 -3.62176246e-01  1.44480739e+00  7.90670654e-01]\n [ 1.03800476e+00 -1.28296331e+00  1.16062026e+00  7.90670654e-01]\n [ 1.64384411e+00  1.24920112e+00  1.33113254e+00  1.71209594e+00]\n [ 7.95669016e-01  3.28414053e-01  7.62758269e-01  1.05393502e+00]\n [ 6.74501145e-01 -8.22569778e-01  8.76433123e-01  9.22302838e-01]\n [ 1.15917263e+00 -1.31979479e-01  9.90107977e-01  1.18556721e+00]\n [-1.73673948e-01 -1.28296331e+00  7.05920842e-01  1.05393502e+00]\n [-5.25060772e-02 -5.92373012e-01  7.62758269e-01  1.58046376e+00]\n [ 6.74501145e-01  3.28414053e-01  8.76433123e-01  1.44883158e+00]\n [ 7.95669016e-01 -1.31979479e-01  9.90107977e-01  7.90670654e-01]\n [ 2.24968346e+00  1.70959465e+00  1.67215710e+00  1.31719939e+00]\n [ 2.24968346e+00 -1.05276654e+00  1.78583195e+00  1.44883158e+00]\n [ 1.89829664e-01 -1.97355361e+00  7.05920842e-01  3.95774101e-01]\n [ 1.28034050e+00  3.28414053e-01  1.10378283e+00  1.44883158e+00]\n [-2.94841818e-01 -5.92373012e-01  6.49083415e-01  1.05393502e+00]\n [ 2.24968346e+00 -5.92373012e-01  1.67215710e+00  1.05393502e+00]\n [ 5.53333275e-01 -8.22569778e-01  6.49083415e-01  7.90670654e-01]\n [ 1.03800476e+00  5.58610819e-01  1.10378283e+00  1.18556721e+00]\n [ 1.64384411e+00  3.28414053e-01  1.27429511e+00  7.90670654e-01]\n [ 4.32165405e-01 -5.92373012e-01  5.92245988e-01  7.90670654e-01]\n [ 3.10997534e-01 -1.31979479e-01  6.49083415e-01  7.90670654e-01]\n [ 6.74501145e-01 -5.92373012e-01  1.04694540e+00  1.18556721e+00]\n [ 1.64384411e+00 -1.31979479e-01  1.16062026e+00  5.27406285e-01]\n [ 1.88617985e+00 -5.92373012e-01  1.33113254e+00  9.22302838e-01]\n [ 2.49201920e+00  1.70959465e+00  1.50164482e+00  1.05393502e+00]\n [ 6.74501145e-01 -5.92373012e-01  1.04694540e+00  1.31719939e+00]\n [ 5.53333275e-01 -5.92373012e-01  7.62758269e-01  3.95774101e-01]\n [ 3.10997534e-01 -1.05276654e+00  1.04694540e+00  2.64141916e-01]\n [ 2.24968346e+00 -1.31979479e-01  1.33113254e+00  1.44883158e+00]\n [ 5.53333275e-01  7.88807586e-01  1.04694540e+00  1.58046376e+00]\n [ 6.74501145e-01  9.82172869e-02  9.90107977e-01  7.90670654e-01]\n [ 1.89829664e-01 -1.31979479e-01  5.92245988e-01  7.90670654e-01]\n [ 1.28034050e+00  9.82172869e-02  9.33270550e-01  1.18556721e+00]\n [ 1.03800476e+00  9.82172869e-02  1.04694540e+00  1.58046376e+00]\n [ 1.28034050e+00  9.82172869e-02  7.62758269e-01  1.44883158e+00]\n [-5.25060772e-02 -8.22569778e-01  7.62758269e-01  9.22302838e-01]\n [ 1.15917263e+00  3.28414053e-01  1.21745768e+00  1.44883158e+00]\n [ 1.03800476e+00  5.58610819e-01  1.10378283e+00  1.71209594e+00]\n [ 1.03800476e+00 -1.31979479e-01  8.19595696e-01  1.44883158e+00]\n [ 5.53333275e-01 -1.28296331e+00  7.05920842e-01  9.22302838e-01]\n [ 7.95669016e-01 -1.31979479e-01  8.19595696e-01  1.05393502e+00]\n [ 4.32165405e-01  7.88807586e-01  9.33270550e-01  1.44883158e+00]\n [ 6.86617933e-02 -1.31979479e-01  7.62758269e-01  7.90670654e-01]]\n"}},"pos":7.5,"state":"done","type":"cell"}
{"id":0,"time":1657209260361,"type":"user"}
{"last_load":1657209029559,"type":"file"}